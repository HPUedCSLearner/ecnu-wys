
mpiwrapper.o:     file format elf64-x86-64


Disassembly of section .text:

0000000000000000 <MPI_Init>:
       0:	55                   	push   %rbp
       1:	48 89 e5             	mov    %rsp,%rbp
       4:	48 83 ec 30          	sub    $0x30,%rsp
       8:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
       c:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
      10:	48 8b 45 08          	mov    0x8(%rbp),%rax
      14:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
      18:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
      1c:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
      20:	b8 00 00 00 00       	mov    $0x0,%eax
      25:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
      29:	48 89 c7             	mov    %rax,%rdi
      2c:	48 89 d6             	mov    %rdx,%rsi
      2f:	e8 00 00 00 00       	callq  34 <MPI_Init+0x34>
      34:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
      38:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
      3c:	48 89 c7             	mov    %rax,%rdi
      3f:	48 89 d6             	mov    %rdx,%rsi
      42:	e8 00 00 00 00       	callq  47 <MPI_Init+0x47>
      47:	89 45 d0             	mov    %eax,-0x30(%rbp)
      4a:	8b 45 d0             	mov    -0x30(%rbp),%eax
      4d:	89 45 d4             	mov    %eax,-0x2c(%rbp)
      50:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
      54:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
      58:	b8 00 00 00 00       	mov    $0x0,%eax
      5d:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
      61:	48 89 c7             	mov    %rax,%rdi
      64:	48 89 d6             	mov    %rdx,%rsi
      67:	e8 00 00 00 00       	callq  6c <MPI_Init+0x6c>
      6c:	8b 45 d4             	mov    -0x2c(%rbp),%eax
      6f:	c9                   	leaveq 
      70:	c3                   	retq   

0000000000000071 <MPI_Finalize>:
      71:	55                   	push   %rbp
      72:	48 89 e5             	mov    %rsp,%rbp
      75:	48 83 ec 20          	sub    $0x20,%rsp
      79:	48 8b 45 08          	mov    0x8(%rbp),%rax
      7d:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
      81:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
      85:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
      89:	b8 00 00 00 00       	mov    $0x0,%eax
      8e:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
      92:	48 89 c7             	mov    %rax,%rdi
      95:	48 89 d6             	mov    %rdx,%rsi
      98:	e8 00 00 00 00       	callq  9d <MPI_Finalize+0x2c>
      9d:	e8 00 00 00 00       	callq  a2 <MPI_Finalize+0x31>
      a2:	89 45 e0             	mov    %eax,-0x20(%rbp)
      a5:	8b 45 e0             	mov    -0x20(%rbp),%eax
      a8:	89 45 e4             	mov    %eax,-0x1c(%rbp)
      ab:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
      af:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
      b3:	b8 00 00 00 00       	mov    $0x0,%eax
      b8:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
      bc:	48 89 c7             	mov    %rax,%rdi
      bf:	48 89 d6             	mov    %rdx,%rsi
      c2:	e8 00 00 00 00       	callq  c7 <MPI_Finalize+0x56>
      c7:	8b 45 e4             	mov    -0x1c(%rbp),%eax
      ca:	c9                   	leaveq 
      cb:	c3                   	retq   

00000000000000cc <MPI_Bsend>:
      cc:	55                   	push   %rbp
      cd:	48 89 e5             	mov    %rsp,%rbp
      d0:	48 83 ec 70          	sub    $0x70,%rsp
      d4:	48 89 5d f0          	mov    %rbx,-0x10(%rbp)
      d8:	48 89 7d 98          	mov    %rdi,-0x68(%rbp)
      dc:	89 75 a0             	mov    %esi,-0x60(%rbp)
      df:	89 55 a8             	mov    %edx,-0x58(%rbp)
      e2:	89 4d b0             	mov    %ecx,-0x50(%rbp)
      e5:	44 89 45 b8          	mov    %r8d,-0x48(%rbp)
      e9:	44 89 4d c0          	mov    %r9d,-0x40(%rbp)
      ed:	48 8b 45 08          	mov    0x8(%rbp),%rax
      f1:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
      f5:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
      f9:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
      fd:	b8 00 00 00 00       	mov    $0x0,%eax
     102:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
     106:	48 89 c7             	mov    %rax,%rdi
     109:	48 89 d6             	mov    %rdx,%rsi
     10c:	e8 00 00 00 00       	callq  111 <MPI_Bsend+0x45>
     111:	48 8b 45 98          	mov    -0x68(%rbp),%rax
     115:	8b 55 a0             	mov    -0x60(%rbp),%edx
     118:	8b 4d a8             	mov    -0x58(%rbp),%ecx
     11b:	8b 5d b0             	mov    -0x50(%rbp),%ebx
     11e:	8b 75 b8             	mov    -0x48(%rbp),%esi
     121:	8b 7d c0             	mov    -0x40(%rbp),%edi
     124:	89 7d e0             	mov    %edi,-0x20(%rbp)
     127:	48 89 c7             	mov    %rax,%rdi
     12a:	89 75 e8             	mov    %esi,-0x18(%rbp)
     12d:	89 d6                	mov    %edx,%esi
     12f:	89 ca                	mov    %ecx,%edx
     131:	89 d9                	mov    %ebx,%ecx
     133:	8b 45 e8             	mov    -0x18(%rbp),%eax
     136:	41 89 c0             	mov    %eax,%r8d
     139:	8b 45 e0             	mov    -0x20(%rbp),%eax
     13c:	41 89 c1             	mov    %eax,%r9d
     13f:	e8 00 00 00 00       	callq  144 <MPI_Bsend+0x78>
     144:	89 45 90             	mov    %eax,-0x70(%rbp)
     147:	8b 45 90             	mov    -0x70(%rbp),%eax
     14a:	89 45 94             	mov    %eax,-0x6c(%rbp)
     14d:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
     151:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
     155:	b8 00 00 00 00       	mov    $0x0,%eax
     15a:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
     15e:	48 89 c7             	mov    %rax,%rdi
     161:	48 89 d6             	mov    %rdx,%rsi
     164:	e8 00 00 00 00       	callq  169 <MPI_Bsend+0x9d>
     169:	8b 45 94             	mov    -0x6c(%rbp),%eax
     16c:	48 8b 5d f0          	mov    -0x10(%rbp),%rbx
     170:	c9                   	leaveq 
     171:	c3                   	retq   

0000000000000172 <MPI_Bsend_init>:
     172:	55                   	push   %rbp
     173:	48 89 e5             	mov    %rsp,%rbp
     176:	48 83 ec 70          	sub    $0x70,%rsp
     17a:	48 89 5d f0          	mov    %rbx,-0x10(%rbp)
     17e:	48 89 7d 98          	mov    %rdi,-0x68(%rbp)
     182:	89 75 a0             	mov    %esi,-0x60(%rbp)
     185:	89 55 a8             	mov    %edx,-0x58(%rbp)
     188:	89 4d b0             	mov    %ecx,-0x50(%rbp)
     18b:	44 89 45 b8          	mov    %r8d,-0x48(%rbp)
     18f:	44 89 4d c0          	mov    %r9d,-0x40(%rbp)
     193:	48 8b 45 08          	mov    0x8(%rbp),%rax
     197:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
     19b:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
     19f:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
     1a3:	b8 00 00 00 00       	mov    $0x0,%eax
     1a8:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
     1ac:	48 89 c7             	mov    %rax,%rdi
     1af:	48 89 d6             	mov    %rdx,%rsi
     1b2:	e8 00 00 00 00       	callq  1b7 <MPI_Bsend_init+0x45>
     1b7:	48 83 c4 f0          	add    $0xfffffffffffffff0,%rsp
     1bb:	48 8b 45 98          	mov    -0x68(%rbp),%rax
     1bf:	8b 55 a0             	mov    -0x60(%rbp),%edx
     1c2:	8b 4d a8             	mov    -0x58(%rbp),%ecx
     1c5:	8b 5d b0             	mov    -0x50(%rbp),%ebx
     1c8:	8b 75 b8             	mov    -0x48(%rbp),%esi
     1cb:	8b 7d c0             	mov    -0x40(%rbp),%edi
     1ce:	4c 8b 45 10          	mov    0x10(%rbp),%r8
     1d2:	4c 89 04 24          	mov    %r8,(%rsp)
     1d6:	89 7d e0             	mov    %edi,-0x20(%rbp)
     1d9:	48 89 c7             	mov    %rax,%rdi
     1dc:	89 75 e8             	mov    %esi,-0x18(%rbp)
     1df:	89 d6                	mov    %edx,%esi
     1e1:	89 ca                	mov    %ecx,%edx
     1e3:	89 d9                	mov    %ebx,%ecx
     1e5:	8b 45 e8             	mov    -0x18(%rbp),%eax
     1e8:	41 89 c0             	mov    %eax,%r8d
     1eb:	8b 45 e0             	mov    -0x20(%rbp),%eax
     1ee:	41 89 c1             	mov    %eax,%r9d
     1f1:	e8 00 00 00 00       	callq  1f6 <MPI_Bsend_init+0x84>
     1f6:	89 45 90             	mov    %eax,-0x70(%rbp)
     1f9:	48 83 c4 10          	add    $0x10,%rsp
     1fd:	8b 45 90             	mov    -0x70(%rbp),%eax
     200:	89 45 94             	mov    %eax,-0x6c(%rbp)
     203:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
     207:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
     20b:	b8 00 00 00 00       	mov    $0x0,%eax
     210:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
     214:	48 89 c7             	mov    %rax,%rdi
     217:	48 89 d6             	mov    %rdx,%rsi
     21a:	e8 00 00 00 00       	callq  21f <MPI_Bsend_init+0xad>
     21f:	8b 45 94             	mov    -0x6c(%rbp),%eax
     222:	48 8b 5d f0          	mov    -0x10(%rbp),%rbx
     226:	c9                   	leaveq 
     227:	c3                   	retq   

0000000000000228 <MPI_Recv_init>:
     228:	55                   	push   %rbp
     229:	48 89 e5             	mov    %rsp,%rbp
     22c:	48 83 ec 70          	sub    $0x70,%rsp
     230:	48 89 5d f0          	mov    %rbx,-0x10(%rbp)
     234:	48 89 7d 98          	mov    %rdi,-0x68(%rbp)
     238:	89 75 a0             	mov    %esi,-0x60(%rbp)
     23b:	89 55 a8             	mov    %edx,-0x58(%rbp)
     23e:	89 4d b0             	mov    %ecx,-0x50(%rbp)
     241:	44 89 45 b8          	mov    %r8d,-0x48(%rbp)
     245:	44 89 4d c0          	mov    %r9d,-0x40(%rbp)
     249:	48 8b 45 08          	mov    0x8(%rbp),%rax
     24d:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
     251:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
     255:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
     259:	b8 00 00 00 00       	mov    $0x0,%eax
     25e:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
     262:	48 89 c7             	mov    %rax,%rdi
     265:	48 89 d6             	mov    %rdx,%rsi
     268:	e8 00 00 00 00       	callq  26d <MPI_Recv_init+0x45>
     26d:	48 83 c4 f0          	add    $0xfffffffffffffff0,%rsp
     271:	48 8b 45 98          	mov    -0x68(%rbp),%rax
     275:	8b 55 a0             	mov    -0x60(%rbp),%edx
     278:	8b 4d a8             	mov    -0x58(%rbp),%ecx
     27b:	8b 5d b0             	mov    -0x50(%rbp),%ebx
     27e:	8b 75 b8             	mov    -0x48(%rbp),%esi
     281:	8b 7d c0             	mov    -0x40(%rbp),%edi
     284:	4c 8b 45 10          	mov    0x10(%rbp),%r8
     288:	4c 89 04 24          	mov    %r8,(%rsp)
     28c:	89 7d e0             	mov    %edi,-0x20(%rbp)
     28f:	48 89 c7             	mov    %rax,%rdi
     292:	89 75 e8             	mov    %esi,-0x18(%rbp)
     295:	89 d6                	mov    %edx,%esi
     297:	89 ca                	mov    %ecx,%edx
     299:	89 d9                	mov    %ebx,%ecx
     29b:	8b 45 e8             	mov    -0x18(%rbp),%eax
     29e:	41 89 c0             	mov    %eax,%r8d
     2a1:	8b 45 e0             	mov    -0x20(%rbp),%eax
     2a4:	41 89 c1             	mov    %eax,%r9d
     2a7:	e8 00 00 00 00       	callq  2ac <MPI_Recv_init+0x84>
     2ac:	89 45 90             	mov    %eax,-0x70(%rbp)
     2af:	48 83 c4 10          	add    $0x10,%rsp
     2b3:	8b 45 90             	mov    -0x70(%rbp),%eax
     2b6:	89 45 94             	mov    %eax,-0x6c(%rbp)
     2b9:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
     2bd:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
     2c1:	b8 00 00 00 00       	mov    $0x0,%eax
     2c6:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
     2ca:	48 89 c7             	mov    %rax,%rdi
     2cd:	48 89 d6             	mov    %rdx,%rsi
     2d0:	e8 00 00 00 00       	callq  2d5 <MPI_Recv_init+0xad>
     2d5:	8b 45 94             	mov    -0x6c(%rbp),%eax
     2d8:	48 8b 5d f0          	mov    -0x10(%rbp),%rbx
     2dc:	c9                   	leaveq 
     2dd:	c3                   	retq   

00000000000002de <MPI_Send_init>:
     2de:	55                   	push   %rbp
     2df:	48 89 e5             	mov    %rsp,%rbp
     2e2:	48 83 ec 70          	sub    $0x70,%rsp
     2e6:	48 89 5d f0          	mov    %rbx,-0x10(%rbp)
     2ea:	48 89 7d 98          	mov    %rdi,-0x68(%rbp)
     2ee:	89 75 a0             	mov    %esi,-0x60(%rbp)
     2f1:	89 55 a8             	mov    %edx,-0x58(%rbp)
     2f4:	89 4d b0             	mov    %ecx,-0x50(%rbp)
     2f7:	44 89 45 b8          	mov    %r8d,-0x48(%rbp)
     2fb:	44 89 4d c0          	mov    %r9d,-0x40(%rbp)
     2ff:	48 8b 45 08          	mov    0x8(%rbp),%rax
     303:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
     307:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
     30b:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
     30f:	b8 00 00 00 00       	mov    $0x0,%eax
     314:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
     318:	48 89 c7             	mov    %rax,%rdi
     31b:	48 89 d6             	mov    %rdx,%rsi
     31e:	e8 00 00 00 00       	callq  323 <MPI_Send_init+0x45>
     323:	48 83 c4 f0          	add    $0xfffffffffffffff0,%rsp
     327:	48 8b 45 98          	mov    -0x68(%rbp),%rax
     32b:	8b 55 a0             	mov    -0x60(%rbp),%edx
     32e:	8b 4d a8             	mov    -0x58(%rbp),%ecx
     331:	8b 5d b0             	mov    -0x50(%rbp),%ebx
     334:	8b 75 b8             	mov    -0x48(%rbp),%esi
     337:	8b 7d c0             	mov    -0x40(%rbp),%edi
     33a:	4c 8b 45 10          	mov    0x10(%rbp),%r8
     33e:	4c 89 04 24          	mov    %r8,(%rsp)
     342:	89 7d e0             	mov    %edi,-0x20(%rbp)
     345:	48 89 c7             	mov    %rax,%rdi
     348:	89 75 e8             	mov    %esi,-0x18(%rbp)
     34b:	89 d6                	mov    %edx,%esi
     34d:	89 ca                	mov    %ecx,%edx
     34f:	89 d9                	mov    %ebx,%ecx
     351:	8b 45 e8             	mov    -0x18(%rbp),%eax
     354:	41 89 c0             	mov    %eax,%r8d
     357:	8b 45 e0             	mov    -0x20(%rbp),%eax
     35a:	41 89 c1             	mov    %eax,%r9d
     35d:	e8 00 00 00 00       	callq  362 <MPI_Send_init+0x84>
     362:	89 45 90             	mov    %eax,-0x70(%rbp)
     365:	48 83 c4 10          	add    $0x10,%rsp
     369:	8b 45 90             	mov    -0x70(%rbp),%eax
     36c:	89 45 94             	mov    %eax,-0x6c(%rbp)
     36f:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
     373:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
     377:	b8 00 00 00 00       	mov    $0x0,%eax
     37c:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
     380:	48 89 c7             	mov    %rax,%rdi
     383:	48 89 d6             	mov    %rdx,%rsi
     386:	e8 00 00 00 00       	callq  38b <MPI_Send_init+0xad>
     38b:	8b 45 94             	mov    -0x6c(%rbp),%eax
     38e:	48 8b 5d f0          	mov    -0x10(%rbp),%rbx
     392:	c9                   	leaveq 
     393:	c3                   	retq   

0000000000000394 <MPI_Ibsend>:
     394:	55                   	push   %rbp
     395:	48 89 e5             	mov    %rsp,%rbp
     398:	48 83 ec 70          	sub    $0x70,%rsp
     39c:	48 89 5d f0          	mov    %rbx,-0x10(%rbp)
     3a0:	48 89 7d 98          	mov    %rdi,-0x68(%rbp)
     3a4:	89 75 a0             	mov    %esi,-0x60(%rbp)
     3a7:	89 55 a8             	mov    %edx,-0x58(%rbp)
     3aa:	89 4d b0             	mov    %ecx,-0x50(%rbp)
     3ad:	44 89 45 b8          	mov    %r8d,-0x48(%rbp)
     3b1:	44 89 4d c0          	mov    %r9d,-0x40(%rbp)
     3b5:	48 8b 45 08          	mov    0x8(%rbp),%rax
     3b9:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
     3bd:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
     3c1:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
     3c5:	b8 00 00 00 00       	mov    $0x0,%eax
     3ca:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
     3ce:	48 89 c7             	mov    %rax,%rdi
     3d1:	48 89 d6             	mov    %rdx,%rsi
     3d4:	e8 00 00 00 00       	callq  3d9 <MPI_Ibsend+0x45>
     3d9:	48 83 c4 f0          	add    $0xfffffffffffffff0,%rsp
     3dd:	48 8b 45 98          	mov    -0x68(%rbp),%rax
     3e1:	8b 55 a0             	mov    -0x60(%rbp),%edx
     3e4:	8b 4d a8             	mov    -0x58(%rbp),%ecx
     3e7:	8b 5d b0             	mov    -0x50(%rbp),%ebx
     3ea:	8b 75 b8             	mov    -0x48(%rbp),%esi
     3ed:	8b 7d c0             	mov    -0x40(%rbp),%edi
     3f0:	4c 8b 45 10          	mov    0x10(%rbp),%r8
     3f4:	4c 89 04 24          	mov    %r8,(%rsp)
     3f8:	89 7d e0             	mov    %edi,-0x20(%rbp)
     3fb:	48 89 c7             	mov    %rax,%rdi
     3fe:	89 75 e8             	mov    %esi,-0x18(%rbp)
     401:	89 d6                	mov    %edx,%esi
     403:	89 ca                	mov    %ecx,%edx
     405:	89 d9                	mov    %ebx,%ecx
     407:	8b 45 e8             	mov    -0x18(%rbp),%eax
     40a:	41 89 c0             	mov    %eax,%r8d
     40d:	8b 45 e0             	mov    -0x20(%rbp),%eax
     410:	41 89 c1             	mov    %eax,%r9d
     413:	e8 00 00 00 00       	callq  418 <MPI_Ibsend+0x84>
     418:	89 45 90             	mov    %eax,-0x70(%rbp)
     41b:	48 83 c4 10          	add    $0x10,%rsp
     41f:	8b 45 90             	mov    -0x70(%rbp),%eax
     422:	89 45 94             	mov    %eax,-0x6c(%rbp)
     425:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
     429:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
     42d:	b8 00 00 00 00       	mov    $0x0,%eax
     432:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
     436:	48 89 c7             	mov    %rax,%rdi
     439:	48 89 d6             	mov    %rdx,%rsi
     43c:	e8 00 00 00 00       	callq  441 <MPI_Ibsend+0xad>
     441:	8b 45 94             	mov    -0x6c(%rbp),%eax
     444:	48 8b 5d f0          	mov    -0x10(%rbp),%rbx
     448:	c9                   	leaveq 
     449:	c3                   	retq   

000000000000044a <MPI_Irecv>:
     44a:	55                   	push   %rbp
     44b:	48 89 e5             	mov    %rsp,%rbp
     44e:	48 83 ec 70          	sub    $0x70,%rsp
     452:	48 89 5d f0          	mov    %rbx,-0x10(%rbp)
     456:	48 89 7d 98          	mov    %rdi,-0x68(%rbp)
     45a:	89 75 a0             	mov    %esi,-0x60(%rbp)
     45d:	89 55 a8             	mov    %edx,-0x58(%rbp)
     460:	89 4d b0             	mov    %ecx,-0x50(%rbp)
     463:	44 89 45 b8          	mov    %r8d,-0x48(%rbp)
     467:	44 89 4d c0          	mov    %r9d,-0x40(%rbp)
     46b:	48 8b 45 08          	mov    0x8(%rbp),%rax
     46f:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
     473:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
     477:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
     47b:	b8 00 00 00 00       	mov    $0x0,%eax
     480:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
     484:	48 89 c7             	mov    %rax,%rdi
     487:	48 89 d6             	mov    %rdx,%rsi
     48a:	e8 00 00 00 00       	callq  48f <MPI_Irecv+0x45>
     48f:	48 83 c4 f0          	add    $0xfffffffffffffff0,%rsp
     493:	48 8b 45 98          	mov    -0x68(%rbp),%rax
     497:	8b 55 a0             	mov    -0x60(%rbp),%edx
     49a:	8b 4d a8             	mov    -0x58(%rbp),%ecx
     49d:	8b 5d b0             	mov    -0x50(%rbp),%ebx
     4a0:	8b 75 b8             	mov    -0x48(%rbp),%esi
     4a3:	8b 7d c0             	mov    -0x40(%rbp),%edi
     4a6:	4c 8b 45 10          	mov    0x10(%rbp),%r8
     4aa:	4c 89 04 24          	mov    %r8,(%rsp)
     4ae:	89 7d e0             	mov    %edi,-0x20(%rbp)
     4b1:	48 89 c7             	mov    %rax,%rdi
     4b4:	89 75 e8             	mov    %esi,-0x18(%rbp)
     4b7:	89 d6                	mov    %edx,%esi
     4b9:	89 ca                	mov    %ecx,%edx
     4bb:	89 d9                	mov    %ebx,%ecx
     4bd:	8b 45 e8             	mov    -0x18(%rbp),%eax
     4c0:	41 89 c0             	mov    %eax,%r8d
     4c3:	8b 45 e0             	mov    -0x20(%rbp),%eax
     4c6:	41 89 c1             	mov    %eax,%r9d
     4c9:	e8 00 00 00 00       	callq  4ce <MPI_Irecv+0x84>
     4ce:	89 45 90             	mov    %eax,-0x70(%rbp)
     4d1:	48 83 c4 10          	add    $0x10,%rsp
     4d5:	8b 45 90             	mov    -0x70(%rbp),%eax
     4d8:	89 45 94             	mov    %eax,-0x6c(%rbp)
     4db:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
     4df:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
     4e3:	b8 00 00 00 00       	mov    $0x0,%eax
     4e8:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
     4ec:	48 89 c7             	mov    %rax,%rdi
     4ef:	48 89 d6             	mov    %rdx,%rsi
     4f2:	e8 00 00 00 00       	callq  4f7 <MPI_Irecv+0xad>
     4f7:	8b 45 94             	mov    -0x6c(%rbp),%eax
     4fa:	48 8b 5d f0          	mov    -0x10(%rbp),%rbx
     4fe:	c9                   	leaveq 
     4ff:	c3                   	retq   

0000000000000500 <MPI_Irsend>:
     500:	55                   	push   %rbp
     501:	48 89 e5             	mov    %rsp,%rbp
     504:	48 83 ec 70          	sub    $0x70,%rsp
     508:	48 89 5d f0          	mov    %rbx,-0x10(%rbp)
     50c:	48 89 7d 98          	mov    %rdi,-0x68(%rbp)
     510:	89 75 a0             	mov    %esi,-0x60(%rbp)
     513:	89 55 a8             	mov    %edx,-0x58(%rbp)
     516:	89 4d b0             	mov    %ecx,-0x50(%rbp)
     519:	44 89 45 b8          	mov    %r8d,-0x48(%rbp)
     51d:	44 89 4d c0          	mov    %r9d,-0x40(%rbp)
     521:	48 8b 45 08          	mov    0x8(%rbp),%rax
     525:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
     529:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
     52d:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
     531:	b8 00 00 00 00       	mov    $0x0,%eax
     536:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
     53a:	48 89 c7             	mov    %rax,%rdi
     53d:	48 89 d6             	mov    %rdx,%rsi
     540:	e8 00 00 00 00       	callq  545 <MPI_Irsend+0x45>
     545:	48 83 c4 f0          	add    $0xfffffffffffffff0,%rsp
     549:	48 8b 45 98          	mov    -0x68(%rbp),%rax
     54d:	8b 55 a0             	mov    -0x60(%rbp),%edx
     550:	8b 4d a8             	mov    -0x58(%rbp),%ecx
     553:	8b 5d b0             	mov    -0x50(%rbp),%ebx
     556:	8b 75 b8             	mov    -0x48(%rbp),%esi
     559:	8b 7d c0             	mov    -0x40(%rbp),%edi
     55c:	4c 8b 45 10          	mov    0x10(%rbp),%r8
     560:	4c 89 04 24          	mov    %r8,(%rsp)
     564:	89 7d e0             	mov    %edi,-0x20(%rbp)
     567:	48 89 c7             	mov    %rax,%rdi
     56a:	89 75 e8             	mov    %esi,-0x18(%rbp)
     56d:	89 d6                	mov    %edx,%esi
     56f:	89 ca                	mov    %ecx,%edx
     571:	89 d9                	mov    %ebx,%ecx
     573:	8b 45 e8             	mov    -0x18(%rbp),%eax
     576:	41 89 c0             	mov    %eax,%r8d
     579:	8b 45 e0             	mov    -0x20(%rbp),%eax
     57c:	41 89 c1             	mov    %eax,%r9d
     57f:	e8 00 00 00 00       	callq  584 <MPI_Irsend+0x84>
     584:	89 45 90             	mov    %eax,-0x70(%rbp)
     587:	48 83 c4 10          	add    $0x10,%rsp
     58b:	8b 45 90             	mov    -0x70(%rbp),%eax
     58e:	89 45 94             	mov    %eax,-0x6c(%rbp)
     591:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
     595:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
     599:	b8 00 00 00 00       	mov    $0x0,%eax
     59e:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
     5a2:	48 89 c7             	mov    %rax,%rdi
     5a5:	48 89 d6             	mov    %rdx,%rsi
     5a8:	e8 00 00 00 00       	callq  5ad <MPI_Irsend+0xad>
     5ad:	8b 45 94             	mov    -0x6c(%rbp),%eax
     5b0:	48 8b 5d f0          	mov    -0x10(%rbp),%rbx
     5b4:	c9                   	leaveq 
     5b5:	c3                   	retq   

00000000000005b6 <MPI_Isend>:
     5b6:	55                   	push   %rbp
     5b7:	48 89 e5             	mov    %rsp,%rbp
     5ba:	48 83 ec 70          	sub    $0x70,%rsp
     5be:	48 89 5d f0          	mov    %rbx,-0x10(%rbp)
     5c2:	48 89 7d 98          	mov    %rdi,-0x68(%rbp)
     5c6:	89 75 a0             	mov    %esi,-0x60(%rbp)
     5c9:	89 55 a8             	mov    %edx,-0x58(%rbp)
     5cc:	89 4d b0             	mov    %ecx,-0x50(%rbp)
     5cf:	44 89 45 b8          	mov    %r8d,-0x48(%rbp)
     5d3:	44 89 4d c0          	mov    %r9d,-0x40(%rbp)
     5d7:	48 8b 45 08          	mov    0x8(%rbp),%rax
     5db:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
     5df:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
     5e3:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
     5e7:	b8 00 00 00 00       	mov    $0x0,%eax
     5ec:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
     5f0:	48 89 c7             	mov    %rax,%rdi
     5f3:	48 89 d6             	mov    %rdx,%rsi
     5f6:	e8 00 00 00 00       	callq  5fb <MPI_Isend+0x45>
     5fb:	48 83 c4 f0          	add    $0xfffffffffffffff0,%rsp
     5ff:	48 8b 45 98          	mov    -0x68(%rbp),%rax
     603:	8b 55 a0             	mov    -0x60(%rbp),%edx
     606:	8b 4d a8             	mov    -0x58(%rbp),%ecx
     609:	8b 5d b0             	mov    -0x50(%rbp),%ebx
     60c:	8b 75 b8             	mov    -0x48(%rbp),%esi
     60f:	8b 7d c0             	mov    -0x40(%rbp),%edi
     612:	4c 8b 45 10          	mov    0x10(%rbp),%r8
     616:	4c 89 04 24          	mov    %r8,(%rsp)
     61a:	89 7d e0             	mov    %edi,-0x20(%rbp)
     61d:	48 89 c7             	mov    %rax,%rdi
     620:	89 75 e8             	mov    %esi,-0x18(%rbp)
     623:	89 d6                	mov    %edx,%esi
     625:	89 ca                	mov    %ecx,%edx
     627:	89 d9                	mov    %ebx,%ecx
     629:	8b 45 e8             	mov    -0x18(%rbp),%eax
     62c:	41 89 c0             	mov    %eax,%r8d
     62f:	8b 45 e0             	mov    -0x20(%rbp),%eax
     632:	41 89 c1             	mov    %eax,%r9d
     635:	e8 00 00 00 00       	callq  63a <MPI_Isend+0x84>
     63a:	89 45 90             	mov    %eax,-0x70(%rbp)
     63d:	48 83 c4 10          	add    $0x10,%rsp
     641:	8b 45 90             	mov    -0x70(%rbp),%eax
     644:	89 45 94             	mov    %eax,-0x6c(%rbp)
     647:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
     64b:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
     64f:	b8 00 00 00 00       	mov    $0x0,%eax
     654:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
     658:	48 89 c7             	mov    %rax,%rdi
     65b:	48 89 d6             	mov    %rdx,%rsi
     65e:	e8 00 00 00 00       	callq  663 <MPI_Isend+0xad>
     663:	8b 45 94             	mov    -0x6c(%rbp),%eax
     666:	48 8b 5d f0          	mov    -0x10(%rbp),%rbx
     66a:	c9                   	leaveq 
     66b:	c3                   	retq   

000000000000066c <MPI_Issend>:
     66c:	55                   	push   %rbp
     66d:	48 89 e5             	mov    %rsp,%rbp
     670:	48 83 ec 70          	sub    $0x70,%rsp
     674:	48 89 5d f0          	mov    %rbx,-0x10(%rbp)
     678:	48 89 7d 98          	mov    %rdi,-0x68(%rbp)
     67c:	89 75 a0             	mov    %esi,-0x60(%rbp)
     67f:	89 55 a8             	mov    %edx,-0x58(%rbp)
     682:	89 4d b0             	mov    %ecx,-0x50(%rbp)
     685:	44 89 45 b8          	mov    %r8d,-0x48(%rbp)
     689:	44 89 4d c0          	mov    %r9d,-0x40(%rbp)
     68d:	48 8b 45 08          	mov    0x8(%rbp),%rax
     691:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
     695:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
     699:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
     69d:	b8 00 00 00 00       	mov    $0x0,%eax
     6a2:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
     6a6:	48 89 c7             	mov    %rax,%rdi
     6a9:	48 89 d6             	mov    %rdx,%rsi
     6ac:	e8 00 00 00 00       	callq  6b1 <MPI_Issend+0x45>
     6b1:	48 83 c4 f0          	add    $0xfffffffffffffff0,%rsp
     6b5:	48 8b 45 98          	mov    -0x68(%rbp),%rax
     6b9:	8b 55 a0             	mov    -0x60(%rbp),%edx
     6bc:	8b 4d a8             	mov    -0x58(%rbp),%ecx
     6bf:	8b 5d b0             	mov    -0x50(%rbp),%ebx
     6c2:	8b 75 b8             	mov    -0x48(%rbp),%esi
     6c5:	8b 7d c0             	mov    -0x40(%rbp),%edi
     6c8:	4c 8b 45 10          	mov    0x10(%rbp),%r8
     6cc:	4c 89 04 24          	mov    %r8,(%rsp)
     6d0:	89 7d e0             	mov    %edi,-0x20(%rbp)
     6d3:	48 89 c7             	mov    %rax,%rdi
     6d6:	89 75 e8             	mov    %esi,-0x18(%rbp)
     6d9:	89 d6                	mov    %edx,%esi
     6db:	89 ca                	mov    %ecx,%edx
     6dd:	89 d9                	mov    %ebx,%ecx
     6df:	8b 45 e8             	mov    -0x18(%rbp),%eax
     6e2:	41 89 c0             	mov    %eax,%r8d
     6e5:	8b 45 e0             	mov    -0x20(%rbp),%eax
     6e8:	41 89 c1             	mov    %eax,%r9d
     6eb:	e8 00 00 00 00       	callq  6f0 <MPI_Issend+0x84>
     6f0:	89 45 90             	mov    %eax,-0x70(%rbp)
     6f3:	48 83 c4 10          	add    $0x10,%rsp
     6f7:	8b 45 90             	mov    -0x70(%rbp),%eax
     6fa:	89 45 94             	mov    %eax,-0x6c(%rbp)
     6fd:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
     701:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
     705:	b8 00 00 00 00       	mov    $0x0,%eax
     70a:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
     70e:	48 89 c7             	mov    %rax,%rdi
     711:	48 89 d6             	mov    %rdx,%rsi
     714:	e8 00 00 00 00       	callq  719 <MPI_Issend+0xad>
     719:	8b 45 94             	mov    -0x6c(%rbp),%eax
     71c:	48 8b 5d f0          	mov    -0x10(%rbp),%rbx
     720:	c9                   	leaveq 
     721:	c3                   	retq   

0000000000000722 <MPI_Recv>:
     722:	55                   	push   %rbp
     723:	48 89 e5             	mov    %rsp,%rbp
     726:	48 83 ec 70          	sub    $0x70,%rsp
     72a:	48 89 5d f0          	mov    %rbx,-0x10(%rbp)
     72e:	48 89 7d 98          	mov    %rdi,-0x68(%rbp)
     732:	89 75 a0             	mov    %esi,-0x60(%rbp)
     735:	89 55 a8             	mov    %edx,-0x58(%rbp)
     738:	89 4d b0             	mov    %ecx,-0x50(%rbp)
     73b:	44 89 45 b8          	mov    %r8d,-0x48(%rbp)
     73f:	44 89 4d c0          	mov    %r9d,-0x40(%rbp)
     743:	48 8b 45 08          	mov    0x8(%rbp),%rax
     747:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
     74b:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
     74f:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
     753:	b8 00 00 00 00       	mov    $0x0,%eax
     758:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
     75c:	48 89 c7             	mov    %rax,%rdi
     75f:	48 89 d6             	mov    %rdx,%rsi
     762:	e8 00 00 00 00       	callq  767 <MPI_Recv+0x45>
     767:	48 83 c4 f0          	add    $0xfffffffffffffff0,%rsp
     76b:	48 8b 45 98          	mov    -0x68(%rbp),%rax
     76f:	8b 55 a0             	mov    -0x60(%rbp),%edx
     772:	8b 4d a8             	mov    -0x58(%rbp),%ecx
     775:	8b 5d b0             	mov    -0x50(%rbp),%ebx
     778:	8b 75 b8             	mov    -0x48(%rbp),%esi
     77b:	8b 7d c0             	mov    -0x40(%rbp),%edi
     77e:	4c 8b 45 10          	mov    0x10(%rbp),%r8
     782:	4c 89 04 24          	mov    %r8,(%rsp)
     786:	89 7d e0             	mov    %edi,-0x20(%rbp)
     789:	48 89 c7             	mov    %rax,%rdi
     78c:	89 75 e8             	mov    %esi,-0x18(%rbp)
     78f:	89 d6                	mov    %edx,%esi
     791:	89 ca                	mov    %ecx,%edx
     793:	89 d9                	mov    %ebx,%ecx
     795:	8b 45 e8             	mov    -0x18(%rbp),%eax
     798:	41 89 c0             	mov    %eax,%r8d
     79b:	8b 45 e0             	mov    -0x20(%rbp),%eax
     79e:	41 89 c1             	mov    %eax,%r9d
     7a1:	e8 00 00 00 00       	callq  7a6 <MPI_Recv+0x84>
     7a6:	89 45 90             	mov    %eax,-0x70(%rbp)
     7a9:	48 83 c4 10          	add    $0x10,%rsp
     7ad:	8b 45 90             	mov    -0x70(%rbp),%eax
     7b0:	89 45 94             	mov    %eax,-0x6c(%rbp)
     7b3:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
     7b7:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
     7bb:	b8 00 00 00 00       	mov    $0x0,%eax
     7c0:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
     7c4:	48 89 c7             	mov    %rax,%rdi
     7c7:	48 89 d6             	mov    %rdx,%rsi
     7ca:	e8 00 00 00 00       	callq  7cf <MPI_Recv+0xad>
     7cf:	8b 45 94             	mov    -0x6c(%rbp),%eax
     7d2:	48 8b 5d f0          	mov    -0x10(%rbp),%rbx
     7d6:	c9                   	leaveq 
     7d7:	c3                   	retq   

00000000000007d8 <MPI_Rsend>:
     7d8:	55                   	push   %rbp
     7d9:	48 89 e5             	mov    %rsp,%rbp
     7dc:	48 83 ec 70          	sub    $0x70,%rsp
     7e0:	48 89 5d f0          	mov    %rbx,-0x10(%rbp)
     7e4:	48 89 7d 98          	mov    %rdi,-0x68(%rbp)
     7e8:	89 75 a0             	mov    %esi,-0x60(%rbp)
     7eb:	89 55 a8             	mov    %edx,-0x58(%rbp)
     7ee:	89 4d b0             	mov    %ecx,-0x50(%rbp)
     7f1:	44 89 45 b8          	mov    %r8d,-0x48(%rbp)
     7f5:	44 89 4d c0          	mov    %r9d,-0x40(%rbp)
     7f9:	48 8b 45 08          	mov    0x8(%rbp),%rax
     7fd:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
     801:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
     805:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
     809:	b8 00 00 00 00       	mov    $0x0,%eax
     80e:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
     812:	48 89 c7             	mov    %rax,%rdi
     815:	48 89 d6             	mov    %rdx,%rsi
     818:	e8 00 00 00 00       	callq  81d <MPI_Rsend+0x45>
     81d:	48 8b 45 98          	mov    -0x68(%rbp),%rax
     821:	8b 55 a0             	mov    -0x60(%rbp),%edx
     824:	8b 4d a8             	mov    -0x58(%rbp),%ecx
     827:	8b 5d b0             	mov    -0x50(%rbp),%ebx
     82a:	8b 75 b8             	mov    -0x48(%rbp),%esi
     82d:	8b 7d c0             	mov    -0x40(%rbp),%edi
     830:	89 7d e0             	mov    %edi,-0x20(%rbp)
     833:	48 89 c7             	mov    %rax,%rdi
     836:	89 75 e8             	mov    %esi,-0x18(%rbp)
     839:	89 d6                	mov    %edx,%esi
     83b:	89 ca                	mov    %ecx,%edx
     83d:	89 d9                	mov    %ebx,%ecx
     83f:	8b 45 e8             	mov    -0x18(%rbp),%eax
     842:	41 89 c0             	mov    %eax,%r8d
     845:	8b 45 e0             	mov    -0x20(%rbp),%eax
     848:	41 89 c1             	mov    %eax,%r9d
     84b:	e8 00 00 00 00       	callq  850 <MPI_Rsend+0x78>
     850:	89 45 90             	mov    %eax,-0x70(%rbp)
     853:	8b 45 90             	mov    -0x70(%rbp),%eax
     856:	89 45 94             	mov    %eax,-0x6c(%rbp)
     859:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
     85d:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
     861:	b8 00 00 00 00       	mov    $0x0,%eax
     866:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
     86a:	48 89 c7             	mov    %rax,%rdi
     86d:	48 89 d6             	mov    %rdx,%rsi
     870:	e8 00 00 00 00       	callq  875 <MPI_Rsend+0x9d>
     875:	8b 45 94             	mov    -0x6c(%rbp),%eax
     878:	48 8b 5d f0          	mov    -0x10(%rbp),%rbx
     87c:	c9                   	leaveq 
     87d:	c3                   	retq   

000000000000087e <MPI_Rsend_init>:
     87e:	55                   	push   %rbp
     87f:	48 89 e5             	mov    %rsp,%rbp
     882:	48 83 ec 70          	sub    $0x70,%rsp
     886:	48 89 5d f0          	mov    %rbx,-0x10(%rbp)
     88a:	48 89 7d 98          	mov    %rdi,-0x68(%rbp)
     88e:	89 75 a0             	mov    %esi,-0x60(%rbp)
     891:	89 55 a8             	mov    %edx,-0x58(%rbp)
     894:	89 4d b0             	mov    %ecx,-0x50(%rbp)
     897:	44 89 45 b8          	mov    %r8d,-0x48(%rbp)
     89b:	44 89 4d c0          	mov    %r9d,-0x40(%rbp)
     89f:	48 8b 45 08          	mov    0x8(%rbp),%rax
     8a3:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
     8a7:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
     8ab:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
     8af:	b8 00 00 00 00       	mov    $0x0,%eax
     8b4:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
     8b8:	48 89 c7             	mov    %rax,%rdi
     8bb:	48 89 d6             	mov    %rdx,%rsi
     8be:	e8 00 00 00 00       	callq  8c3 <MPI_Rsend_init+0x45>
     8c3:	48 83 c4 f0          	add    $0xfffffffffffffff0,%rsp
     8c7:	48 8b 45 98          	mov    -0x68(%rbp),%rax
     8cb:	8b 55 a0             	mov    -0x60(%rbp),%edx
     8ce:	8b 4d a8             	mov    -0x58(%rbp),%ecx
     8d1:	8b 5d b0             	mov    -0x50(%rbp),%ebx
     8d4:	8b 75 b8             	mov    -0x48(%rbp),%esi
     8d7:	8b 7d c0             	mov    -0x40(%rbp),%edi
     8da:	4c 8b 45 10          	mov    0x10(%rbp),%r8
     8de:	4c 89 04 24          	mov    %r8,(%rsp)
     8e2:	89 7d e0             	mov    %edi,-0x20(%rbp)
     8e5:	48 89 c7             	mov    %rax,%rdi
     8e8:	89 75 e8             	mov    %esi,-0x18(%rbp)
     8eb:	89 d6                	mov    %edx,%esi
     8ed:	89 ca                	mov    %ecx,%edx
     8ef:	89 d9                	mov    %ebx,%ecx
     8f1:	8b 45 e8             	mov    -0x18(%rbp),%eax
     8f4:	41 89 c0             	mov    %eax,%r8d
     8f7:	8b 45 e0             	mov    -0x20(%rbp),%eax
     8fa:	41 89 c1             	mov    %eax,%r9d
     8fd:	e8 00 00 00 00       	callq  902 <MPI_Rsend_init+0x84>
     902:	89 45 90             	mov    %eax,-0x70(%rbp)
     905:	48 83 c4 10          	add    $0x10,%rsp
     909:	8b 45 90             	mov    -0x70(%rbp),%eax
     90c:	89 45 94             	mov    %eax,-0x6c(%rbp)
     90f:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
     913:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
     917:	b8 00 00 00 00       	mov    $0x0,%eax
     91c:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
     920:	48 89 c7             	mov    %rax,%rdi
     923:	48 89 d6             	mov    %rdx,%rsi
     926:	e8 00 00 00 00       	callq  92b <MPI_Rsend_init+0xad>
     92b:	8b 45 94             	mov    -0x6c(%rbp),%eax
     92e:	48 8b 5d f0          	mov    -0x10(%rbp),%rbx
     932:	c9                   	leaveq 
     933:	c3                   	retq   

0000000000000934 <MPI_Send>:
     934:	55                   	push   %rbp
     935:	48 89 e5             	mov    %rsp,%rbp
     938:	48 83 ec 70          	sub    $0x70,%rsp
     93c:	48 89 5d f0          	mov    %rbx,-0x10(%rbp)
     940:	48 89 7d 98          	mov    %rdi,-0x68(%rbp)
     944:	89 75 a0             	mov    %esi,-0x60(%rbp)
     947:	89 55 a8             	mov    %edx,-0x58(%rbp)
     94a:	89 4d b0             	mov    %ecx,-0x50(%rbp)
     94d:	44 89 45 b8          	mov    %r8d,-0x48(%rbp)
     951:	44 89 4d c0          	mov    %r9d,-0x40(%rbp)
     955:	48 8b 45 08          	mov    0x8(%rbp),%rax
     959:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
     95d:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
     961:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
     965:	b8 00 00 00 00       	mov    $0x0,%eax
     96a:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
     96e:	48 89 c7             	mov    %rax,%rdi
     971:	48 89 d6             	mov    %rdx,%rsi
     974:	e8 00 00 00 00       	callq  979 <MPI_Send+0x45>
     979:	48 8b 45 98          	mov    -0x68(%rbp),%rax
     97d:	8b 55 a0             	mov    -0x60(%rbp),%edx
     980:	8b 4d a8             	mov    -0x58(%rbp),%ecx
     983:	8b 5d b0             	mov    -0x50(%rbp),%ebx
     986:	8b 75 b8             	mov    -0x48(%rbp),%esi
     989:	8b 7d c0             	mov    -0x40(%rbp),%edi
     98c:	89 7d e0             	mov    %edi,-0x20(%rbp)
     98f:	48 89 c7             	mov    %rax,%rdi
     992:	89 75 e8             	mov    %esi,-0x18(%rbp)
     995:	89 d6                	mov    %edx,%esi
     997:	89 ca                	mov    %ecx,%edx
     999:	89 d9                	mov    %ebx,%ecx
     99b:	8b 45 e8             	mov    -0x18(%rbp),%eax
     99e:	41 89 c0             	mov    %eax,%r8d
     9a1:	8b 45 e0             	mov    -0x20(%rbp),%eax
     9a4:	41 89 c1             	mov    %eax,%r9d
     9a7:	e8 00 00 00 00       	callq  9ac <MPI_Send+0x78>
     9ac:	89 45 90             	mov    %eax,-0x70(%rbp)
     9af:	8b 45 90             	mov    -0x70(%rbp),%eax
     9b2:	89 45 94             	mov    %eax,-0x6c(%rbp)
     9b5:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
     9b9:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
     9bd:	b8 00 00 00 00       	mov    $0x0,%eax
     9c2:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
     9c6:	48 89 c7             	mov    %rax,%rdi
     9c9:	48 89 d6             	mov    %rdx,%rsi
     9cc:	e8 00 00 00 00       	callq  9d1 <MPI_Send+0x9d>
     9d1:	8b 45 94             	mov    -0x6c(%rbp),%eax
     9d4:	48 8b 5d f0          	mov    -0x10(%rbp),%rbx
     9d8:	c9                   	leaveq 
     9d9:	c3                   	retq   

00000000000009da <MPI_Sendrecv>:
     9da:	55                   	push   %rbp
     9db:	48 89 e5             	mov    %rsp,%rbp
     9de:	48 83 ec 70          	sub    $0x70,%rsp
     9e2:	48 89 5d f0          	mov    %rbx,-0x10(%rbp)
     9e6:	48 89 7d 98          	mov    %rdi,-0x68(%rbp)
     9ea:	89 75 a0             	mov    %esi,-0x60(%rbp)
     9ed:	89 55 a8             	mov    %edx,-0x58(%rbp)
     9f0:	89 4d b0             	mov    %ecx,-0x50(%rbp)
     9f3:	44 89 45 b8          	mov    %r8d,-0x48(%rbp)
     9f7:	4c 89 4d c0          	mov    %r9,-0x40(%rbp)
     9fb:	48 8b 45 08          	mov    0x8(%rbp),%rax
     9ff:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
     a03:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
     a07:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
     a0b:	b8 00 00 00 00       	mov    $0x0,%eax
     a10:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
     a14:	48 89 c7             	mov    %rax,%rdi
     a17:	48 89 d6             	mov    %rdx,%rsi
     a1a:	e8 00 00 00 00       	callq  a1f <MPI_Sendrecv+0x45>
     a1f:	48 83 c4 d0          	add    $0xffffffffffffffd0,%rsp
     a23:	48 8b 45 98          	mov    -0x68(%rbp),%rax
     a27:	8b 55 a0             	mov    -0x60(%rbp),%edx
     a2a:	8b 4d a8             	mov    -0x58(%rbp),%ecx
     a2d:	8b 5d b0             	mov    -0x50(%rbp),%ebx
     a30:	8b 75 b8             	mov    -0x48(%rbp),%esi
     a33:	48 8b 7d c0          	mov    -0x40(%rbp),%rdi
     a37:	44 8b 45 10          	mov    0x10(%rbp),%r8d
     a3b:	44 89 04 24          	mov    %r8d,(%rsp)
     a3f:	44 8b 45 18          	mov    0x18(%rbp),%r8d
     a43:	44 89 44 24 08       	mov    %r8d,0x8(%rsp)
     a48:	44 8b 45 20          	mov    0x20(%rbp),%r8d
     a4c:	44 89 44 24 10       	mov    %r8d,0x10(%rsp)
     a51:	44 8b 45 28          	mov    0x28(%rbp),%r8d
     a55:	44 89 44 24 18       	mov    %r8d,0x18(%rsp)
     a5a:	44 8b 45 30          	mov    0x30(%rbp),%r8d
     a5e:	44 89 44 24 20       	mov    %r8d,0x20(%rsp)
     a63:	4c 8b 45 38          	mov    0x38(%rbp),%r8
     a67:	4c 89 44 24 28       	mov    %r8,0x28(%rsp)
     a6c:	48 89 7d e0          	mov    %rdi,-0x20(%rbp)
     a70:	48 89 c7             	mov    %rax,%rdi
     a73:	89 75 e8             	mov    %esi,-0x18(%rbp)
     a76:	89 d6                	mov    %edx,%esi
     a78:	89 ca                	mov    %ecx,%edx
     a7a:	89 d9                	mov    %ebx,%ecx
     a7c:	8b 45 e8             	mov    -0x18(%rbp),%eax
     a7f:	41 89 c0             	mov    %eax,%r8d
     a82:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
     a86:	49 89 c1             	mov    %rax,%r9
     a89:	e8 00 00 00 00       	callq  a8e <MPI_Sendrecv+0xb4>
     a8e:	89 45 90             	mov    %eax,-0x70(%rbp)
     a91:	48 83 c4 30          	add    $0x30,%rsp
     a95:	8b 45 90             	mov    -0x70(%rbp),%eax
     a98:	89 45 94             	mov    %eax,-0x6c(%rbp)
     a9b:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
     a9f:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
     aa3:	b8 00 00 00 00       	mov    $0x0,%eax
     aa8:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
     aac:	48 89 c7             	mov    %rax,%rdi
     aaf:	48 89 d6             	mov    %rdx,%rsi
     ab2:	e8 00 00 00 00       	callq  ab7 <MPI_Sendrecv+0xdd>
     ab7:	8b 45 94             	mov    -0x6c(%rbp),%eax
     aba:	48 8b 5d f0          	mov    -0x10(%rbp),%rbx
     abe:	c9                   	leaveq 
     abf:	c3                   	retq   

0000000000000ac0 <MPI_Sendrecv_replace>:
     ac0:	55                   	push   %rbp
     ac1:	48 89 e5             	mov    %rsp,%rbp
     ac4:	48 83 ec 70          	sub    $0x70,%rsp
     ac8:	48 89 5d f0          	mov    %rbx,-0x10(%rbp)
     acc:	48 89 7d 98          	mov    %rdi,-0x68(%rbp)
     ad0:	89 75 a0             	mov    %esi,-0x60(%rbp)
     ad3:	89 55 a8             	mov    %edx,-0x58(%rbp)
     ad6:	89 4d b0             	mov    %ecx,-0x50(%rbp)
     ad9:	44 89 45 b8          	mov    %r8d,-0x48(%rbp)
     add:	44 89 4d c0          	mov    %r9d,-0x40(%rbp)
     ae1:	48 8b 45 08          	mov    0x8(%rbp),%rax
     ae5:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
     ae9:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
     aed:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
     af1:	b8 00 00 00 00       	mov    $0x0,%eax
     af6:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
     afa:	48 89 c7             	mov    %rax,%rdi
     afd:	48 89 d6             	mov    %rdx,%rsi
     b00:	e8 00 00 00 00       	callq  b05 <MPI_Sendrecv_replace+0x45>
     b05:	48 83 c4 e0          	add    $0xffffffffffffffe0,%rsp
     b09:	48 8b 45 98          	mov    -0x68(%rbp),%rax
     b0d:	8b 55 a0             	mov    -0x60(%rbp),%edx
     b10:	8b 4d a8             	mov    -0x58(%rbp),%ecx
     b13:	8b 5d b0             	mov    -0x50(%rbp),%ebx
     b16:	8b 75 b8             	mov    -0x48(%rbp),%esi
     b19:	8b 7d c0             	mov    -0x40(%rbp),%edi
     b1c:	44 8b 45 10          	mov    0x10(%rbp),%r8d
     b20:	44 89 04 24          	mov    %r8d,(%rsp)
     b24:	44 8b 45 18          	mov    0x18(%rbp),%r8d
     b28:	44 89 44 24 08       	mov    %r8d,0x8(%rsp)
     b2d:	4c 8b 45 20          	mov    0x20(%rbp),%r8
     b31:	4c 89 44 24 10       	mov    %r8,0x10(%rsp)
     b36:	89 7d e0             	mov    %edi,-0x20(%rbp)
     b39:	48 89 c7             	mov    %rax,%rdi
     b3c:	89 75 e8             	mov    %esi,-0x18(%rbp)
     b3f:	89 d6                	mov    %edx,%esi
     b41:	89 ca                	mov    %ecx,%edx
     b43:	89 d9                	mov    %ebx,%ecx
     b45:	8b 45 e8             	mov    -0x18(%rbp),%eax
     b48:	41 89 c0             	mov    %eax,%r8d
     b4b:	8b 45 e0             	mov    -0x20(%rbp),%eax
     b4e:	41 89 c1             	mov    %eax,%r9d
     b51:	e8 00 00 00 00       	callq  b56 <MPI_Sendrecv_replace+0x96>
     b56:	89 45 90             	mov    %eax,-0x70(%rbp)
     b59:	48 83 c4 20          	add    $0x20,%rsp
     b5d:	8b 45 90             	mov    -0x70(%rbp),%eax
     b60:	89 45 94             	mov    %eax,-0x6c(%rbp)
     b63:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
     b67:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
     b6b:	b8 00 00 00 00       	mov    $0x0,%eax
     b70:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
     b74:	48 89 c7             	mov    %rax,%rdi
     b77:	48 89 d6             	mov    %rdx,%rsi
     b7a:	e8 00 00 00 00       	callq  b7f <MPI_Sendrecv_replace+0xbf>
     b7f:	8b 45 94             	mov    -0x6c(%rbp),%eax
     b82:	48 8b 5d f0          	mov    -0x10(%rbp),%rbx
     b86:	c9                   	leaveq 
     b87:	c3                   	retq   

0000000000000b88 <MPI_Ssend>:
     b88:	55                   	push   %rbp
     b89:	48 89 e5             	mov    %rsp,%rbp
     b8c:	48 83 ec 70          	sub    $0x70,%rsp
     b90:	48 89 5d f0          	mov    %rbx,-0x10(%rbp)
     b94:	48 89 7d 98          	mov    %rdi,-0x68(%rbp)
     b98:	89 75 a0             	mov    %esi,-0x60(%rbp)
     b9b:	89 55 a8             	mov    %edx,-0x58(%rbp)
     b9e:	89 4d b0             	mov    %ecx,-0x50(%rbp)
     ba1:	44 89 45 b8          	mov    %r8d,-0x48(%rbp)
     ba5:	44 89 4d c0          	mov    %r9d,-0x40(%rbp)
     ba9:	48 8b 45 08          	mov    0x8(%rbp),%rax
     bad:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
     bb1:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
     bb5:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
     bb9:	b8 00 00 00 00       	mov    $0x0,%eax
     bbe:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
     bc2:	48 89 c7             	mov    %rax,%rdi
     bc5:	48 89 d6             	mov    %rdx,%rsi
     bc8:	e8 00 00 00 00       	callq  bcd <MPI_Ssend+0x45>
     bcd:	48 8b 45 98          	mov    -0x68(%rbp),%rax
     bd1:	8b 55 a0             	mov    -0x60(%rbp),%edx
     bd4:	8b 4d a8             	mov    -0x58(%rbp),%ecx
     bd7:	8b 5d b0             	mov    -0x50(%rbp),%ebx
     bda:	8b 75 b8             	mov    -0x48(%rbp),%esi
     bdd:	8b 7d c0             	mov    -0x40(%rbp),%edi
     be0:	89 7d e0             	mov    %edi,-0x20(%rbp)
     be3:	48 89 c7             	mov    %rax,%rdi
     be6:	89 75 e8             	mov    %esi,-0x18(%rbp)
     be9:	89 d6                	mov    %edx,%esi
     beb:	89 ca                	mov    %ecx,%edx
     bed:	89 d9                	mov    %ebx,%ecx
     bef:	8b 45 e8             	mov    -0x18(%rbp),%eax
     bf2:	41 89 c0             	mov    %eax,%r8d
     bf5:	8b 45 e0             	mov    -0x20(%rbp),%eax
     bf8:	41 89 c1             	mov    %eax,%r9d
     bfb:	e8 00 00 00 00       	callq  c00 <MPI_Ssend+0x78>
     c00:	89 45 90             	mov    %eax,-0x70(%rbp)
     c03:	8b 45 90             	mov    -0x70(%rbp),%eax
     c06:	89 45 94             	mov    %eax,-0x6c(%rbp)
     c09:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
     c0d:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
     c11:	b8 00 00 00 00       	mov    $0x0,%eax
     c16:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
     c1a:	48 89 c7             	mov    %rax,%rdi
     c1d:	48 89 d6             	mov    %rdx,%rsi
     c20:	e8 00 00 00 00       	callq  c25 <MPI_Ssend+0x9d>
     c25:	8b 45 94             	mov    -0x6c(%rbp),%eax
     c28:	48 8b 5d f0          	mov    -0x10(%rbp),%rbx
     c2c:	c9                   	leaveq 
     c2d:	c3                   	retq   

0000000000000c2e <MPI_Ssend_init>:
     c2e:	55                   	push   %rbp
     c2f:	48 89 e5             	mov    %rsp,%rbp
     c32:	48 83 ec 70          	sub    $0x70,%rsp
     c36:	48 89 5d f0          	mov    %rbx,-0x10(%rbp)
     c3a:	48 89 7d 98          	mov    %rdi,-0x68(%rbp)
     c3e:	89 75 a0             	mov    %esi,-0x60(%rbp)
     c41:	89 55 a8             	mov    %edx,-0x58(%rbp)
     c44:	89 4d b0             	mov    %ecx,-0x50(%rbp)
     c47:	44 89 45 b8          	mov    %r8d,-0x48(%rbp)
     c4b:	44 89 4d c0          	mov    %r9d,-0x40(%rbp)
     c4f:	48 8b 45 08          	mov    0x8(%rbp),%rax
     c53:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
     c57:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
     c5b:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
     c5f:	b8 00 00 00 00       	mov    $0x0,%eax
     c64:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
     c68:	48 89 c7             	mov    %rax,%rdi
     c6b:	48 89 d6             	mov    %rdx,%rsi
     c6e:	e8 00 00 00 00       	callq  c73 <MPI_Ssend_init+0x45>
     c73:	48 83 c4 f0          	add    $0xfffffffffffffff0,%rsp
     c77:	48 8b 45 98          	mov    -0x68(%rbp),%rax
     c7b:	8b 55 a0             	mov    -0x60(%rbp),%edx
     c7e:	8b 4d a8             	mov    -0x58(%rbp),%ecx
     c81:	8b 5d b0             	mov    -0x50(%rbp),%ebx
     c84:	8b 75 b8             	mov    -0x48(%rbp),%esi
     c87:	8b 7d c0             	mov    -0x40(%rbp),%edi
     c8a:	4c 8b 45 10          	mov    0x10(%rbp),%r8
     c8e:	4c 89 04 24          	mov    %r8,(%rsp)
     c92:	89 7d e0             	mov    %edi,-0x20(%rbp)
     c95:	48 89 c7             	mov    %rax,%rdi
     c98:	89 75 e8             	mov    %esi,-0x18(%rbp)
     c9b:	89 d6                	mov    %edx,%esi
     c9d:	89 ca                	mov    %ecx,%edx
     c9f:	89 d9                	mov    %ebx,%ecx
     ca1:	8b 45 e8             	mov    -0x18(%rbp),%eax
     ca4:	41 89 c0             	mov    %eax,%r8d
     ca7:	8b 45 e0             	mov    -0x20(%rbp),%eax
     caa:	41 89 c1             	mov    %eax,%r9d
     cad:	e8 00 00 00 00       	callq  cb2 <MPI_Ssend_init+0x84>
     cb2:	89 45 90             	mov    %eax,-0x70(%rbp)
     cb5:	48 83 c4 10          	add    $0x10,%rsp
     cb9:	8b 45 90             	mov    -0x70(%rbp),%eax
     cbc:	89 45 94             	mov    %eax,-0x6c(%rbp)
     cbf:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
     cc3:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
     cc7:	b8 00 00 00 00       	mov    $0x0,%eax
     ccc:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
     cd0:	48 89 c7             	mov    %rax,%rdi
     cd3:	48 89 d6             	mov    %rdx,%rsi
     cd6:	e8 00 00 00 00       	callq  cdb <MPI_Ssend_init+0xad>
     cdb:	8b 45 94             	mov    -0x6c(%rbp),%eax
     cde:	48 8b 5d f0          	mov    -0x10(%rbp),%rbx
     ce2:	c9                   	leaveq 
     ce3:	c3                   	retq   

0000000000000ce4 <MPI_Test>:
     ce4:	55                   	push   %rbp
     ce5:	48 89 e5             	mov    %rsp,%rbp
     ce8:	48 83 ec 40          	sub    $0x40,%rsp
     cec:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
     cf0:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
     cf4:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
     cf8:	48 8b 45 08          	mov    0x8(%rbp),%rax
     cfc:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
     d00:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
     d04:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
     d08:	b8 00 00 00 00       	mov    $0x0,%eax
     d0d:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
     d11:	48 89 c7             	mov    %rax,%rdi
     d14:	48 89 d6             	mov    %rdx,%rsi
     d17:	e8 00 00 00 00       	callq  d1c <MPI_Test+0x38>
     d1c:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
     d20:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
     d24:	48 8b 4d d8          	mov    -0x28(%rbp),%rcx
     d28:	48 89 c7             	mov    %rax,%rdi
     d2b:	48 89 d6             	mov    %rdx,%rsi
     d2e:	48 89 ca             	mov    %rcx,%rdx
     d31:	e8 00 00 00 00       	callq  d36 <MPI_Test+0x52>
     d36:	89 45 c0             	mov    %eax,-0x40(%rbp)
     d39:	8b 45 c0             	mov    -0x40(%rbp),%eax
     d3c:	89 45 c4             	mov    %eax,-0x3c(%rbp)
     d3f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
     d43:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
     d47:	b8 00 00 00 00       	mov    $0x0,%eax
     d4c:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
     d50:	48 89 c7             	mov    %rax,%rdi
     d53:	48 89 d6             	mov    %rdx,%rsi
     d56:	e8 00 00 00 00       	callq  d5b <MPI_Test+0x77>
     d5b:	8b 45 c4             	mov    -0x3c(%rbp),%eax
     d5e:	c9                   	leaveq 
     d5f:	c3                   	retq   

0000000000000d60 <MPI_Testall>:
     d60:	55                   	push   %rbp
     d61:	48 89 e5             	mov    %rsp,%rbp
     d64:	48 83 ec 50          	sub    $0x50,%rsp
     d68:	48 89 5d f0          	mov    %rbx,-0x10(%rbp)
     d6c:	89 7d b8             	mov    %edi,-0x48(%rbp)
     d6f:	48 89 75 c0          	mov    %rsi,-0x40(%rbp)
     d73:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
     d77:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
     d7b:	48 8b 45 08          	mov    0x8(%rbp),%rax
     d7f:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
     d83:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
     d87:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
     d8b:	b8 00 00 00 00       	mov    $0x0,%eax
     d90:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
     d94:	48 89 c7             	mov    %rax,%rdi
     d97:	48 89 d6             	mov    %rdx,%rsi
     d9a:	e8 00 00 00 00       	callq  d9f <MPI_Testall+0x3f>
     d9f:	8b 45 b8             	mov    -0x48(%rbp),%eax
     da2:	48 8b 55 c0          	mov    -0x40(%rbp),%rdx
     da6:	48 8b 4d c8          	mov    -0x38(%rbp),%rcx
     daa:	48 8b 5d d0          	mov    -0x30(%rbp),%rbx
     dae:	89 c7                	mov    %eax,%edi
     db0:	48 89 d6             	mov    %rdx,%rsi
     db3:	48 89 ca             	mov    %rcx,%rdx
     db6:	48 89 d9             	mov    %rbx,%rcx
     db9:	e8 00 00 00 00       	callq  dbe <MPI_Testall+0x5e>
     dbe:	89 45 b0             	mov    %eax,-0x50(%rbp)
     dc1:	8b 45 b0             	mov    -0x50(%rbp),%eax
     dc4:	89 45 b4             	mov    %eax,-0x4c(%rbp)
     dc7:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
     dcb:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
     dcf:	b8 00 00 00 00       	mov    $0x0,%eax
     dd4:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
     dd8:	48 89 c7             	mov    %rax,%rdi
     ddb:	48 89 d6             	mov    %rdx,%rsi
     dde:	e8 00 00 00 00       	callq  de3 <MPI_Testall+0x83>
     de3:	8b 45 b4             	mov    -0x4c(%rbp),%eax
     de6:	48 8b 5d f0          	mov    -0x10(%rbp),%rbx
     dea:	c9                   	leaveq 
     deb:	c3                   	retq   

0000000000000dec <MPI_Testany>:
     dec:	55                   	push   %rbp
     ded:	48 89 e5             	mov    %rsp,%rbp
     df0:	48 83 ec 60          	sub    $0x60,%rsp
     df4:	48 89 5d f0          	mov    %rbx,-0x10(%rbp)
     df8:	89 7d a8             	mov    %edi,-0x58(%rbp)
     dfb:	48 89 75 b0          	mov    %rsi,-0x50(%rbp)
     dff:	48 89 55 b8          	mov    %rdx,-0x48(%rbp)
     e03:	48 89 4d c0          	mov    %rcx,-0x40(%rbp)
     e07:	4c 89 45 c8          	mov    %r8,-0x38(%rbp)
     e0b:	48 8b 45 08          	mov    0x8(%rbp),%rax
     e0f:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
     e13:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
     e17:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
     e1b:	b8 00 00 00 00       	mov    $0x0,%eax
     e20:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
     e24:	48 89 c7             	mov    %rax,%rdi
     e27:	48 89 d6             	mov    %rdx,%rsi
     e2a:	e8 00 00 00 00       	callq  e2f <MPI_Testany+0x43>
     e2f:	8b 45 a8             	mov    -0x58(%rbp),%eax
     e32:	48 8b 55 b0          	mov    -0x50(%rbp),%rdx
     e36:	48 8b 4d b8          	mov    -0x48(%rbp),%rcx
     e3a:	48 8b 5d c0          	mov    -0x40(%rbp),%rbx
     e3e:	48 8b 75 c8          	mov    -0x38(%rbp),%rsi
     e42:	89 c7                	mov    %eax,%edi
     e44:	48 89 75 e8          	mov    %rsi,-0x18(%rbp)
     e48:	48 89 d6             	mov    %rdx,%rsi
     e4b:	48 89 ca             	mov    %rcx,%rdx
     e4e:	48 89 d9             	mov    %rbx,%rcx
     e51:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
     e55:	49 89 c0             	mov    %rax,%r8
     e58:	e8 00 00 00 00       	callq  e5d <MPI_Testany+0x71>
     e5d:	89 45 a0             	mov    %eax,-0x60(%rbp)
     e60:	8b 45 a0             	mov    -0x60(%rbp),%eax
     e63:	89 45 a4             	mov    %eax,-0x5c(%rbp)
     e66:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
     e6a:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
     e6e:	b8 00 00 00 00       	mov    $0x0,%eax
     e73:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
     e77:	48 89 c7             	mov    %rax,%rdi
     e7a:	48 89 d6             	mov    %rdx,%rsi
     e7d:	e8 00 00 00 00       	callq  e82 <MPI_Testany+0x96>
     e82:	8b 45 a4             	mov    -0x5c(%rbp),%eax
     e85:	48 8b 5d f0          	mov    -0x10(%rbp),%rbx
     e89:	c9                   	leaveq 
     e8a:	c3                   	retq   

0000000000000e8b <MPI_Test_cancelled>:
     e8b:	55                   	push   %rbp
     e8c:	48 89 e5             	mov    %rsp,%rbp
     e8f:	48 83 ec 30          	sub    $0x30,%rsp
     e93:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
     e97:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
     e9b:	48 8b 45 08          	mov    0x8(%rbp),%rax
     e9f:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
     ea3:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
     ea7:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
     eab:	b8 00 00 00 00       	mov    $0x0,%eax
     eb0:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
     eb4:	48 89 c7             	mov    %rax,%rdi
     eb7:	48 89 d6             	mov    %rdx,%rsi
     eba:	e8 00 00 00 00       	callq  ebf <MPI_Test_cancelled+0x34>
     ebf:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
     ec3:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
     ec7:	48 89 c7             	mov    %rax,%rdi
     eca:	48 89 d6             	mov    %rdx,%rsi
     ecd:	e8 00 00 00 00       	callq  ed2 <MPI_Test_cancelled+0x47>
     ed2:	89 45 d0             	mov    %eax,-0x30(%rbp)
     ed5:	8b 45 d0             	mov    -0x30(%rbp),%eax
     ed8:	89 45 d4             	mov    %eax,-0x2c(%rbp)
     edb:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
     edf:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
     ee3:	b8 00 00 00 00       	mov    $0x0,%eax
     ee8:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
     eec:	48 89 c7             	mov    %rax,%rdi
     eef:	48 89 d6             	mov    %rdx,%rsi
     ef2:	e8 00 00 00 00       	callq  ef7 <MPI_Test_cancelled+0x6c>
     ef7:	8b 45 d4             	mov    -0x2c(%rbp),%eax
     efa:	c9                   	leaveq 
     efb:	c3                   	retq   

0000000000000efc <MPI_Testsome>:
     efc:	55                   	push   %rbp
     efd:	48 89 e5             	mov    %rsp,%rbp
     f00:	48 83 ec 60          	sub    $0x60,%rsp
     f04:	48 89 5d f0          	mov    %rbx,-0x10(%rbp)
     f08:	89 7d a8             	mov    %edi,-0x58(%rbp)
     f0b:	48 89 75 b0          	mov    %rsi,-0x50(%rbp)
     f0f:	48 89 55 b8          	mov    %rdx,-0x48(%rbp)
     f13:	48 89 4d c0          	mov    %rcx,-0x40(%rbp)
     f17:	4c 89 45 c8          	mov    %r8,-0x38(%rbp)
     f1b:	48 8b 45 08          	mov    0x8(%rbp),%rax
     f1f:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
     f23:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
     f27:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
     f2b:	b8 00 00 00 00       	mov    $0x0,%eax
     f30:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
     f34:	48 89 c7             	mov    %rax,%rdi
     f37:	48 89 d6             	mov    %rdx,%rsi
     f3a:	e8 00 00 00 00       	callq  f3f <MPI_Testsome+0x43>
     f3f:	8b 45 a8             	mov    -0x58(%rbp),%eax
     f42:	48 8b 55 b0          	mov    -0x50(%rbp),%rdx
     f46:	48 8b 4d b8          	mov    -0x48(%rbp),%rcx
     f4a:	48 8b 5d c0          	mov    -0x40(%rbp),%rbx
     f4e:	48 8b 75 c8          	mov    -0x38(%rbp),%rsi
     f52:	89 c7                	mov    %eax,%edi
     f54:	48 89 75 e8          	mov    %rsi,-0x18(%rbp)
     f58:	48 89 d6             	mov    %rdx,%rsi
     f5b:	48 89 ca             	mov    %rcx,%rdx
     f5e:	48 89 d9             	mov    %rbx,%rcx
     f61:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
     f65:	49 89 c0             	mov    %rax,%r8
     f68:	e8 00 00 00 00       	callq  f6d <MPI_Testsome+0x71>
     f6d:	89 45 a0             	mov    %eax,-0x60(%rbp)
     f70:	8b 45 a0             	mov    -0x60(%rbp),%eax
     f73:	89 45 a4             	mov    %eax,-0x5c(%rbp)
     f76:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
     f7a:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
     f7e:	b8 00 00 00 00       	mov    $0x0,%eax
     f83:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
     f87:	48 89 c7             	mov    %rax,%rdi
     f8a:	48 89 d6             	mov    %rdx,%rsi
     f8d:	e8 00 00 00 00       	callq  f92 <MPI_Testsome+0x96>
     f92:	8b 45 a4             	mov    -0x5c(%rbp),%eax
     f95:	48 8b 5d f0          	mov    -0x10(%rbp),%rbx
     f99:	c9                   	leaveq 
     f9a:	c3                   	retq   

0000000000000f9b <MPI_Wait>:
     f9b:	55                   	push   %rbp
     f9c:	48 89 e5             	mov    %rsp,%rbp
     f9f:	48 83 ec 30          	sub    $0x30,%rsp
     fa3:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
     fa7:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
     fab:	48 8b 45 08          	mov    0x8(%rbp),%rax
     faf:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
     fb3:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
     fb7:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
     fbb:	b8 00 00 00 00       	mov    $0x0,%eax
     fc0:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
     fc4:	48 89 c7             	mov    %rax,%rdi
     fc7:	48 89 d6             	mov    %rdx,%rsi
     fca:	e8 00 00 00 00       	callq  fcf <MPI_Wait+0x34>
     fcf:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
     fd3:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
     fd7:	48 89 c7             	mov    %rax,%rdi
     fda:	48 89 d6             	mov    %rdx,%rsi
     fdd:	e8 00 00 00 00       	callq  fe2 <MPI_Wait+0x47>
     fe2:	89 45 d0             	mov    %eax,-0x30(%rbp)
     fe5:	8b 45 d0             	mov    -0x30(%rbp),%eax
     fe8:	89 45 d4             	mov    %eax,-0x2c(%rbp)
     feb:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
     fef:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
     ff3:	b8 00 00 00 00       	mov    $0x0,%eax
     ff8:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
     ffc:	48 89 c7             	mov    %rax,%rdi
     fff:	48 89 d6             	mov    %rdx,%rsi
    1002:	e8 00 00 00 00       	callq  1007 <MPI_Wait+0x6c>
    1007:	8b 45 d4             	mov    -0x2c(%rbp),%eax
    100a:	c9                   	leaveq 
    100b:	c3                   	retq   

000000000000100c <MPI_Waitall>:
    100c:	55                   	push   %rbp
    100d:	48 89 e5             	mov    %rsp,%rbp
    1010:	48 83 ec 40          	sub    $0x40,%rsp
    1014:	89 7d c8             	mov    %edi,-0x38(%rbp)
    1017:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    101b:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
    101f:	48 8b 45 08          	mov    0x8(%rbp),%rax
    1023:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    1027:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    102b:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    102f:	b8 00 00 00 00       	mov    $0x0,%eax
    1034:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    1038:	48 89 c7             	mov    %rax,%rdi
    103b:	48 89 d6             	mov    %rdx,%rsi
    103e:	e8 00 00 00 00       	callq  1043 <MPI_Waitall+0x37>
    1043:	8b 45 c8             	mov    -0x38(%rbp),%eax
    1046:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    104a:	48 8b 4d d8          	mov    -0x28(%rbp),%rcx
    104e:	89 c7                	mov    %eax,%edi
    1050:	48 89 d6             	mov    %rdx,%rsi
    1053:	48 89 ca             	mov    %rcx,%rdx
    1056:	e8 00 00 00 00       	callq  105b <MPI_Waitall+0x4f>
    105b:	89 45 c0             	mov    %eax,-0x40(%rbp)
    105e:	8b 45 c0             	mov    -0x40(%rbp),%eax
    1061:	89 45 c4             	mov    %eax,-0x3c(%rbp)
    1064:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    1068:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    106c:	b8 00 00 00 00       	mov    $0x0,%eax
    1071:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    1075:	48 89 c7             	mov    %rax,%rdi
    1078:	48 89 d6             	mov    %rdx,%rsi
    107b:	e8 00 00 00 00       	callq  1080 <MPI_Waitall+0x74>
    1080:	8b 45 c4             	mov    -0x3c(%rbp),%eax
    1083:	c9                   	leaveq 
    1084:	c3                   	retq   

0000000000001085 <MPI_Waitany>:
    1085:	55                   	push   %rbp
    1086:	48 89 e5             	mov    %rsp,%rbp
    1089:	48 83 ec 50          	sub    $0x50,%rsp
    108d:	48 89 5d f0          	mov    %rbx,-0x10(%rbp)
    1091:	89 7d b8             	mov    %edi,-0x48(%rbp)
    1094:	48 89 75 c0          	mov    %rsi,-0x40(%rbp)
    1098:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
    109c:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
    10a0:	48 8b 45 08          	mov    0x8(%rbp),%rax
    10a4:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
    10a8:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    10ac:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    10b0:	b8 00 00 00 00       	mov    $0x0,%eax
    10b5:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    10b9:	48 89 c7             	mov    %rax,%rdi
    10bc:	48 89 d6             	mov    %rdx,%rsi
    10bf:	e8 00 00 00 00       	callq  10c4 <MPI_Waitany+0x3f>
    10c4:	8b 45 b8             	mov    -0x48(%rbp),%eax
    10c7:	48 8b 55 c0          	mov    -0x40(%rbp),%rdx
    10cb:	48 8b 4d c8          	mov    -0x38(%rbp),%rcx
    10cf:	48 8b 5d d0          	mov    -0x30(%rbp),%rbx
    10d3:	89 c7                	mov    %eax,%edi
    10d5:	48 89 d6             	mov    %rdx,%rsi
    10d8:	48 89 ca             	mov    %rcx,%rdx
    10db:	48 89 d9             	mov    %rbx,%rcx
    10de:	e8 00 00 00 00       	callq  10e3 <MPI_Waitany+0x5e>
    10e3:	89 45 b0             	mov    %eax,-0x50(%rbp)
    10e6:	8b 45 b0             	mov    -0x50(%rbp),%eax
    10e9:	89 45 b4             	mov    %eax,-0x4c(%rbp)
    10ec:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    10f0:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    10f4:	b8 00 00 00 00       	mov    $0x0,%eax
    10f9:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    10fd:	48 89 c7             	mov    %rax,%rdi
    1100:	48 89 d6             	mov    %rdx,%rsi
    1103:	e8 00 00 00 00       	callq  1108 <MPI_Waitany+0x83>
    1108:	8b 45 b4             	mov    -0x4c(%rbp),%eax
    110b:	48 8b 5d f0          	mov    -0x10(%rbp),%rbx
    110f:	c9                   	leaveq 
    1110:	c3                   	retq   

0000000000001111 <MPI_Waitsome>:
    1111:	55                   	push   %rbp
    1112:	48 89 e5             	mov    %rsp,%rbp
    1115:	48 83 ec 60          	sub    $0x60,%rsp
    1119:	48 89 5d f0          	mov    %rbx,-0x10(%rbp)
    111d:	89 7d a8             	mov    %edi,-0x58(%rbp)
    1120:	48 89 75 b0          	mov    %rsi,-0x50(%rbp)
    1124:	48 89 55 b8          	mov    %rdx,-0x48(%rbp)
    1128:	48 89 4d c0          	mov    %rcx,-0x40(%rbp)
    112c:	4c 89 45 c8          	mov    %r8,-0x38(%rbp)
    1130:	48 8b 45 08          	mov    0x8(%rbp),%rax
    1134:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
    1138:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    113c:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
    1140:	b8 00 00 00 00       	mov    $0x0,%eax
    1145:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    1149:	48 89 c7             	mov    %rax,%rdi
    114c:	48 89 d6             	mov    %rdx,%rsi
    114f:	e8 00 00 00 00       	callq  1154 <MPI_Waitsome+0x43>
    1154:	8b 45 a8             	mov    -0x58(%rbp),%eax
    1157:	48 8b 55 b0          	mov    -0x50(%rbp),%rdx
    115b:	48 8b 4d b8          	mov    -0x48(%rbp),%rcx
    115f:	48 8b 5d c0          	mov    -0x40(%rbp),%rbx
    1163:	48 8b 75 c8          	mov    -0x38(%rbp),%rsi
    1167:	89 c7                	mov    %eax,%edi
    1169:	48 89 75 e8          	mov    %rsi,-0x18(%rbp)
    116d:	48 89 d6             	mov    %rdx,%rsi
    1170:	48 89 ca             	mov    %rcx,%rdx
    1173:	48 89 d9             	mov    %rbx,%rcx
    1176:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    117a:	49 89 c0             	mov    %rax,%r8
    117d:	e8 00 00 00 00       	callq  1182 <MPI_Waitsome+0x71>
    1182:	89 45 a0             	mov    %eax,-0x60(%rbp)
    1185:	8b 45 a0             	mov    -0x60(%rbp),%eax
    1188:	89 45 a4             	mov    %eax,-0x5c(%rbp)
    118b:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    118f:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    1193:	b8 00 00 00 00       	mov    $0x0,%eax
    1198:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    119c:	48 89 c7             	mov    %rax,%rdi
    119f:	48 89 d6             	mov    %rdx,%rsi
    11a2:	e8 00 00 00 00       	callq  11a7 <MPI_Waitsome+0x96>
    11a7:	8b 45 a4             	mov    -0x5c(%rbp),%eax
    11aa:	48 8b 5d f0          	mov    -0x10(%rbp),%rbx
    11ae:	c9                   	leaveq 
    11af:	c3                   	retq   

00000000000011b0 <MPI_Cancel>:
    11b0:	55                   	push   %rbp
    11b1:	48 89 e5             	mov    %rsp,%rbp
    11b4:	48 83 ec 30          	sub    $0x30,%rsp
    11b8:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    11bc:	48 8b 45 08          	mov    0x8(%rbp),%rax
    11c0:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    11c4:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    11c8:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    11cc:	b8 00 00 00 00       	mov    $0x0,%eax
    11d1:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    11d5:	48 89 c7             	mov    %rax,%rdi
    11d8:	48 89 d6             	mov    %rdx,%rsi
    11db:	e8 00 00 00 00       	callq  11e0 <MPI_Cancel+0x30>
    11e0:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    11e4:	48 89 c7             	mov    %rax,%rdi
    11e7:	e8 00 00 00 00       	callq  11ec <MPI_Cancel+0x3c>
    11ec:	89 45 d0             	mov    %eax,-0x30(%rbp)
    11ef:	8b 45 d0             	mov    -0x30(%rbp),%eax
    11f2:	89 45 d4             	mov    %eax,-0x2c(%rbp)
    11f5:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    11f9:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    11fd:	b8 00 00 00 00       	mov    $0x0,%eax
    1202:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    1206:	48 89 c7             	mov    %rax,%rdi
    1209:	48 89 d6             	mov    %rdx,%rsi
    120c:	e8 00 00 00 00       	callq  1211 <MPI_Cancel+0x61>
    1211:	8b 45 d4             	mov    -0x2c(%rbp),%eax
    1214:	c9                   	leaveq 
    1215:	c3                   	retq   

0000000000001216 <MPI_Request_free>:
    1216:	55                   	push   %rbp
    1217:	48 89 e5             	mov    %rsp,%rbp
    121a:	48 83 ec 30          	sub    $0x30,%rsp
    121e:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    1222:	48 8b 45 08          	mov    0x8(%rbp),%rax
    1226:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    122a:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    122e:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    1232:	b8 00 00 00 00       	mov    $0x0,%eax
    1237:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    123b:	48 89 c7             	mov    %rax,%rdi
    123e:	48 89 d6             	mov    %rdx,%rsi
    1241:	e8 00 00 00 00       	callq  1246 <MPI_Request_free+0x30>
    1246:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    124a:	48 89 c7             	mov    %rax,%rdi
    124d:	e8 00 00 00 00       	callq  1252 <MPI_Request_free+0x3c>
    1252:	89 45 d0             	mov    %eax,-0x30(%rbp)
    1255:	8b 45 d0             	mov    -0x30(%rbp),%eax
    1258:	89 45 d4             	mov    %eax,-0x2c(%rbp)
    125b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    125f:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    1263:	b8 00 00 00 00       	mov    $0x0,%eax
    1268:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    126c:	48 89 c7             	mov    %rax,%rdi
    126f:	48 89 d6             	mov    %rdx,%rsi
    1272:	e8 00 00 00 00       	callq  1277 <MPI_Request_free+0x61>
    1277:	8b 45 d4             	mov    -0x2c(%rbp),%eax
    127a:	c9                   	leaveq 
    127b:	c3                   	retq   

000000000000127c <MPI_Start>:
    127c:	55                   	push   %rbp
    127d:	48 89 e5             	mov    %rsp,%rbp
    1280:	48 83 ec 30          	sub    $0x30,%rsp
    1284:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    1288:	48 8b 45 08          	mov    0x8(%rbp),%rax
    128c:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    1290:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    1294:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    1298:	b8 00 00 00 00       	mov    $0x0,%eax
    129d:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    12a1:	48 89 c7             	mov    %rax,%rdi
    12a4:	48 89 d6             	mov    %rdx,%rsi
    12a7:	e8 00 00 00 00       	callq  12ac <MPI_Start+0x30>
    12ac:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    12b0:	48 89 c7             	mov    %rax,%rdi
    12b3:	e8 00 00 00 00       	callq  12b8 <MPI_Start+0x3c>
    12b8:	89 45 d0             	mov    %eax,-0x30(%rbp)
    12bb:	8b 45 d0             	mov    -0x30(%rbp),%eax
    12be:	89 45 d4             	mov    %eax,-0x2c(%rbp)
    12c1:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    12c5:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    12c9:	b8 00 00 00 00       	mov    $0x0,%eax
    12ce:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    12d2:	48 89 c7             	mov    %rax,%rdi
    12d5:	48 89 d6             	mov    %rdx,%rsi
    12d8:	e8 00 00 00 00       	callq  12dd <MPI_Start+0x61>
    12dd:	8b 45 d4             	mov    -0x2c(%rbp),%eax
    12e0:	c9                   	leaveq 
    12e1:	c3                   	retq   

00000000000012e2 <MPI_Startall>:
    12e2:	55                   	push   %rbp
    12e3:	48 89 e5             	mov    %rsp,%rbp
    12e6:	48 83 ec 30          	sub    $0x30,%rsp
    12ea:	89 7d d8             	mov    %edi,-0x28(%rbp)
    12ed:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    12f1:	48 8b 45 08          	mov    0x8(%rbp),%rax
    12f5:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    12f9:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    12fd:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    1301:	b8 00 00 00 00       	mov    $0x0,%eax
    1306:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    130a:	48 89 c7             	mov    %rax,%rdi
    130d:	48 89 d6             	mov    %rdx,%rsi
    1310:	e8 00 00 00 00       	callq  1315 <MPI_Startall+0x33>
    1315:	8b 45 d8             	mov    -0x28(%rbp),%eax
    1318:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    131c:	89 c7                	mov    %eax,%edi
    131e:	48 89 d6             	mov    %rdx,%rsi
    1321:	e8 00 00 00 00       	callq  1326 <MPI_Startall+0x44>
    1326:	89 45 d0             	mov    %eax,-0x30(%rbp)
    1329:	8b 45 d0             	mov    -0x30(%rbp),%eax
    132c:	89 45 d4             	mov    %eax,-0x2c(%rbp)
    132f:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    1333:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    1337:	b8 00 00 00 00       	mov    $0x0,%eax
    133c:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    1340:	48 89 c7             	mov    %rax,%rdi
    1343:	48 89 d6             	mov    %rdx,%rsi
    1346:	e8 00 00 00 00       	callq  134b <MPI_Startall+0x69>
    134b:	8b 45 d4             	mov    -0x2c(%rbp),%eax
    134e:	c9                   	leaveq 
    134f:	c3                   	retq   

0000000000001350 <MPI_Iprobe>:
    1350:	55                   	push   %rbp
    1351:	48 89 e5             	mov    %rsp,%rbp
    1354:	48 83 ec 60          	sub    $0x60,%rsp
    1358:	48 89 5d f0          	mov    %rbx,-0x10(%rbp)
    135c:	89 7d a8             	mov    %edi,-0x58(%rbp)
    135f:	89 75 b0             	mov    %esi,-0x50(%rbp)
    1362:	89 55 b8             	mov    %edx,-0x48(%rbp)
    1365:	48 89 4d c0          	mov    %rcx,-0x40(%rbp)
    1369:	4c 89 45 c8          	mov    %r8,-0x38(%rbp)
    136d:	48 8b 45 08          	mov    0x8(%rbp),%rax
    1371:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
    1375:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    1379:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
    137d:	b8 00 00 00 00       	mov    $0x0,%eax
    1382:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    1386:	48 89 c7             	mov    %rax,%rdi
    1389:	48 89 d6             	mov    %rdx,%rsi
    138c:	e8 00 00 00 00       	callq  1391 <MPI_Iprobe+0x41>
    1391:	8b 45 a8             	mov    -0x58(%rbp),%eax
    1394:	8b 55 b0             	mov    -0x50(%rbp),%edx
    1397:	8b 4d b8             	mov    -0x48(%rbp),%ecx
    139a:	48 8b 5d c0          	mov    -0x40(%rbp),%rbx
    139e:	48 8b 75 c8          	mov    -0x38(%rbp),%rsi
    13a2:	89 c7                	mov    %eax,%edi
    13a4:	48 89 75 e8          	mov    %rsi,-0x18(%rbp)
    13a8:	89 d6                	mov    %edx,%esi
    13aa:	89 ca                	mov    %ecx,%edx
    13ac:	48 89 d9             	mov    %rbx,%rcx
    13af:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    13b3:	49 89 c0             	mov    %rax,%r8
    13b6:	e8 00 00 00 00       	callq  13bb <MPI_Iprobe+0x6b>
    13bb:	89 45 a0             	mov    %eax,-0x60(%rbp)
    13be:	8b 45 a0             	mov    -0x60(%rbp),%eax
    13c1:	89 45 a4             	mov    %eax,-0x5c(%rbp)
    13c4:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    13c8:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    13cc:	b8 00 00 00 00       	mov    $0x0,%eax
    13d1:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    13d5:	48 89 c7             	mov    %rax,%rdi
    13d8:	48 89 d6             	mov    %rdx,%rsi
    13db:	e8 00 00 00 00       	callq  13e0 <MPI_Iprobe+0x90>
    13e0:	8b 45 a4             	mov    -0x5c(%rbp),%eax
    13e3:	48 8b 5d f0          	mov    -0x10(%rbp),%rbx
    13e7:	c9                   	leaveq 
    13e8:	c3                   	retq   

00000000000013e9 <MPI_Probe>:
    13e9:	55                   	push   %rbp
    13ea:	48 89 e5             	mov    %rsp,%rbp
    13ed:	48 83 ec 50          	sub    $0x50,%rsp
    13f1:	48 89 5d f0          	mov    %rbx,-0x10(%rbp)
    13f5:	89 7d b8             	mov    %edi,-0x48(%rbp)
    13f8:	89 75 c0             	mov    %esi,-0x40(%rbp)
    13fb:	89 55 c8             	mov    %edx,-0x38(%rbp)
    13fe:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
    1402:	48 8b 45 08          	mov    0x8(%rbp),%rax
    1406:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
    140a:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    140e:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    1412:	b8 00 00 00 00       	mov    $0x0,%eax
    1417:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    141b:	48 89 c7             	mov    %rax,%rdi
    141e:	48 89 d6             	mov    %rdx,%rsi
    1421:	e8 00 00 00 00       	callq  1426 <MPI_Probe+0x3d>
    1426:	8b 45 b8             	mov    -0x48(%rbp),%eax
    1429:	8b 55 c0             	mov    -0x40(%rbp),%edx
    142c:	8b 4d c8             	mov    -0x38(%rbp),%ecx
    142f:	48 8b 5d d0          	mov    -0x30(%rbp),%rbx
    1433:	89 c7                	mov    %eax,%edi
    1435:	89 d6                	mov    %edx,%esi
    1437:	89 ca                	mov    %ecx,%edx
    1439:	48 89 d9             	mov    %rbx,%rcx
    143c:	e8 00 00 00 00       	callq  1441 <MPI_Probe+0x58>
    1441:	89 45 b0             	mov    %eax,-0x50(%rbp)
    1444:	8b 45 b0             	mov    -0x50(%rbp),%eax
    1447:	89 45 b4             	mov    %eax,-0x4c(%rbp)
    144a:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    144e:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    1452:	b8 00 00 00 00       	mov    $0x0,%eax
    1457:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    145b:	48 89 c7             	mov    %rax,%rdi
    145e:	48 89 d6             	mov    %rdx,%rsi
    1461:	e8 00 00 00 00       	callq  1466 <MPI_Probe+0x7d>
    1466:	8b 45 b4             	mov    -0x4c(%rbp),%eax
    1469:	48 8b 5d f0          	mov    -0x10(%rbp),%rbx
    146d:	c9                   	leaveq 
    146e:	c3                   	retq   

000000000000146f <MPI_Allgather>:
    146f:	55                   	push   %rbp
    1470:	48 89 e5             	mov    %rsp,%rbp
    1473:	48 83 ec 70          	sub    $0x70,%rsp
    1477:	48 89 5d f0          	mov    %rbx,-0x10(%rbp)
    147b:	48 89 7d 98          	mov    %rdi,-0x68(%rbp)
    147f:	89 75 a0             	mov    %esi,-0x60(%rbp)
    1482:	89 55 a8             	mov    %edx,-0x58(%rbp)
    1485:	48 89 4d b0          	mov    %rcx,-0x50(%rbp)
    1489:	44 89 45 b8          	mov    %r8d,-0x48(%rbp)
    148d:	44 89 4d c0          	mov    %r9d,-0x40(%rbp)
    1491:	48 8b 45 08          	mov    0x8(%rbp),%rax
    1495:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
    1499:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    149d:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
    14a1:	b8 00 00 00 00       	mov    $0x0,%eax
    14a6:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    14aa:	48 89 c7             	mov    %rax,%rdi
    14ad:	48 89 d6             	mov    %rdx,%rsi
    14b0:	e8 00 00 00 00       	callq  14b5 <MPI_Allgather+0x46>
    14b5:	48 83 c4 f0          	add    $0xfffffffffffffff0,%rsp
    14b9:	48 8b 45 98          	mov    -0x68(%rbp),%rax
    14bd:	8b 55 a0             	mov    -0x60(%rbp),%edx
    14c0:	8b 4d a8             	mov    -0x58(%rbp),%ecx
    14c3:	48 8b 5d b0          	mov    -0x50(%rbp),%rbx
    14c7:	8b 75 b8             	mov    -0x48(%rbp),%esi
    14ca:	8b 7d c0             	mov    -0x40(%rbp),%edi
    14cd:	44 8b 45 10          	mov    0x10(%rbp),%r8d
    14d1:	44 89 04 24          	mov    %r8d,(%rsp)
    14d5:	89 7d e0             	mov    %edi,-0x20(%rbp)
    14d8:	48 89 c7             	mov    %rax,%rdi
    14db:	89 75 e8             	mov    %esi,-0x18(%rbp)
    14de:	89 d6                	mov    %edx,%esi
    14e0:	89 ca                	mov    %ecx,%edx
    14e2:	48 89 d9             	mov    %rbx,%rcx
    14e5:	8b 45 e8             	mov    -0x18(%rbp),%eax
    14e8:	41 89 c0             	mov    %eax,%r8d
    14eb:	8b 45 e0             	mov    -0x20(%rbp),%eax
    14ee:	41 89 c1             	mov    %eax,%r9d
    14f1:	e8 00 00 00 00       	callq  14f6 <MPI_Allgather+0x87>
    14f6:	89 45 90             	mov    %eax,-0x70(%rbp)
    14f9:	48 83 c4 10          	add    $0x10,%rsp
    14fd:	8b 45 90             	mov    -0x70(%rbp),%eax
    1500:	89 45 94             	mov    %eax,-0x6c(%rbp)
    1503:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    1507:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
    150b:	b8 00 00 00 00       	mov    $0x0,%eax
    1510:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    1514:	48 89 c7             	mov    %rax,%rdi
    1517:	48 89 d6             	mov    %rdx,%rsi
    151a:	e8 00 00 00 00       	callq  151f <MPI_Allgather+0xb0>
    151f:	8b 45 94             	mov    -0x6c(%rbp),%eax
    1522:	48 8b 5d f0          	mov    -0x10(%rbp),%rbx
    1526:	c9                   	leaveq 
    1527:	c3                   	retq   

0000000000001528 <MPI_Allgatherv>:
    1528:	55                   	push   %rbp
    1529:	48 89 e5             	mov    %rsp,%rbp
    152c:	48 83 ec 70          	sub    $0x70,%rsp
    1530:	48 89 5d f0          	mov    %rbx,-0x10(%rbp)
    1534:	48 89 7d 98          	mov    %rdi,-0x68(%rbp)
    1538:	89 75 a0             	mov    %esi,-0x60(%rbp)
    153b:	89 55 a8             	mov    %edx,-0x58(%rbp)
    153e:	48 89 4d b0          	mov    %rcx,-0x50(%rbp)
    1542:	4c 89 45 b8          	mov    %r8,-0x48(%rbp)
    1546:	4c 89 4d c0          	mov    %r9,-0x40(%rbp)
    154a:	48 8b 45 08          	mov    0x8(%rbp),%rax
    154e:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
    1552:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    1556:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
    155a:	b8 00 00 00 00       	mov    $0x0,%eax
    155f:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    1563:	48 89 c7             	mov    %rax,%rdi
    1566:	48 89 d6             	mov    %rdx,%rsi
    1569:	e8 00 00 00 00       	callq  156e <MPI_Allgatherv+0x46>
    156e:	48 83 c4 f0          	add    $0xfffffffffffffff0,%rsp
    1572:	48 8b 45 98          	mov    -0x68(%rbp),%rax
    1576:	8b 55 a0             	mov    -0x60(%rbp),%edx
    1579:	8b 4d a8             	mov    -0x58(%rbp),%ecx
    157c:	48 8b 5d b0          	mov    -0x50(%rbp),%rbx
    1580:	48 8b 75 b8          	mov    -0x48(%rbp),%rsi
    1584:	48 8b 7d c0          	mov    -0x40(%rbp),%rdi
    1588:	44 8b 45 10          	mov    0x10(%rbp),%r8d
    158c:	44 89 04 24          	mov    %r8d,(%rsp)
    1590:	44 8b 45 18          	mov    0x18(%rbp),%r8d
    1594:	44 89 44 24 08       	mov    %r8d,0x8(%rsp)
    1599:	48 89 7d e0          	mov    %rdi,-0x20(%rbp)
    159d:	48 89 c7             	mov    %rax,%rdi
    15a0:	48 89 75 e8          	mov    %rsi,-0x18(%rbp)
    15a4:	89 d6                	mov    %edx,%esi
    15a6:	89 ca                	mov    %ecx,%edx
    15a8:	48 89 d9             	mov    %rbx,%rcx
    15ab:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    15af:	49 89 c0             	mov    %rax,%r8
    15b2:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    15b6:	49 89 c1             	mov    %rax,%r9
    15b9:	e8 00 00 00 00       	callq  15be <MPI_Allgatherv+0x96>
    15be:	89 45 90             	mov    %eax,-0x70(%rbp)
    15c1:	48 83 c4 10          	add    $0x10,%rsp
    15c5:	8b 45 90             	mov    -0x70(%rbp),%eax
    15c8:	89 45 94             	mov    %eax,-0x6c(%rbp)
    15cb:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    15cf:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
    15d3:	b8 00 00 00 00       	mov    $0x0,%eax
    15d8:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    15dc:	48 89 c7             	mov    %rax,%rdi
    15df:	48 89 d6             	mov    %rdx,%rsi
    15e2:	e8 00 00 00 00       	callq  15e7 <MPI_Allgatherv+0xbf>
    15e7:	8b 45 94             	mov    -0x6c(%rbp),%eax
    15ea:	48 8b 5d f0          	mov    -0x10(%rbp),%rbx
    15ee:	c9                   	leaveq 
    15ef:	c3                   	retq   

00000000000015f0 <MPI_Allreduce>:
    15f0:	55                   	push   %rbp
    15f1:	48 89 e5             	mov    %rsp,%rbp
    15f4:	48 83 ec 70          	sub    $0x70,%rsp
    15f8:	48 89 5d f0          	mov    %rbx,-0x10(%rbp)
    15fc:	48 89 7d 98          	mov    %rdi,-0x68(%rbp)
    1600:	48 89 75 a0          	mov    %rsi,-0x60(%rbp)
    1604:	89 55 a8             	mov    %edx,-0x58(%rbp)
    1607:	89 4d b0             	mov    %ecx,-0x50(%rbp)
    160a:	44 89 45 b8          	mov    %r8d,-0x48(%rbp)
    160e:	44 89 4d c0          	mov    %r9d,-0x40(%rbp)
    1612:	48 8b 45 08          	mov    0x8(%rbp),%rax
    1616:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
    161a:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    161e:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
    1622:	b8 00 00 00 00       	mov    $0x0,%eax
    1627:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    162b:	48 89 c7             	mov    %rax,%rdi
    162e:	48 89 d6             	mov    %rdx,%rsi
    1631:	e8 00 00 00 00       	callq  1636 <MPI_Allreduce+0x46>
    1636:	48 8b 45 98          	mov    -0x68(%rbp),%rax
    163a:	48 8b 55 a0          	mov    -0x60(%rbp),%rdx
    163e:	8b 4d a8             	mov    -0x58(%rbp),%ecx
    1641:	8b 5d b0             	mov    -0x50(%rbp),%ebx
    1644:	8b 75 b8             	mov    -0x48(%rbp),%esi
    1647:	8b 7d c0             	mov    -0x40(%rbp),%edi
    164a:	89 7d e0             	mov    %edi,-0x20(%rbp)
    164d:	48 89 c7             	mov    %rax,%rdi
    1650:	89 75 e8             	mov    %esi,-0x18(%rbp)
    1653:	48 89 d6             	mov    %rdx,%rsi
    1656:	89 ca                	mov    %ecx,%edx
    1658:	89 d9                	mov    %ebx,%ecx
    165a:	8b 45 e8             	mov    -0x18(%rbp),%eax
    165d:	41 89 c0             	mov    %eax,%r8d
    1660:	8b 45 e0             	mov    -0x20(%rbp),%eax
    1663:	41 89 c1             	mov    %eax,%r9d
    1666:	e8 00 00 00 00       	callq  166b <MPI_Allreduce+0x7b>
    166b:	89 45 90             	mov    %eax,-0x70(%rbp)
    166e:	8b 45 90             	mov    -0x70(%rbp),%eax
    1671:	89 45 94             	mov    %eax,-0x6c(%rbp)
    1674:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    1678:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
    167c:	b8 00 00 00 00       	mov    $0x0,%eax
    1681:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    1685:	48 89 c7             	mov    %rax,%rdi
    1688:	48 89 d6             	mov    %rdx,%rsi
    168b:	e8 00 00 00 00       	callq  1690 <MPI_Allreduce+0xa0>
    1690:	8b 45 94             	mov    -0x6c(%rbp),%eax
    1693:	48 8b 5d f0          	mov    -0x10(%rbp),%rbx
    1697:	c9                   	leaveq 
    1698:	c3                   	retq   

0000000000001699 <MPI_Alltoall>:
    1699:	55                   	push   %rbp
    169a:	48 89 e5             	mov    %rsp,%rbp
    169d:	48 83 ec 70          	sub    $0x70,%rsp
    16a1:	48 89 5d f0          	mov    %rbx,-0x10(%rbp)
    16a5:	48 89 7d 98          	mov    %rdi,-0x68(%rbp)
    16a9:	89 75 a0             	mov    %esi,-0x60(%rbp)
    16ac:	89 55 a8             	mov    %edx,-0x58(%rbp)
    16af:	48 89 4d b0          	mov    %rcx,-0x50(%rbp)
    16b3:	44 89 45 b8          	mov    %r8d,-0x48(%rbp)
    16b7:	44 89 4d c0          	mov    %r9d,-0x40(%rbp)
    16bb:	48 8b 45 08          	mov    0x8(%rbp),%rax
    16bf:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
    16c3:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    16c7:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
    16cb:	b8 00 00 00 00       	mov    $0x0,%eax
    16d0:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    16d4:	48 89 c7             	mov    %rax,%rdi
    16d7:	48 89 d6             	mov    %rdx,%rsi
    16da:	e8 00 00 00 00       	callq  16df <MPI_Alltoall+0x46>
    16df:	48 83 c4 f0          	add    $0xfffffffffffffff0,%rsp
    16e3:	48 8b 45 98          	mov    -0x68(%rbp),%rax
    16e7:	8b 55 a0             	mov    -0x60(%rbp),%edx
    16ea:	8b 4d a8             	mov    -0x58(%rbp),%ecx
    16ed:	48 8b 5d b0          	mov    -0x50(%rbp),%rbx
    16f1:	8b 75 b8             	mov    -0x48(%rbp),%esi
    16f4:	8b 7d c0             	mov    -0x40(%rbp),%edi
    16f7:	44 8b 45 10          	mov    0x10(%rbp),%r8d
    16fb:	44 89 04 24          	mov    %r8d,(%rsp)
    16ff:	89 7d e0             	mov    %edi,-0x20(%rbp)
    1702:	48 89 c7             	mov    %rax,%rdi
    1705:	89 75 e8             	mov    %esi,-0x18(%rbp)
    1708:	89 d6                	mov    %edx,%esi
    170a:	89 ca                	mov    %ecx,%edx
    170c:	48 89 d9             	mov    %rbx,%rcx
    170f:	8b 45 e8             	mov    -0x18(%rbp),%eax
    1712:	41 89 c0             	mov    %eax,%r8d
    1715:	8b 45 e0             	mov    -0x20(%rbp),%eax
    1718:	41 89 c1             	mov    %eax,%r9d
    171b:	e8 00 00 00 00       	callq  1720 <MPI_Alltoall+0x87>
    1720:	89 45 90             	mov    %eax,-0x70(%rbp)
    1723:	48 83 c4 10          	add    $0x10,%rsp
    1727:	8b 45 90             	mov    -0x70(%rbp),%eax
    172a:	89 45 94             	mov    %eax,-0x6c(%rbp)
    172d:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    1731:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
    1735:	b8 00 00 00 00       	mov    $0x0,%eax
    173a:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    173e:	48 89 c7             	mov    %rax,%rdi
    1741:	48 89 d6             	mov    %rdx,%rsi
    1744:	e8 00 00 00 00       	callq  1749 <MPI_Alltoall+0xb0>
    1749:	8b 45 94             	mov    -0x6c(%rbp),%eax
    174c:	48 8b 5d f0          	mov    -0x10(%rbp),%rbx
    1750:	c9                   	leaveq 
    1751:	c3                   	retq   

0000000000001752 <MPI_Alltoallv>:
    1752:	55                   	push   %rbp
    1753:	48 89 e5             	mov    %rsp,%rbp
    1756:	48 83 ec 70          	sub    $0x70,%rsp
    175a:	48 89 5d f0          	mov    %rbx,-0x10(%rbp)
    175e:	48 89 7d 98          	mov    %rdi,-0x68(%rbp)
    1762:	48 89 75 a0          	mov    %rsi,-0x60(%rbp)
    1766:	48 89 55 a8          	mov    %rdx,-0x58(%rbp)
    176a:	89 4d b0             	mov    %ecx,-0x50(%rbp)
    176d:	4c 89 45 b8          	mov    %r8,-0x48(%rbp)
    1771:	4c 89 4d c0          	mov    %r9,-0x40(%rbp)
    1775:	48 8b 45 08          	mov    0x8(%rbp),%rax
    1779:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
    177d:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    1781:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
    1785:	b8 00 00 00 00       	mov    $0x0,%eax
    178a:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    178e:	48 89 c7             	mov    %rax,%rdi
    1791:	48 89 d6             	mov    %rdx,%rsi
    1794:	e8 00 00 00 00       	callq  1799 <MPI_Alltoallv+0x47>
    1799:	48 83 c4 e0          	add    $0xffffffffffffffe0,%rsp
    179d:	48 8b 45 98          	mov    -0x68(%rbp),%rax
    17a1:	48 8b 55 a0          	mov    -0x60(%rbp),%rdx
    17a5:	48 8b 4d a8          	mov    -0x58(%rbp),%rcx
    17a9:	8b 5d b0             	mov    -0x50(%rbp),%ebx
    17ac:	48 8b 75 b8          	mov    -0x48(%rbp),%rsi
    17b0:	48 8b 7d c0          	mov    -0x40(%rbp),%rdi
    17b4:	4c 8b 45 10          	mov    0x10(%rbp),%r8
    17b8:	4c 89 04 24          	mov    %r8,(%rsp)
    17bc:	44 8b 45 18          	mov    0x18(%rbp),%r8d
    17c0:	44 89 44 24 08       	mov    %r8d,0x8(%rsp)
    17c5:	44 8b 45 20          	mov    0x20(%rbp),%r8d
    17c9:	44 89 44 24 10       	mov    %r8d,0x10(%rsp)
    17ce:	48 89 7d e0          	mov    %rdi,-0x20(%rbp)
    17d2:	48 89 c7             	mov    %rax,%rdi
    17d5:	48 89 75 e8          	mov    %rsi,-0x18(%rbp)
    17d9:	48 89 d6             	mov    %rdx,%rsi
    17dc:	48 89 ca             	mov    %rcx,%rdx
    17df:	89 d9                	mov    %ebx,%ecx
    17e1:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    17e5:	49 89 c0             	mov    %rax,%r8
    17e8:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    17ec:	49 89 c1             	mov    %rax,%r9
    17ef:	e8 00 00 00 00       	callq  17f4 <MPI_Alltoallv+0xa2>
    17f4:	89 45 90             	mov    %eax,-0x70(%rbp)
    17f7:	48 83 c4 20          	add    $0x20,%rsp
    17fb:	8b 45 90             	mov    -0x70(%rbp),%eax
    17fe:	89 45 94             	mov    %eax,-0x6c(%rbp)
    1801:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    1805:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
    1809:	b8 00 00 00 00       	mov    $0x0,%eax
    180e:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    1812:	48 89 c7             	mov    %rax,%rdi
    1815:	48 89 d6             	mov    %rdx,%rsi
    1818:	e8 00 00 00 00       	callq  181d <MPI_Alltoallv+0xcb>
    181d:	8b 45 94             	mov    -0x6c(%rbp),%eax
    1820:	48 8b 5d f0          	mov    -0x10(%rbp),%rbx
    1824:	c9                   	leaveq 
    1825:	c3                   	retq   

0000000000001826 <MPI_Barrier>:
    1826:	55                   	push   %rbp
    1827:	48 89 e5             	mov    %rsp,%rbp
    182a:	48 83 ec 30          	sub    $0x30,%rsp
    182e:	89 7d d8             	mov    %edi,-0x28(%rbp)
    1831:	48 8b 45 08          	mov    0x8(%rbp),%rax
    1835:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    1839:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    183d:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    1841:	b8 00 00 00 00       	mov    $0x0,%eax
    1846:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    184a:	48 89 c7             	mov    %rax,%rdi
    184d:	48 89 d6             	mov    %rdx,%rsi
    1850:	e8 00 00 00 00       	callq  1855 <MPI_Barrier+0x2f>
    1855:	8b 45 d8             	mov    -0x28(%rbp),%eax
    1858:	89 c7                	mov    %eax,%edi
    185a:	e8 00 00 00 00       	callq  185f <MPI_Barrier+0x39>
    185f:	89 45 d0             	mov    %eax,-0x30(%rbp)
    1862:	8b 45 d0             	mov    -0x30(%rbp),%eax
    1865:	89 45 d4             	mov    %eax,-0x2c(%rbp)
    1868:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    186c:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    1870:	b8 00 00 00 00       	mov    $0x0,%eax
    1875:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    1879:	48 89 c7             	mov    %rax,%rdi
    187c:	48 89 d6             	mov    %rdx,%rsi
    187f:	e8 00 00 00 00       	callq  1884 <MPI_Barrier+0x5e>
    1884:	8b 45 d4             	mov    -0x2c(%rbp),%eax
    1887:	c9                   	leaveq 
    1888:	c3                   	retq   

0000000000001889 <MPI_Bcast>:
    1889:	55                   	push   %rbp
    188a:	48 89 e5             	mov    %rsp,%rbp
    188d:	48 83 ec 60          	sub    $0x60,%rsp
    1891:	48 89 5d f0          	mov    %rbx,-0x10(%rbp)
    1895:	48 89 7d a8          	mov    %rdi,-0x58(%rbp)
    1899:	89 75 b0             	mov    %esi,-0x50(%rbp)
    189c:	89 55 b8             	mov    %edx,-0x48(%rbp)
    189f:	89 4d c0             	mov    %ecx,-0x40(%rbp)
    18a2:	44 89 45 c8          	mov    %r8d,-0x38(%rbp)
    18a6:	48 8b 45 08          	mov    0x8(%rbp),%rax
    18aa:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
    18ae:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    18b2:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
    18b6:	b8 00 00 00 00       	mov    $0x0,%eax
    18bb:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    18bf:	48 89 c7             	mov    %rax,%rdi
    18c2:	48 89 d6             	mov    %rdx,%rsi
    18c5:	e8 00 00 00 00       	callq  18ca <MPI_Bcast+0x41>
    18ca:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    18ce:	8b 55 b0             	mov    -0x50(%rbp),%edx
    18d1:	8b 4d b8             	mov    -0x48(%rbp),%ecx
    18d4:	8b 5d c0             	mov    -0x40(%rbp),%ebx
    18d7:	8b 75 c8             	mov    -0x38(%rbp),%esi
    18da:	48 89 c7             	mov    %rax,%rdi
    18dd:	89 75 e8             	mov    %esi,-0x18(%rbp)
    18e0:	89 d6                	mov    %edx,%esi
    18e2:	89 ca                	mov    %ecx,%edx
    18e4:	89 d9                	mov    %ebx,%ecx
    18e6:	8b 45 e8             	mov    -0x18(%rbp),%eax
    18e9:	41 89 c0             	mov    %eax,%r8d
    18ec:	e8 00 00 00 00       	callq  18f1 <MPI_Bcast+0x68>
    18f1:	89 45 a0             	mov    %eax,-0x60(%rbp)
    18f4:	8b 45 a0             	mov    -0x60(%rbp),%eax
    18f7:	89 45 a4             	mov    %eax,-0x5c(%rbp)
    18fa:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    18fe:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    1902:	b8 00 00 00 00       	mov    $0x0,%eax
    1907:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    190b:	48 89 c7             	mov    %rax,%rdi
    190e:	48 89 d6             	mov    %rdx,%rsi
    1911:	e8 00 00 00 00       	callq  1916 <MPI_Bcast+0x8d>
    1916:	8b 45 a4             	mov    -0x5c(%rbp),%eax
    1919:	48 8b 5d f0          	mov    -0x10(%rbp),%rbx
    191d:	c9                   	leaveq 
    191e:	c3                   	retq   

000000000000191f <MPI_Gather>:
    191f:	55                   	push   %rbp
    1920:	48 89 e5             	mov    %rsp,%rbp
    1923:	48 83 ec 70          	sub    $0x70,%rsp
    1927:	48 89 5d f0          	mov    %rbx,-0x10(%rbp)
    192b:	48 89 7d 98          	mov    %rdi,-0x68(%rbp)
    192f:	89 75 a0             	mov    %esi,-0x60(%rbp)
    1932:	89 55 a8             	mov    %edx,-0x58(%rbp)
    1935:	48 89 4d b0          	mov    %rcx,-0x50(%rbp)
    1939:	44 89 45 b8          	mov    %r8d,-0x48(%rbp)
    193d:	44 89 4d c0          	mov    %r9d,-0x40(%rbp)
    1941:	48 8b 45 08          	mov    0x8(%rbp),%rax
    1945:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
    1949:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    194d:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
    1951:	b8 00 00 00 00       	mov    $0x0,%eax
    1956:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    195a:	48 89 c7             	mov    %rax,%rdi
    195d:	48 89 d6             	mov    %rdx,%rsi
    1960:	e8 00 00 00 00       	callq  1965 <MPI_Gather+0x46>
    1965:	48 83 c4 f0          	add    $0xfffffffffffffff0,%rsp
    1969:	48 8b 45 98          	mov    -0x68(%rbp),%rax
    196d:	8b 55 a0             	mov    -0x60(%rbp),%edx
    1970:	8b 4d a8             	mov    -0x58(%rbp),%ecx
    1973:	48 8b 5d b0          	mov    -0x50(%rbp),%rbx
    1977:	8b 75 b8             	mov    -0x48(%rbp),%esi
    197a:	8b 7d c0             	mov    -0x40(%rbp),%edi
    197d:	44 8b 45 10          	mov    0x10(%rbp),%r8d
    1981:	44 89 04 24          	mov    %r8d,(%rsp)
    1985:	44 8b 45 18          	mov    0x18(%rbp),%r8d
    1989:	44 89 44 24 08       	mov    %r8d,0x8(%rsp)
    198e:	89 7d e0             	mov    %edi,-0x20(%rbp)
    1991:	48 89 c7             	mov    %rax,%rdi
    1994:	89 75 e8             	mov    %esi,-0x18(%rbp)
    1997:	89 d6                	mov    %edx,%esi
    1999:	89 ca                	mov    %ecx,%edx
    199b:	48 89 d9             	mov    %rbx,%rcx
    199e:	8b 45 e8             	mov    -0x18(%rbp),%eax
    19a1:	41 89 c0             	mov    %eax,%r8d
    19a4:	8b 45 e0             	mov    -0x20(%rbp),%eax
    19a7:	41 89 c1             	mov    %eax,%r9d
    19aa:	e8 00 00 00 00       	callq  19af <MPI_Gather+0x90>
    19af:	89 45 90             	mov    %eax,-0x70(%rbp)
    19b2:	48 83 c4 10          	add    $0x10,%rsp
    19b6:	8b 45 90             	mov    -0x70(%rbp),%eax
    19b9:	89 45 94             	mov    %eax,-0x6c(%rbp)
    19bc:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    19c0:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
    19c4:	b8 00 00 00 00       	mov    $0x0,%eax
    19c9:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    19cd:	48 89 c7             	mov    %rax,%rdi
    19d0:	48 89 d6             	mov    %rdx,%rsi
    19d3:	e8 00 00 00 00       	callq  19d8 <MPI_Gather+0xb9>
    19d8:	8b 45 94             	mov    -0x6c(%rbp),%eax
    19db:	48 8b 5d f0          	mov    -0x10(%rbp),%rbx
    19df:	c9                   	leaveq 
    19e0:	c3                   	retq   

00000000000019e1 <MPI_Gatherv>:
    19e1:	55                   	push   %rbp
    19e2:	48 89 e5             	mov    %rsp,%rbp
    19e5:	48 83 ec 70          	sub    $0x70,%rsp
    19e9:	48 89 5d f0          	mov    %rbx,-0x10(%rbp)
    19ed:	48 89 7d 98          	mov    %rdi,-0x68(%rbp)
    19f1:	89 75 a0             	mov    %esi,-0x60(%rbp)
    19f4:	89 55 a8             	mov    %edx,-0x58(%rbp)
    19f7:	48 89 4d b0          	mov    %rcx,-0x50(%rbp)
    19fb:	4c 89 45 b8          	mov    %r8,-0x48(%rbp)
    19ff:	4c 89 4d c0          	mov    %r9,-0x40(%rbp)
    1a03:	48 8b 45 08          	mov    0x8(%rbp),%rax
    1a07:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
    1a0b:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    1a0f:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
    1a13:	b8 00 00 00 00       	mov    $0x0,%eax
    1a18:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    1a1c:	48 89 c7             	mov    %rax,%rdi
    1a1f:	48 89 d6             	mov    %rdx,%rsi
    1a22:	e8 00 00 00 00       	callq  1a27 <MPI_Gatherv+0x46>
    1a27:	48 83 c4 e0          	add    $0xffffffffffffffe0,%rsp
    1a2b:	48 8b 45 98          	mov    -0x68(%rbp),%rax
    1a2f:	8b 55 a0             	mov    -0x60(%rbp),%edx
    1a32:	8b 4d a8             	mov    -0x58(%rbp),%ecx
    1a35:	48 8b 5d b0          	mov    -0x50(%rbp),%rbx
    1a39:	48 8b 75 b8          	mov    -0x48(%rbp),%rsi
    1a3d:	48 8b 7d c0          	mov    -0x40(%rbp),%rdi
    1a41:	44 8b 45 10          	mov    0x10(%rbp),%r8d
    1a45:	44 89 04 24          	mov    %r8d,(%rsp)
    1a49:	44 8b 45 18          	mov    0x18(%rbp),%r8d
    1a4d:	44 89 44 24 08       	mov    %r8d,0x8(%rsp)
    1a52:	44 8b 45 20          	mov    0x20(%rbp),%r8d
    1a56:	44 89 44 24 10       	mov    %r8d,0x10(%rsp)
    1a5b:	48 89 7d e0          	mov    %rdi,-0x20(%rbp)
    1a5f:	48 89 c7             	mov    %rax,%rdi
    1a62:	48 89 75 e8          	mov    %rsi,-0x18(%rbp)
    1a66:	89 d6                	mov    %edx,%esi
    1a68:	89 ca                	mov    %ecx,%edx
    1a6a:	48 89 d9             	mov    %rbx,%rcx
    1a6d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    1a71:	49 89 c0             	mov    %rax,%r8
    1a74:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    1a78:	49 89 c1             	mov    %rax,%r9
    1a7b:	e8 00 00 00 00       	callq  1a80 <MPI_Gatherv+0x9f>
    1a80:	89 45 90             	mov    %eax,-0x70(%rbp)
    1a83:	48 83 c4 20          	add    $0x20,%rsp
    1a87:	8b 45 90             	mov    -0x70(%rbp),%eax
    1a8a:	89 45 94             	mov    %eax,-0x6c(%rbp)
    1a8d:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    1a91:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
    1a95:	b8 00 00 00 00       	mov    $0x0,%eax
    1a9a:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    1a9e:	48 89 c7             	mov    %rax,%rdi
    1aa1:	48 89 d6             	mov    %rdx,%rsi
    1aa4:	e8 00 00 00 00       	callq  1aa9 <MPI_Gatherv+0xc8>
    1aa9:	8b 45 94             	mov    -0x6c(%rbp),%eax
    1aac:	48 8b 5d f0          	mov    -0x10(%rbp),%rbx
    1ab0:	c9                   	leaveq 
    1ab1:	c3                   	retq   

0000000000001ab2 <MPI_Reduce_scatter>:
    1ab2:	55                   	push   %rbp
    1ab3:	48 89 e5             	mov    %rsp,%rbp
    1ab6:	48 83 ec 70          	sub    $0x70,%rsp
    1aba:	48 89 5d f0          	mov    %rbx,-0x10(%rbp)
    1abe:	48 89 7d 98          	mov    %rdi,-0x68(%rbp)
    1ac2:	48 89 75 a0          	mov    %rsi,-0x60(%rbp)
    1ac6:	48 89 55 a8          	mov    %rdx,-0x58(%rbp)
    1aca:	89 4d b0             	mov    %ecx,-0x50(%rbp)
    1acd:	44 89 45 b8          	mov    %r8d,-0x48(%rbp)
    1ad1:	44 89 4d c0          	mov    %r9d,-0x40(%rbp)
    1ad5:	48 8b 45 08          	mov    0x8(%rbp),%rax
    1ad9:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
    1add:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    1ae1:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
    1ae5:	b8 00 00 00 00       	mov    $0x0,%eax
    1aea:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    1aee:	48 89 c7             	mov    %rax,%rdi
    1af1:	48 89 d6             	mov    %rdx,%rsi
    1af4:	e8 00 00 00 00       	callq  1af9 <MPI_Reduce_scatter+0x47>
    1af9:	48 8b 45 98          	mov    -0x68(%rbp),%rax
    1afd:	48 8b 55 a0          	mov    -0x60(%rbp),%rdx
    1b01:	48 8b 4d a8          	mov    -0x58(%rbp),%rcx
    1b05:	8b 5d b0             	mov    -0x50(%rbp),%ebx
    1b08:	8b 75 b8             	mov    -0x48(%rbp),%esi
    1b0b:	8b 7d c0             	mov    -0x40(%rbp),%edi
    1b0e:	89 7d e0             	mov    %edi,-0x20(%rbp)
    1b11:	48 89 c7             	mov    %rax,%rdi
    1b14:	89 75 e8             	mov    %esi,-0x18(%rbp)
    1b17:	48 89 d6             	mov    %rdx,%rsi
    1b1a:	48 89 ca             	mov    %rcx,%rdx
    1b1d:	89 d9                	mov    %ebx,%ecx
    1b1f:	8b 45 e8             	mov    -0x18(%rbp),%eax
    1b22:	41 89 c0             	mov    %eax,%r8d
    1b25:	8b 45 e0             	mov    -0x20(%rbp),%eax
    1b28:	41 89 c1             	mov    %eax,%r9d
    1b2b:	e8 00 00 00 00       	callq  1b30 <MPI_Reduce_scatter+0x7e>
    1b30:	89 45 90             	mov    %eax,-0x70(%rbp)
    1b33:	8b 45 90             	mov    -0x70(%rbp),%eax
    1b36:	89 45 94             	mov    %eax,-0x6c(%rbp)
    1b39:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    1b3d:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
    1b41:	b8 00 00 00 00       	mov    $0x0,%eax
    1b46:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    1b4a:	48 89 c7             	mov    %rax,%rdi
    1b4d:	48 89 d6             	mov    %rdx,%rsi
    1b50:	e8 00 00 00 00       	callq  1b55 <MPI_Reduce_scatter+0xa3>
    1b55:	8b 45 94             	mov    -0x6c(%rbp),%eax
    1b58:	48 8b 5d f0          	mov    -0x10(%rbp),%rbx
    1b5c:	c9                   	leaveq 
    1b5d:	c3                   	retq   

0000000000001b5e <MPI_Reduce>:
    1b5e:	55                   	push   %rbp
    1b5f:	48 89 e5             	mov    %rsp,%rbp
    1b62:	48 83 ec 70          	sub    $0x70,%rsp
    1b66:	48 89 5d f0          	mov    %rbx,-0x10(%rbp)
    1b6a:	48 89 7d 98          	mov    %rdi,-0x68(%rbp)
    1b6e:	48 89 75 a0          	mov    %rsi,-0x60(%rbp)
    1b72:	89 55 a8             	mov    %edx,-0x58(%rbp)
    1b75:	89 4d b0             	mov    %ecx,-0x50(%rbp)
    1b78:	44 89 45 b8          	mov    %r8d,-0x48(%rbp)
    1b7c:	44 89 4d c0          	mov    %r9d,-0x40(%rbp)
    1b80:	48 8b 45 08          	mov    0x8(%rbp),%rax
    1b84:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
    1b88:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    1b8c:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
    1b90:	b8 00 00 00 00       	mov    $0x0,%eax
    1b95:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    1b99:	48 89 c7             	mov    %rax,%rdi
    1b9c:	48 89 d6             	mov    %rdx,%rsi
    1b9f:	e8 00 00 00 00       	callq  1ba4 <MPI_Reduce+0x46>
    1ba4:	48 83 c4 f0          	add    $0xfffffffffffffff0,%rsp
    1ba8:	48 8b 45 98          	mov    -0x68(%rbp),%rax
    1bac:	48 8b 55 a0          	mov    -0x60(%rbp),%rdx
    1bb0:	8b 4d a8             	mov    -0x58(%rbp),%ecx
    1bb3:	8b 5d b0             	mov    -0x50(%rbp),%ebx
    1bb6:	8b 75 b8             	mov    -0x48(%rbp),%esi
    1bb9:	8b 7d c0             	mov    -0x40(%rbp),%edi
    1bbc:	44 8b 45 10          	mov    0x10(%rbp),%r8d
    1bc0:	44 89 04 24          	mov    %r8d,(%rsp)
    1bc4:	89 7d e0             	mov    %edi,-0x20(%rbp)
    1bc7:	48 89 c7             	mov    %rax,%rdi
    1bca:	89 75 e8             	mov    %esi,-0x18(%rbp)
    1bcd:	48 89 d6             	mov    %rdx,%rsi
    1bd0:	89 ca                	mov    %ecx,%edx
    1bd2:	89 d9                	mov    %ebx,%ecx
    1bd4:	8b 45 e8             	mov    -0x18(%rbp),%eax
    1bd7:	41 89 c0             	mov    %eax,%r8d
    1bda:	8b 45 e0             	mov    -0x20(%rbp),%eax
    1bdd:	41 89 c1             	mov    %eax,%r9d
    1be0:	e8 00 00 00 00       	callq  1be5 <MPI_Reduce+0x87>
    1be5:	89 45 90             	mov    %eax,-0x70(%rbp)
    1be8:	48 83 c4 10          	add    $0x10,%rsp
    1bec:	8b 45 90             	mov    -0x70(%rbp),%eax
    1bef:	89 45 94             	mov    %eax,-0x6c(%rbp)
    1bf2:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    1bf6:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
    1bfa:	b8 00 00 00 00       	mov    $0x0,%eax
    1bff:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    1c03:	48 89 c7             	mov    %rax,%rdi
    1c06:	48 89 d6             	mov    %rdx,%rsi
    1c09:	e8 00 00 00 00       	callq  1c0e <MPI_Reduce+0xb0>
    1c0e:	8b 45 94             	mov    -0x6c(%rbp),%eax
    1c11:	48 8b 5d f0          	mov    -0x10(%rbp),%rbx
    1c15:	c9                   	leaveq 
    1c16:	c3                   	retq   

0000000000001c17 <MPI_Scan>:
    1c17:	55                   	push   %rbp
    1c18:	48 89 e5             	mov    %rsp,%rbp
    1c1b:	48 83 ec 70          	sub    $0x70,%rsp
    1c1f:	48 89 5d f0          	mov    %rbx,-0x10(%rbp)
    1c23:	48 89 7d 98          	mov    %rdi,-0x68(%rbp)
    1c27:	48 89 75 a0          	mov    %rsi,-0x60(%rbp)
    1c2b:	89 55 a8             	mov    %edx,-0x58(%rbp)
    1c2e:	89 4d b0             	mov    %ecx,-0x50(%rbp)
    1c31:	44 89 45 b8          	mov    %r8d,-0x48(%rbp)
    1c35:	44 89 4d c0          	mov    %r9d,-0x40(%rbp)
    1c39:	48 8b 45 08          	mov    0x8(%rbp),%rax
    1c3d:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
    1c41:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    1c45:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
    1c49:	b8 00 00 00 00       	mov    $0x0,%eax
    1c4e:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    1c52:	48 89 c7             	mov    %rax,%rdi
    1c55:	48 89 d6             	mov    %rdx,%rsi
    1c58:	e8 00 00 00 00       	callq  1c5d <MPI_Scan+0x46>
    1c5d:	48 8b 45 98          	mov    -0x68(%rbp),%rax
    1c61:	48 8b 55 a0          	mov    -0x60(%rbp),%rdx
    1c65:	8b 4d a8             	mov    -0x58(%rbp),%ecx
    1c68:	8b 5d b0             	mov    -0x50(%rbp),%ebx
    1c6b:	8b 75 b8             	mov    -0x48(%rbp),%esi
    1c6e:	8b 7d c0             	mov    -0x40(%rbp),%edi
    1c71:	89 7d e0             	mov    %edi,-0x20(%rbp)
    1c74:	48 89 c7             	mov    %rax,%rdi
    1c77:	89 75 e8             	mov    %esi,-0x18(%rbp)
    1c7a:	48 89 d6             	mov    %rdx,%rsi
    1c7d:	89 ca                	mov    %ecx,%edx
    1c7f:	89 d9                	mov    %ebx,%ecx
    1c81:	8b 45 e8             	mov    -0x18(%rbp),%eax
    1c84:	41 89 c0             	mov    %eax,%r8d
    1c87:	8b 45 e0             	mov    -0x20(%rbp),%eax
    1c8a:	41 89 c1             	mov    %eax,%r9d
    1c8d:	e8 00 00 00 00       	callq  1c92 <MPI_Scan+0x7b>
    1c92:	89 45 90             	mov    %eax,-0x70(%rbp)
    1c95:	8b 45 90             	mov    -0x70(%rbp),%eax
    1c98:	89 45 94             	mov    %eax,-0x6c(%rbp)
    1c9b:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    1c9f:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
    1ca3:	b8 00 00 00 00       	mov    $0x0,%eax
    1ca8:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    1cac:	48 89 c7             	mov    %rax,%rdi
    1caf:	48 89 d6             	mov    %rdx,%rsi
    1cb2:	e8 00 00 00 00       	callq  1cb7 <MPI_Scan+0xa0>
    1cb7:	8b 45 94             	mov    -0x6c(%rbp),%eax
    1cba:	48 8b 5d f0          	mov    -0x10(%rbp),%rbx
    1cbe:	c9                   	leaveq 
    1cbf:	c3                   	retq   

0000000000001cc0 <MPI_Scatter>:
    1cc0:	55                   	push   %rbp
    1cc1:	48 89 e5             	mov    %rsp,%rbp
    1cc4:	48 83 ec 70          	sub    $0x70,%rsp
    1cc8:	48 89 5d f0          	mov    %rbx,-0x10(%rbp)
    1ccc:	48 89 7d 98          	mov    %rdi,-0x68(%rbp)
    1cd0:	89 75 a0             	mov    %esi,-0x60(%rbp)
    1cd3:	89 55 a8             	mov    %edx,-0x58(%rbp)
    1cd6:	48 89 4d b0          	mov    %rcx,-0x50(%rbp)
    1cda:	44 89 45 b8          	mov    %r8d,-0x48(%rbp)
    1cde:	44 89 4d c0          	mov    %r9d,-0x40(%rbp)
    1ce2:	48 8b 45 08          	mov    0x8(%rbp),%rax
    1ce6:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
    1cea:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    1cee:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
    1cf2:	b8 00 00 00 00       	mov    $0x0,%eax
    1cf7:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    1cfb:	48 89 c7             	mov    %rax,%rdi
    1cfe:	48 89 d6             	mov    %rdx,%rsi
    1d01:	e8 00 00 00 00       	callq  1d06 <MPI_Scatter+0x46>
    1d06:	48 83 c4 f0          	add    $0xfffffffffffffff0,%rsp
    1d0a:	48 8b 45 98          	mov    -0x68(%rbp),%rax
    1d0e:	8b 55 a0             	mov    -0x60(%rbp),%edx
    1d11:	8b 4d a8             	mov    -0x58(%rbp),%ecx
    1d14:	48 8b 5d b0          	mov    -0x50(%rbp),%rbx
    1d18:	8b 75 b8             	mov    -0x48(%rbp),%esi
    1d1b:	8b 7d c0             	mov    -0x40(%rbp),%edi
    1d1e:	44 8b 45 10          	mov    0x10(%rbp),%r8d
    1d22:	44 89 04 24          	mov    %r8d,(%rsp)
    1d26:	44 8b 45 18          	mov    0x18(%rbp),%r8d
    1d2a:	44 89 44 24 08       	mov    %r8d,0x8(%rsp)
    1d2f:	89 7d e0             	mov    %edi,-0x20(%rbp)
    1d32:	48 89 c7             	mov    %rax,%rdi
    1d35:	89 75 e8             	mov    %esi,-0x18(%rbp)
    1d38:	89 d6                	mov    %edx,%esi
    1d3a:	89 ca                	mov    %ecx,%edx
    1d3c:	48 89 d9             	mov    %rbx,%rcx
    1d3f:	8b 45 e8             	mov    -0x18(%rbp),%eax
    1d42:	41 89 c0             	mov    %eax,%r8d
    1d45:	8b 45 e0             	mov    -0x20(%rbp),%eax
    1d48:	41 89 c1             	mov    %eax,%r9d
    1d4b:	e8 00 00 00 00       	callq  1d50 <MPI_Scatter+0x90>
    1d50:	89 45 90             	mov    %eax,-0x70(%rbp)
    1d53:	48 83 c4 10          	add    $0x10,%rsp
    1d57:	8b 45 90             	mov    -0x70(%rbp),%eax
    1d5a:	89 45 94             	mov    %eax,-0x6c(%rbp)
    1d5d:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    1d61:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
    1d65:	b8 00 00 00 00       	mov    $0x0,%eax
    1d6a:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    1d6e:	48 89 c7             	mov    %rax,%rdi
    1d71:	48 89 d6             	mov    %rdx,%rsi
    1d74:	e8 00 00 00 00       	callq  1d79 <MPI_Scatter+0xb9>
    1d79:	8b 45 94             	mov    -0x6c(%rbp),%eax
    1d7c:	48 8b 5d f0          	mov    -0x10(%rbp),%rbx
    1d80:	c9                   	leaveq 
    1d81:	c3                   	retq   

0000000000001d82 <MPI_Scatterv>:
    1d82:	55                   	push   %rbp
    1d83:	48 89 e5             	mov    %rsp,%rbp
    1d86:	48 83 ec 70          	sub    $0x70,%rsp
    1d8a:	48 89 5d f0          	mov    %rbx,-0x10(%rbp)
    1d8e:	48 89 7d 98          	mov    %rdi,-0x68(%rbp)
    1d92:	48 89 75 a0          	mov    %rsi,-0x60(%rbp)
    1d96:	48 89 55 a8          	mov    %rdx,-0x58(%rbp)
    1d9a:	89 4d b0             	mov    %ecx,-0x50(%rbp)
    1d9d:	4c 89 45 b8          	mov    %r8,-0x48(%rbp)
    1da1:	44 89 4d c0          	mov    %r9d,-0x40(%rbp)
    1da5:	48 8b 45 08          	mov    0x8(%rbp),%rax
    1da9:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
    1dad:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    1db1:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
    1db5:	b8 00 00 00 00       	mov    $0x0,%eax
    1dba:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    1dbe:	48 89 c7             	mov    %rax,%rdi
    1dc1:	48 89 d6             	mov    %rdx,%rsi
    1dc4:	e8 00 00 00 00       	callq  1dc9 <MPI_Scatterv+0x47>
    1dc9:	48 83 c4 e0          	add    $0xffffffffffffffe0,%rsp
    1dcd:	48 8b 45 98          	mov    -0x68(%rbp),%rax
    1dd1:	48 8b 55 a0          	mov    -0x60(%rbp),%rdx
    1dd5:	48 8b 4d a8          	mov    -0x58(%rbp),%rcx
    1dd9:	8b 5d b0             	mov    -0x50(%rbp),%ebx
    1ddc:	48 8b 75 b8          	mov    -0x48(%rbp),%rsi
    1de0:	8b 7d c0             	mov    -0x40(%rbp),%edi
    1de3:	44 8b 45 10          	mov    0x10(%rbp),%r8d
    1de7:	44 89 04 24          	mov    %r8d,(%rsp)
    1deb:	44 8b 45 18          	mov    0x18(%rbp),%r8d
    1def:	44 89 44 24 08       	mov    %r8d,0x8(%rsp)
    1df4:	44 8b 45 20          	mov    0x20(%rbp),%r8d
    1df8:	44 89 44 24 10       	mov    %r8d,0x10(%rsp)
    1dfd:	89 7d e0             	mov    %edi,-0x20(%rbp)
    1e00:	48 89 c7             	mov    %rax,%rdi
    1e03:	48 89 75 e8          	mov    %rsi,-0x18(%rbp)
    1e07:	48 89 d6             	mov    %rdx,%rsi
    1e0a:	48 89 ca             	mov    %rcx,%rdx
    1e0d:	89 d9                	mov    %ebx,%ecx
    1e0f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    1e13:	49 89 c0             	mov    %rax,%r8
    1e16:	8b 45 e0             	mov    -0x20(%rbp),%eax
    1e19:	41 89 c1             	mov    %eax,%r9d
    1e1c:	e8 00 00 00 00       	callq  1e21 <MPI_Scatterv+0x9f>
    1e21:	89 45 90             	mov    %eax,-0x70(%rbp)
    1e24:	48 83 c4 20          	add    $0x20,%rsp
    1e28:	8b 45 90             	mov    -0x70(%rbp),%eax
    1e2b:	89 45 94             	mov    %eax,-0x6c(%rbp)
    1e2e:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    1e32:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
    1e36:	b8 00 00 00 00       	mov    $0x0,%eax
    1e3b:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    1e3f:	48 89 c7             	mov    %rax,%rdi
    1e42:	48 89 d6             	mov    %rdx,%rsi
    1e45:	e8 00 00 00 00       	callq  1e4a <MPI_Scatterv+0xc8>
    1e4a:	8b 45 94             	mov    -0x6c(%rbp),%eax
    1e4d:	48 8b 5d f0          	mov    -0x10(%rbp),%rbx
    1e51:	c9                   	leaveq 
    1e52:	c3                   	retq   

0000000000001e53 <MPI_Comm_compare>:
    1e53:	55                   	push   %rbp
    1e54:	48 89 e5             	mov    %rsp,%rbp
    1e57:	48 83 ec 40          	sub    $0x40,%rsp
    1e5b:	89 7d c8             	mov    %edi,-0x38(%rbp)
    1e5e:	89 75 d0             	mov    %esi,-0x30(%rbp)
    1e61:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
    1e65:	48 8b 45 08          	mov    0x8(%rbp),%rax
    1e69:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    1e6d:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    1e71:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    1e75:	b8 00 00 00 00       	mov    $0x0,%eax
    1e7a:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    1e7e:	48 89 c7             	mov    %rax,%rdi
    1e81:	48 89 d6             	mov    %rdx,%rsi
    1e84:	e8 00 00 00 00       	callq  1e89 <MPI_Comm_compare+0x36>
    1e89:	8b 45 c8             	mov    -0x38(%rbp),%eax
    1e8c:	8b 55 d0             	mov    -0x30(%rbp),%edx
    1e8f:	48 8b 4d d8          	mov    -0x28(%rbp),%rcx
    1e93:	89 c7                	mov    %eax,%edi
    1e95:	89 d6                	mov    %edx,%esi
    1e97:	48 89 ca             	mov    %rcx,%rdx
    1e9a:	e8 00 00 00 00       	callq  1e9f <MPI_Comm_compare+0x4c>
    1e9f:	89 45 c0             	mov    %eax,-0x40(%rbp)
    1ea2:	8b 45 c0             	mov    -0x40(%rbp),%eax
    1ea5:	89 45 c4             	mov    %eax,-0x3c(%rbp)
    1ea8:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    1eac:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    1eb0:	b8 00 00 00 00       	mov    $0x0,%eax
    1eb5:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    1eb9:	48 89 c7             	mov    %rax,%rdi
    1ebc:	48 89 d6             	mov    %rdx,%rsi
    1ebf:	e8 00 00 00 00       	callq  1ec4 <MPI_Comm_compare+0x71>
    1ec4:	8b 45 c4             	mov    -0x3c(%rbp),%eax
    1ec7:	c9                   	leaveq 
    1ec8:	c3                   	retq   

0000000000001ec9 <MPI_Comm_create>:
    1ec9:	55                   	push   %rbp
    1eca:	48 89 e5             	mov    %rsp,%rbp
    1ecd:	48 83 ec 40          	sub    $0x40,%rsp
    1ed1:	89 7d c8             	mov    %edi,-0x38(%rbp)
    1ed4:	89 75 d0             	mov    %esi,-0x30(%rbp)
    1ed7:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
    1edb:	48 8b 45 08          	mov    0x8(%rbp),%rax
    1edf:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    1ee3:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    1ee7:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    1eeb:	b8 00 00 00 00       	mov    $0x0,%eax
    1ef0:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    1ef4:	48 89 c7             	mov    %rax,%rdi
    1ef7:	48 89 d6             	mov    %rdx,%rsi
    1efa:	e8 00 00 00 00       	callq  1eff <MPI_Comm_create+0x36>
    1eff:	8b 45 c8             	mov    -0x38(%rbp),%eax
    1f02:	8b 55 d0             	mov    -0x30(%rbp),%edx
    1f05:	48 8b 4d d8          	mov    -0x28(%rbp),%rcx
    1f09:	89 c7                	mov    %eax,%edi
    1f0b:	89 d6                	mov    %edx,%esi
    1f0d:	48 89 ca             	mov    %rcx,%rdx
    1f10:	e8 00 00 00 00       	callq  1f15 <MPI_Comm_create+0x4c>
    1f15:	89 45 c0             	mov    %eax,-0x40(%rbp)
    1f18:	8b 45 c0             	mov    -0x40(%rbp),%eax
    1f1b:	89 45 c4             	mov    %eax,-0x3c(%rbp)
    1f1e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    1f22:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    1f26:	b8 00 00 00 00       	mov    $0x0,%eax
    1f2b:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    1f2f:	48 89 c7             	mov    %rax,%rdi
    1f32:	48 89 d6             	mov    %rdx,%rsi
    1f35:	e8 00 00 00 00       	callq  1f3a <MPI_Comm_create+0x71>
    1f3a:	8b 45 c4             	mov    -0x3c(%rbp),%eax
    1f3d:	c9                   	leaveq 
    1f3e:	c3                   	retq   

0000000000001f3f <MPI_Comm_dup>:
    1f3f:	55                   	push   %rbp
    1f40:	48 89 e5             	mov    %rsp,%rbp
    1f43:	48 83 ec 30          	sub    $0x30,%rsp
    1f47:	89 7d d8             	mov    %edi,-0x28(%rbp)
    1f4a:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    1f4e:	48 8b 45 08          	mov    0x8(%rbp),%rax
    1f52:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    1f56:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    1f5a:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    1f5e:	b8 00 00 00 00       	mov    $0x0,%eax
    1f63:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    1f67:	48 89 c7             	mov    %rax,%rdi
    1f6a:	48 89 d6             	mov    %rdx,%rsi
    1f6d:	e8 00 00 00 00       	callq  1f72 <MPI_Comm_dup+0x33>
    1f72:	8b 45 d8             	mov    -0x28(%rbp),%eax
    1f75:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    1f79:	89 c7                	mov    %eax,%edi
    1f7b:	48 89 d6             	mov    %rdx,%rsi
    1f7e:	e8 00 00 00 00       	callq  1f83 <MPI_Comm_dup+0x44>
    1f83:	89 45 d0             	mov    %eax,-0x30(%rbp)
    1f86:	8b 45 d0             	mov    -0x30(%rbp),%eax
    1f89:	89 45 d4             	mov    %eax,-0x2c(%rbp)
    1f8c:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    1f90:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    1f94:	b8 00 00 00 00       	mov    $0x0,%eax
    1f99:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    1f9d:	48 89 c7             	mov    %rax,%rdi
    1fa0:	48 89 d6             	mov    %rdx,%rsi
    1fa3:	e8 00 00 00 00       	callq  1fa8 <MPI_Comm_dup+0x69>
    1fa8:	8b 45 d4             	mov    -0x2c(%rbp),%eax
    1fab:	c9                   	leaveq 
    1fac:	c3                   	retq   

0000000000001fad <MPI_Comm_free>:
    1fad:	55                   	push   %rbp
    1fae:	48 89 e5             	mov    %rsp,%rbp
    1fb1:	48 83 ec 30          	sub    $0x30,%rsp
    1fb5:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    1fb9:	48 8b 45 08          	mov    0x8(%rbp),%rax
    1fbd:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    1fc1:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    1fc5:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    1fc9:	b8 00 00 00 00       	mov    $0x0,%eax
    1fce:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    1fd2:	48 89 c7             	mov    %rax,%rdi
    1fd5:	48 89 d6             	mov    %rdx,%rsi
    1fd8:	e8 00 00 00 00       	callq  1fdd <MPI_Comm_free+0x30>
    1fdd:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    1fe1:	48 89 c7             	mov    %rax,%rdi
    1fe4:	e8 00 00 00 00       	callq  1fe9 <MPI_Comm_free+0x3c>
    1fe9:	89 45 d0             	mov    %eax,-0x30(%rbp)
    1fec:	8b 45 d0             	mov    -0x30(%rbp),%eax
    1fef:	89 45 d4             	mov    %eax,-0x2c(%rbp)
    1ff2:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    1ff6:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    1ffa:	b8 00 00 00 00       	mov    $0x0,%eax
    1fff:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    2003:	48 89 c7             	mov    %rax,%rdi
    2006:	48 89 d6             	mov    %rdx,%rsi
    2009:	e8 00 00 00 00       	callq  200e <MPI_Comm_free+0x61>
    200e:	8b 45 d4             	mov    -0x2c(%rbp),%eax
    2011:	c9                   	leaveq 
    2012:	c3                   	retq   

0000000000002013 <MPI_Comm_group>:
    2013:	55                   	push   %rbp
    2014:	48 89 e5             	mov    %rsp,%rbp
    2017:	48 83 ec 30          	sub    $0x30,%rsp
    201b:	89 7d d8             	mov    %edi,-0x28(%rbp)
    201e:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    2022:	48 8b 45 08          	mov    0x8(%rbp),%rax
    2026:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    202a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    202e:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    2032:	b8 00 00 00 00       	mov    $0x0,%eax
    2037:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    203b:	48 89 c7             	mov    %rax,%rdi
    203e:	48 89 d6             	mov    %rdx,%rsi
    2041:	e8 00 00 00 00       	callq  2046 <MPI_Comm_group+0x33>
    2046:	8b 45 d8             	mov    -0x28(%rbp),%eax
    2049:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    204d:	89 c7                	mov    %eax,%edi
    204f:	48 89 d6             	mov    %rdx,%rsi
    2052:	e8 00 00 00 00       	callq  2057 <MPI_Comm_group+0x44>
    2057:	89 45 d0             	mov    %eax,-0x30(%rbp)
    205a:	8b 45 d0             	mov    -0x30(%rbp),%eax
    205d:	89 45 d4             	mov    %eax,-0x2c(%rbp)
    2060:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    2064:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    2068:	b8 00 00 00 00       	mov    $0x0,%eax
    206d:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    2071:	48 89 c7             	mov    %rax,%rdi
    2074:	48 89 d6             	mov    %rdx,%rsi
    2077:	e8 00 00 00 00       	callq  207c <MPI_Comm_group+0x69>
    207c:	8b 45 d4             	mov    -0x2c(%rbp),%eax
    207f:	c9                   	leaveq 
    2080:	c3                   	retq   

0000000000002081 <MPI_Comm_remote_group>:
    2081:	55                   	push   %rbp
    2082:	48 89 e5             	mov    %rsp,%rbp
    2085:	48 83 ec 30          	sub    $0x30,%rsp
    2089:	89 7d d8             	mov    %edi,-0x28(%rbp)
    208c:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    2090:	48 8b 45 08          	mov    0x8(%rbp),%rax
    2094:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    2098:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    209c:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    20a0:	b8 00 00 00 00       	mov    $0x0,%eax
    20a5:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    20a9:	48 89 c7             	mov    %rax,%rdi
    20ac:	48 89 d6             	mov    %rdx,%rsi
    20af:	e8 00 00 00 00       	callq  20b4 <MPI_Comm_remote_group+0x33>
    20b4:	8b 45 d8             	mov    -0x28(%rbp),%eax
    20b7:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    20bb:	89 c7                	mov    %eax,%edi
    20bd:	48 89 d6             	mov    %rdx,%rsi
    20c0:	e8 00 00 00 00       	callq  20c5 <MPI_Comm_remote_group+0x44>
    20c5:	89 45 d0             	mov    %eax,-0x30(%rbp)
    20c8:	8b 45 d0             	mov    -0x30(%rbp),%eax
    20cb:	89 45 d4             	mov    %eax,-0x2c(%rbp)
    20ce:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    20d2:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    20d6:	b8 00 00 00 00       	mov    $0x0,%eax
    20db:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    20df:	48 89 c7             	mov    %rax,%rdi
    20e2:	48 89 d6             	mov    %rdx,%rsi
    20e5:	e8 00 00 00 00       	callq  20ea <MPI_Comm_remote_group+0x69>
    20ea:	8b 45 d4             	mov    -0x2c(%rbp),%eax
    20ed:	c9                   	leaveq 
    20ee:	c3                   	retq   

00000000000020ef <MPI_Comm_remote_size>:
    20ef:	55                   	push   %rbp
    20f0:	48 89 e5             	mov    %rsp,%rbp
    20f3:	48 83 ec 30          	sub    $0x30,%rsp
    20f7:	89 7d d8             	mov    %edi,-0x28(%rbp)
    20fa:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    20fe:	48 8b 45 08          	mov    0x8(%rbp),%rax
    2102:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    2106:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    210a:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    210e:	b8 00 00 00 00       	mov    $0x0,%eax
    2113:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    2117:	48 89 c7             	mov    %rax,%rdi
    211a:	48 89 d6             	mov    %rdx,%rsi
    211d:	e8 00 00 00 00       	callq  2122 <MPI_Comm_remote_size+0x33>
    2122:	8b 45 d8             	mov    -0x28(%rbp),%eax
    2125:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    2129:	89 c7                	mov    %eax,%edi
    212b:	48 89 d6             	mov    %rdx,%rsi
    212e:	e8 00 00 00 00       	callq  2133 <MPI_Comm_remote_size+0x44>
    2133:	89 45 d0             	mov    %eax,-0x30(%rbp)
    2136:	8b 45 d0             	mov    -0x30(%rbp),%eax
    2139:	89 45 d4             	mov    %eax,-0x2c(%rbp)
    213c:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    2140:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    2144:	b8 00 00 00 00       	mov    $0x0,%eax
    2149:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    214d:	48 89 c7             	mov    %rax,%rdi
    2150:	48 89 d6             	mov    %rdx,%rsi
    2153:	e8 00 00 00 00       	callq  2158 <MPI_Comm_remote_size+0x69>
    2158:	8b 45 d4             	mov    -0x2c(%rbp),%eax
    215b:	c9                   	leaveq 
    215c:	c3                   	retq   

000000000000215d <MPI_Comm_split>:
    215d:	55                   	push   %rbp
    215e:	48 89 e5             	mov    %rsp,%rbp
    2161:	48 83 ec 50          	sub    $0x50,%rsp
    2165:	48 89 5d f0          	mov    %rbx,-0x10(%rbp)
    2169:	89 7d b8             	mov    %edi,-0x48(%rbp)
    216c:	89 75 c0             	mov    %esi,-0x40(%rbp)
    216f:	89 55 c8             	mov    %edx,-0x38(%rbp)
    2172:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
    2176:	48 8b 45 08          	mov    0x8(%rbp),%rax
    217a:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
    217e:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    2182:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    2186:	b8 00 00 00 00       	mov    $0x0,%eax
    218b:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    218f:	48 89 c7             	mov    %rax,%rdi
    2192:	48 89 d6             	mov    %rdx,%rsi
    2195:	e8 00 00 00 00       	callq  219a <MPI_Comm_split+0x3d>
    219a:	8b 45 b8             	mov    -0x48(%rbp),%eax
    219d:	8b 55 c0             	mov    -0x40(%rbp),%edx
    21a0:	8b 4d c8             	mov    -0x38(%rbp),%ecx
    21a3:	48 8b 5d d0          	mov    -0x30(%rbp),%rbx
    21a7:	89 c7                	mov    %eax,%edi
    21a9:	89 d6                	mov    %edx,%esi
    21ab:	89 ca                	mov    %ecx,%edx
    21ad:	48 89 d9             	mov    %rbx,%rcx
    21b0:	e8 00 00 00 00       	callq  21b5 <MPI_Comm_split+0x58>
    21b5:	89 45 b0             	mov    %eax,-0x50(%rbp)
    21b8:	8b 45 b0             	mov    -0x50(%rbp),%eax
    21bb:	89 45 b4             	mov    %eax,-0x4c(%rbp)
    21be:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    21c2:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    21c6:	b8 00 00 00 00       	mov    $0x0,%eax
    21cb:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    21cf:	48 89 c7             	mov    %rax,%rdi
    21d2:	48 89 d6             	mov    %rdx,%rsi
    21d5:	e8 00 00 00 00       	callq  21da <MPI_Comm_split+0x7d>
    21da:	8b 45 b4             	mov    -0x4c(%rbp),%eax
    21dd:	48 8b 5d f0          	mov    -0x10(%rbp),%rbx
    21e1:	c9                   	leaveq 
    21e2:	c3                   	retq   

00000000000021e3 <MPI_Comm_test_inter>:
    21e3:	55                   	push   %rbp
    21e4:	48 89 e5             	mov    %rsp,%rbp
    21e7:	48 83 ec 30          	sub    $0x30,%rsp
    21eb:	89 7d d8             	mov    %edi,-0x28(%rbp)
    21ee:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    21f2:	48 8b 45 08          	mov    0x8(%rbp),%rax
    21f6:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    21fa:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    21fe:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    2202:	b8 00 00 00 00       	mov    $0x0,%eax
    2207:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    220b:	48 89 c7             	mov    %rax,%rdi
    220e:	48 89 d6             	mov    %rdx,%rsi
    2211:	e8 00 00 00 00       	callq  2216 <MPI_Comm_test_inter+0x33>
    2216:	8b 45 d8             	mov    -0x28(%rbp),%eax
    2219:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    221d:	89 c7                	mov    %eax,%edi
    221f:	48 89 d6             	mov    %rdx,%rsi
    2222:	e8 00 00 00 00       	callq  2227 <MPI_Comm_test_inter+0x44>
    2227:	89 45 d0             	mov    %eax,-0x30(%rbp)
    222a:	8b 45 d0             	mov    -0x30(%rbp),%eax
    222d:	89 45 d4             	mov    %eax,-0x2c(%rbp)
    2230:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    2234:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    2238:	b8 00 00 00 00       	mov    $0x0,%eax
    223d:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    2241:	48 89 c7             	mov    %rax,%rdi
    2244:	48 89 d6             	mov    %rdx,%rsi
    2247:	e8 00 00 00 00       	callq  224c <MPI_Comm_test_inter+0x69>
    224c:	8b 45 d4             	mov    -0x2c(%rbp),%eax
    224f:	c9                   	leaveq 
    2250:	c3                   	retq   

0000000000002251 <MPI_Group_compare>:
    2251:	55                   	push   %rbp
    2252:	48 89 e5             	mov    %rsp,%rbp
    2255:	48 83 ec 40          	sub    $0x40,%rsp
    2259:	89 7d c8             	mov    %edi,-0x38(%rbp)
    225c:	89 75 d0             	mov    %esi,-0x30(%rbp)
    225f:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
    2263:	48 8b 45 08          	mov    0x8(%rbp),%rax
    2267:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    226b:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    226f:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    2273:	b8 00 00 00 00       	mov    $0x0,%eax
    2278:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    227c:	48 89 c7             	mov    %rax,%rdi
    227f:	48 89 d6             	mov    %rdx,%rsi
    2282:	e8 00 00 00 00       	callq  2287 <MPI_Group_compare+0x36>
    2287:	8b 45 c8             	mov    -0x38(%rbp),%eax
    228a:	8b 55 d0             	mov    -0x30(%rbp),%edx
    228d:	48 8b 4d d8          	mov    -0x28(%rbp),%rcx
    2291:	89 c7                	mov    %eax,%edi
    2293:	89 d6                	mov    %edx,%esi
    2295:	48 89 ca             	mov    %rcx,%rdx
    2298:	e8 00 00 00 00       	callq  229d <MPI_Group_compare+0x4c>
    229d:	89 45 c0             	mov    %eax,-0x40(%rbp)
    22a0:	8b 45 c0             	mov    -0x40(%rbp),%eax
    22a3:	89 45 c4             	mov    %eax,-0x3c(%rbp)
    22a6:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    22aa:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    22ae:	b8 00 00 00 00       	mov    $0x0,%eax
    22b3:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    22b7:	48 89 c7             	mov    %rax,%rdi
    22ba:	48 89 d6             	mov    %rdx,%rsi
    22bd:	e8 00 00 00 00       	callq  22c2 <MPI_Group_compare+0x71>
    22c2:	8b 45 c4             	mov    -0x3c(%rbp),%eax
    22c5:	c9                   	leaveq 
    22c6:	c3                   	retq   

00000000000022c7 <MPI_Group_difference>:
    22c7:	55                   	push   %rbp
    22c8:	48 89 e5             	mov    %rsp,%rbp
    22cb:	48 83 ec 40          	sub    $0x40,%rsp
    22cf:	89 7d c8             	mov    %edi,-0x38(%rbp)
    22d2:	89 75 d0             	mov    %esi,-0x30(%rbp)
    22d5:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
    22d9:	48 8b 45 08          	mov    0x8(%rbp),%rax
    22dd:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    22e1:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    22e5:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    22e9:	b8 00 00 00 00       	mov    $0x0,%eax
    22ee:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    22f2:	48 89 c7             	mov    %rax,%rdi
    22f5:	48 89 d6             	mov    %rdx,%rsi
    22f8:	e8 00 00 00 00       	callq  22fd <MPI_Group_difference+0x36>
    22fd:	8b 45 c8             	mov    -0x38(%rbp),%eax
    2300:	8b 55 d0             	mov    -0x30(%rbp),%edx
    2303:	48 8b 4d d8          	mov    -0x28(%rbp),%rcx
    2307:	89 c7                	mov    %eax,%edi
    2309:	89 d6                	mov    %edx,%esi
    230b:	48 89 ca             	mov    %rcx,%rdx
    230e:	e8 00 00 00 00       	callq  2313 <MPI_Group_difference+0x4c>
    2313:	89 45 c0             	mov    %eax,-0x40(%rbp)
    2316:	8b 45 c0             	mov    -0x40(%rbp),%eax
    2319:	89 45 c4             	mov    %eax,-0x3c(%rbp)
    231c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    2320:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    2324:	b8 00 00 00 00       	mov    $0x0,%eax
    2329:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    232d:	48 89 c7             	mov    %rax,%rdi
    2330:	48 89 d6             	mov    %rdx,%rsi
    2333:	e8 00 00 00 00       	callq  2338 <MPI_Group_difference+0x71>
    2338:	8b 45 c4             	mov    -0x3c(%rbp),%eax
    233b:	c9                   	leaveq 
    233c:	c3                   	retq   

000000000000233d <MPI_Group_excl>:
    233d:	55                   	push   %rbp
    233e:	48 89 e5             	mov    %rsp,%rbp
    2341:	48 83 ec 50          	sub    $0x50,%rsp
    2345:	48 89 5d f0          	mov    %rbx,-0x10(%rbp)
    2349:	89 7d b8             	mov    %edi,-0x48(%rbp)
    234c:	89 75 c0             	mov    %esi,-0x40(%rbp)
    234f:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
    2353:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
    2357:	48 8b 45 08          	mov    0x8(%rbp),%rax
    235b:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
    235f:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    2363:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    2367:	b8 00 00 00 00       	mov    $0x0,%eax
    236c:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    2370:	48 89 c7             	mov    %rax,%rdi
    2373:	48 89 d6             	mov    %rdx,%rsi
    2376:	e8 00 00 00 00       	callq  237b <MPI_Group_excl+0x3e>
    237b:	8b 45 b8             	mov    -0x48(%rbp),%eax
    237e:	8b 55 c0             	mov    -0x40(%rbp),%edx
    2381:	48 8b 4d c8          	mov    -0x38(%rbp),%rcx
    2385:	48 8b 5d d0          	mov    -0x30(%rbp),%rbx
    2389:	89 c7                	mov    %eax,%edi
    238b:	89 d6                	mov    %edx,%esi
    238d:	48 89 ca             	mov    %rcx,%rdx
    2390:	48 89 d9             	mov    %rbx,%rcx
    2393:	e8 00 00 00 00       	callq  2398 <MPI_Group_excl+0x5b>
    2398:	89 45 b0             	mov    %eax,-0x50(%rbp)
    239b:	8b 45 b0             	mov    -0x50(%rbp),%eax
    239e:	89 45 b4             	mov    %eax,-0x4c(%rbp)
    23a1:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    23a5:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    23a9:	b8 00 00 00 00       	mov    $0x0,%eax
    23ae:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    23b2:	48 89 c7             	mov    %rax,%rdi
    23b5:	48 89 d6             	mov    %rdx,%rsi
    23b8:	e8 00 00 00 00       	callq  23bd <MPI_Group_excl+0x80>
    23bd:	8b 45 b4             	mov    -0x4c(%rbp),%eax
    23c0:	48 8b 5d f0          	mov    -0x10(%rbp),%rbx
    23c4:	c9                   	leaveq 
    23c5:	c3                   	retq   

00000000000023c6 <MPI_Group_free>:
    23c6:	55                   	push   %rbp
    23c7:	48 89 e5             	mov    %rsp,%rbp
    23ca:	48 83 ec 30          	sub    $0x30,%rsp
    23ce:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    23d2:	48 8b 45 08          	mov    0x8(%rbp),%rax
    23d6:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    23da:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    23de:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    23e2:	b8 00 00 00 00       	mov    $0x0,%eax
    23e7:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    23eb:	48 89 c7             	mov    %rax,%rdi
    23ee:	48 89 d6             	mov    %rdx,%rsi
    23f1:	e8 00 00 00 00       	callq  23f6 <MPI_Group_free+0x30>
    23f6:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    23fa:	48 89 c7             	mov    %rax,%rdi
    23fd:	e8 00 00 00 00       	callq  2402 <MPI_Group_free+0x3c>
    2402:	89 45 d0             	mov    %eax,-0x30(%rbp)
    2405:	8b 45 d0             	mov    -0x30(%rbp),%eax
    2408:	89 45 d4             	mov    %eax,-0x2c(%rbp)
    240b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    240f:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    2413:	b8 00 00 00 00       	mov    $0x0,%eax
    2418:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    241c:	48 89 c7             	mov    %rax,%rdi
    241f:	48 89 d6             	mov    %rdx,%rsi
    2422:	e8 00 00 00 00       	callq  2427 <MPI_Group_free+0x61>
    2427:	8b 45 d4             	mov    -0x2c(%rbp),%eax
    242a:	c9                   	leaveq 
    242b:	c3                   	retq   

000000000000242c <MPI_Group_incl>:
    242c:	55                   	push   %rbp
    242d:	48 89 e5             	mov    %rsp,%rbp
    2430:	48 83 ec 50          	sub    $0x50,%rsp
    2434:	48 89 5d f0          	mov    %rbx,-0x10(%rbp)
    2438:	89 7d b8             	mov    %edi,-0x48(%rbp)
    243b:	89 75 c0             	mov    %esi,-0x40(%rbp)
    243e:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
    2442:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
    2446:	48 8b 45 08          	mov    0x8(%rbp),%rax
    244a:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
    244e:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    2452:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    2456:	b8 00 00 00 00       	mov    $0x0,%eax
    245b:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    245f:	48 89 c7             	mov    %rax,%rdi
    2462:	48 89 d6             	mov    %rdx,%rsi
    2465:	e8 00 00 00 00       	callq  246a <MPI_Group_incl+0x3e>
    246a:	8b 45 b8             	mov    -0x48(%rbp),%eax
    246d:	8b 55 c0             	mov    -0x40(%rbp),%edx
    2470:	48 8b 4d c8          	mov    -0x38(%rbp),%rcx
    2474:	48 8b 5d d0          	mov    -0x30(%rbp),%rbx
    2478:	89 c7                	mov    %eax,%edi
    247a:	89 d6                	mov    %edx,%esi
    247c:	48 89 ca             	mov    %rcx,%rdx
    247f:	48 89 d9             	mov    %rbx,%rcx
    2482:	e8 00 00 00 00       	callq  2487 <MPI_Group_incl+0x5b>
    2487:	89 45 b0             	mov    %eax,-0x50(%rbp)
    248a:	8b 45 b0             	mov    -0x50(%rbp),%eax
    248d:	89 45 b4             	mov    %eax,-0x4c(%rbp)
    2490:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    2494:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    2498:	b8 00 00 00 00       	mov    $0x0,%eax
    249d:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    24a1:	48 89 c7             	mov    %rax,%rdi
    24a4:	48 89 d6             	mov    %rdx,%rsi
    24a7:	e8 00 00 00 00       	callq  24ac <MPI_Group_incl+0x80>
    24ac:	8b 45 b4             	mov    -0x4c(%rbp),%eax
    24af:	48 8b 5d f0          	mov    -0x10(%rbp),%rbx
    24b3:	c9                   	leaveq 
    24b4:	c3                   	retq   

00000000000024b5 <MPI_Group_intersection>:
    24b5:	55                   	push   %rbp
    24b6:	48 89 e5             	mov    %rsp,%rbp
    24b9:	48 83 ec 40          	sub    $0x40,%rsp
    24bd:	89 7d c8             	mov    %edi,-0x38(%rbp)
    24c0:	89 75 d0             	mov    %esi,-0x30(%rbp)
    24c3:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
    24c7:	48 8b 45 08          	mov    0x8(%rbp),%rax
    24cb:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    24cf:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    24d3:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    24d7:	b8 00 00 00 00       	mov    $0x0,%eax
    24dc:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    24e0:	48 89 c7             	mov    %rax,%rdi
    24e3:	48 89 d6             	mov    %rdx,%rsi
    24e6:	e8 00 00 00 00       	callq  24eb <MPI_Group_intersection+0x36>
    24eb:	8b 45 c8             	mov    -0x38(%rbp),%eax
    24ee:	8b 55 d0             	mov    -0x30(%rbp),%edx
    24f1:	48 8b 4d d8          	mov    -0x28(%rbp),%rcx
    24f5:	89 c7                	mov    %eax,%edi
    24f7:	89 d6                	mov    %edx,%esi
    24f9:	48 89 ca             	mov    %rcx,%rdx
    24fc:	e8 00 00 00 00       	callq  2501 <MPI_Group_intersection+0x4c>
    2501:	89 45 c0             	mov    %eax,-0x40(%rbp)
    2504:	8b 45 c0             	mov    -0x40(%rbp),%eax
    2507:	89 45 c4             	mov    %eax,-0x3c(%rbp)
    250a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    250e:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    2512:	b8 00 00 00 00       	mov    $0x0,%eax
    2517:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    251b:	48 89 c7             	mov    %rax,%rdi
    251e:	48 89 d6             	mov    %rdx,%rsi
    2521:	e8 00 00 00 00       	callq  2526 <MPI_Group_intersection+0x71>
    2526:	8b 45 c4             	mov    -0x3c(%rbp),%eax
    2529:	c9                   	leaveq 
    252a:	c3                   	retq   

000000000000252b <MPI_Group_rank>:
    252b:	55                   	push   %rbp
    252c:	48 89 e5             	mov    %rsp,%rbp
    252f:	48 83 ec 30          	sub    $0x30,%rsp
    2533:	89 7d d8             	mov    %edi,-0x28(%rbp)
    2536:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    253a:	48 8b 45 08          	mov    0x8(%rbp),%rax
    253e:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    2542:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    2546:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    254a:	b8 00 00 00 00       	mov    $0x0,%eax
    254f:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    2553:	48 89 c7             	mov    %rax,%rdi
    2556:	48 89 d6             	mov    %rdx,%rsi
    2559:	e8 00 00 00 00       	callq  255e <MPI_Group_rank+0x33>
    255e:	8b 45 d8             	mov    -0x28(%rbp),%eax
    2561:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    2565:	89 c7                	mov    %eax,%edi
    2567:	48 89 d6             	mov    %rdx,%rsi
    256a:	e8 00 00 00 00       	callq  256f <MPI_Group_rank+0x44>
    256f:	89 45 d0             	mov    %eax,-0x30(%rbp)
    2572:	8b 45 d0             	mov    -0x30(%rbp),%eax
    2575:	89 45 d4             	mov    %eax,-0x2c(%rbp)
    2578:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    257c:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    2580:	b8 00 00 00 00       	mov    $0x0,%eax
    2585:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    2589:	48 89 c7             	mov    %rax,%rdi
    258c:	48 89 d6             	mov    %rdx,%rsi
    258f:	e8 00 00 00 00       	callq  2594 <MPI_Group_rank+0x69>
    2594:	8b 45 d4             	mov    -0x2c(%rbp),%eax
    2597:	c9                   	leaveq 
    2598:	c3                   	retq   

0000000000002599 <MPI_Group_range_excl>:
    2599:	55                   	push   %rbp
    259a:	48 89 e5             	mov    %rsp,%rbp
    259d:	48 83 ec 50          	sub    $0x50,%rsp
    25a1:	48 89 5d f0          	mov    %rbx,-0x10(%rbp)
    25a5:	89 7d b8             	mov    %edi,-0x48(%rbp)
    25a8:	89 75 c0             	mov    %esi,-0x40(%rbp)
    25ab:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
    25af:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
    25b3:	48 8b 45 08          	mov    0x8(%rbp),%rax
    25b7:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
    25bb:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    25bf:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    25c3:	b8 00 00 00 00       	mov    $0x0,%eax
    25c8:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    25cc:	48 89 c7             	mov    %rax,%rdi
    25cf:	48 89 d6             	mov    %rdx,%rsi
    25d2:	e8 00 00 00 00       	callq  25d7 <MPI_Group_range_excl+0x3e>
    25d7:	8b 45 b8             	mov    -0x48(%rbp),%eax
    25da:	8b 55 c0             	mov    -0x40(%rbp),%edx
    25dd:	48 8b 4d c8          	mov    -0x38(%rbp),%rcx
    25e1:	48 8b 5d d0          	mov    -0x30(%rbp),%rbx
    25e5:	89 c7                	mov    %eax,%edi
    25e7:	89 d6                	mov    %edx,%esi
    25e9:	48 89 ca             	mov    %rcx,%rdx
    25ec:	48 89 d9             	mov    %rbx,%rcx
    25ef:	e8 00 00 00 00       	callq  25f4 <MPI_Group_range_excl+0x5b>
    25f4:	89 45 b0             	mov    %eax,-0x50(%rbp)
    25f7:	8b 45 b0             	mov    -0x50(%rbp),%eax
    25fa:	89 45 b4             	mov    %eax,-0x4c(%rbp)
    25fd:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    2601:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    2605:	b8 00 00 00 00       	mov    $0x0,%eax
    260a:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    260e:	48 89 c7             	mov    %rax,%rdi
    2611:	48 89 d6             	mov    %rdx,%rsi
    2614:	e8 00 00 00 00       	callq  2619 <MPI_Group_range_excl+0x80>
    2619:	8b 45 b4             	mov    -0x4c(%rbp),%eax
    261c:	48 8b 5d f0          	mov    -0x10(%rbp),%rbx
    2620:	c9                   	leaveq 
    2621:	c3                   	retq   

0000000000002622 <MPI_Group_range_incl>:
    2622:	55                   	push   %rbp
    2623:	48 89 e5             	mov    %rsp,%rbp
    2626:	48 83 ec 50          	sub    $0x50,%rsp
    262a:	48 89 5d f0          	mov    %rbx,-0x10(%rbp)
    262e:	89 7d b8             	mov    %edi,-0x48(%rbp)
    2631:	89 75 c0             	mov    %esi,-0x40(%rbp)
    2634:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
    2638:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
    263c:	48 8b 45 08          	mov    0x8(%rbp),%rax
    2640:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
    2644:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    2648:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    264c:	b8 00 00 00 00       	mov    $0x0,%eax
    2651:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    2655:	48 89 c7             	mov    %rax,%rdi
    2658:	48 89 d6             	mov    %rdx,%rsi
    265b:	e8 00 00 00 00       	callq  2660 <MPI_Group_range_incl+0x3e>
    2660:	8b 45 b8             	mov    -0x48(%rbp),%eax
    2663:	8b 55 c0             	mov    -0x40(%rbp),%edx
    2666:	48 8b 4d c8          	mov    -0x38(%rbp),%rcx
    266a:	48 8b 5d d0          	mov    -0x30(%rbp),%rbx
    266e:	89 c7                	mov    %eax,%edi
    2670:	89 d6                	mov    %edx,%esi
    2672:	48 89 ca             	mov    %rcx,%rdx
    2675:	48 89 d9             	mov    %rbx,%rcx
    2678:	e8 00 00 00 00       	callq  267d <MPI_Group_range_incl+0x5b>
    267d:	89 45 b0             	mov    %eax,-0x50(%rbp)
    2680:	8b 45 b0             	mov    -0x50(%rbp),%eax
    2683:	89 45 b4             	mov    %eax,-0x4c(%rbp)
    2686:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    268a:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    268e:	b8 00 00 00 00       	mov    $0x0,%eax
    2693:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    2697:	48 89 c7             	mov    %rax,%rdi
    269a:	48 89 d6             	mov    %rdx,%rsi
    269d:	e8 00 00 00 00       	callq  26a2 <MPI_Group_range_incl+0x80>
    26a2:	8b 45 b4             	mov    -0x4c(%rbp),%eax
    26a5:	48 8b 5d f0          	mov    -0x10(%rbp),%rbx
    26a9:	c9                   	leaveq 
    26aa:	c3                   	retq   

00000000000026ab <MPI_Group_size>:
    26ab:	55                   	push   %rbp
    26ac:	48 89 e5             	mov    %rsp,%rbp
    26af:	48 83 ec 30          	sub    $0x30,%rsp
    26b3:	89 7d d8             	mov    %edi,-0x28(%rbp)
    26b6:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    26ba:	48 8b 45 08          	mov    0x8(%rbp),%rax
    26be:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    26c2:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    26c6:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    26ca:	b8 00 00 00 00       	mov    $0x0,%eax
    26cf:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    26d3:	48 89 c7             	mov    %rax,%rdi
    26d6:	48 89 d6             	mov    %rdx,%rsi
    26d9:	e8 00 00 00 00       	callq  26de <MPI_Group_size+0x33>
    26de:	8b 45 d8             	mov    -0x28(%rbp),%eax
    26e1:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    26e5:	89 c7                	mov    %eax,%edi
    26e7:	48 89 d6             	mov    %rdx,%rsi
    26ea:	e8 00 00 00 00       	callq  26ef <MPI_Group_size+0x44>
    26ef:	89 45 d0             	mov    %eax,-0x30(%rbp)
    26f2:	8b 45 d0             	mov    -0x30(%rbp),%eax
    26f5:	89 45 d4             	mov    %eax,-0x2c(%rbp)
    26f8:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    26fc:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    2700:	b8 00 00 00 00       	mov    $0x0,%eax
    2705:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    2709:	48 89 c7             	mov    %rax,%rdi
    270c:	48 89 d6             	mov    %rdx,%rsi
    270f:	e8 00 00 00 00       	callq  2714 <MPI_Group_size+0x69>
    2714:	8b 45 d4             	mov    -0x2c(%rbp),%eax
    2717:	c9                   	leaveq 
    2718:	c3                   	retq   

0000000000002719 <MPI_Group_translate_ranks>:
    2719:	55                   	push   %rbp
    271a:	48 89 e5             	mov    %rsp,%rbp
    271d:	48 83 ec 60          	sub    $0x60,%rsp
    2721:	48 89 5d f0          	mov    %rbx,-0x10(%rbp)
    2725:	89 7d a8             	mov    %edi,-0x58(%rbp)
    2728:	89 75 b0             	mov    %esi,-0x50(%rbp)
    272b:	48 89 55 b8          	mov    %rdx,-0x48(%rbp)
    272f:	89 4d c0             	mov    %ecx,-0x40(%rbp)
    2732:	4c 89 45 c8          	mov    %r8,-0x38(%rbp)
    2736:	48 8b 45 08          	mov    0x8(%rbp),%rax
    273a:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
    273e:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    2742:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
    2746:	b8 00 00 00 00       	mov    $0x0,%eax
    274b:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    274f:	48 89 c7             	mov    %rax,%rdi
    2752:	48 89 d6             	mov    %rdx,%rsi
    2755:	e8 00 00 00 00       	callq  275a <MPI_Group_translate_ranks+0x41>
    275a:	8b 45 a8             	mov    -0x58(%rbp),%eax
    275d:	8b 55 b0             	mov    -0x50(%rbp),%edx
    2760:	48 8b 4d b8          	mov    -0x48(%rbp),%rcx
    2764:	8b 5d c0             	mov    -0x40(%rbp),%ebx
    2767:	48 8b 75 c8          	mov    -0x38(%rbp),%rsi
    276b:	89 c7                	mov    %eax,%edi
    276d:	48 89 75 e8          	mov    %rsi,-0x18(%rbp)
    2771:	89 d6                	mov    %edx,%esi
    2773:	48 89 ca             	mov    %rcx,%rdx
    2776:	89 d9                	mov    %ebx,%ecx
    2778:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    277c:	49 89 c0             	mov    %rax,%r8
    277f:	e8 00 00 00 00       	callq  2784 <MPI_Group_translate_ranks+0x6b>
    2784:	89 45 a0             	mov    %eax,-0x60(%rbp)
    2787:	8b 45 a0             	mov    -0x60(%rbp),%eax
    278a:	89 45 a4             	mov    %eax,-0x5c(%rbp)
    278d:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    2791:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    2795:	b8 00 00 00 00       	mov    $0x0,%eax
    279a:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    279e:	48 89 c7             	mov    %rax,%rdi
    27a1:	48 89 d6             	mov    %rdx,%rsi
    27a4:	e8 00 00 00 00       	callq  27a9 <MPI_Group_translate_ranks+0x90>
    27a9:	8b 45 a4             	mov    -0x5c(%rbp),%eax
    27ac:	48 8b 5d f0          	mov    -0x10(%rbp),%rbx
    27b0:	c9                   	leaveq 
    27b1:	c3                   	retq   

00000000000027b2 <MPI_Group_union>:
    27b2:	55                   	push   %rbp
    27b3:	48 89 e5             	mov    %rsp,%rbp
    27b6:	48 83 ec 40          	sub    $0x40,%rsp
    27ba:	89 7d c8             	mov    %edi,-0x38(%rbp)
    27bd:	89 75 d0             	mov    %esi,-0x30(%rbp)
    27c0:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
    27c4:	48 8b 45 08          	mov    0x8(%rbp),%rax
    27c8:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    27cc:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    27d0:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    27d4:	b8 00 00 00 00       	mov    $0x0,%eax
    27d9:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    27dd:	48 89 c7             	mov    %rax,%rdi
    27e0:	48 89 d6             	mov    %rdx,%rsi
    27e3:	e8 00 00 00 00       	callq  27e8 <MPI_Group_union+0x36>
    27e8:	8b 45 c8             	mov    -0x38(%rbp),%eax
    27eb:	8b 55 d0             	mov    -0x30(%rbp),%edx
    27ee:	48 8b 4d d8          	mov    -0x28(%rbp),%rcx
    27f2:	89 c7                	mov    %eax,%edi
    27f4:	89 d6                	mov    %edx,%esi
    27f6:	48 89 ca             	mov    %rcx,%rdx
    27f9:	e8 00 00 00 00       	callq  27fe <MPI_Group_union+0x4c>
    27fe:	89 45 c0             	mov    %eax,-0x40(%rbp)
    2801:	8b 45 c0             	mov    -0x40(%rbp),%eax
    2804:	89 45 c4             	mov    %eax,-0x3c(%rbp)
    2807:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    280b:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    280f:	b8 00 00 00 00       	mov    $0x0,%eax
    2814:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    2818:	48 89 c7             	mov    %rax,%rdi
    281b:	48 89 d6             	mov    %rdx,%rsi
    281e:	e8 00 00 00 00       	callq  2823 <MPI_Group_union+0x71>
    2823:	8b 45 c4             	mov    -0x3c(%rbp),%eax
    2826:	c9                   	leaveq 
    2827:	c3                   	retq   

0000000000002828 <MPI_Intercomm_create>:
    2828:	55                   	push   %rbp
    2829:	48 89 e5             	mov    %rsp,%rbp
    282c:	48 83 ec 70          	sub    $0x70,%rsp
    2830:	48 89 5d f0          	mov    %rbx,-0x10(%rbp)
    2834:	89 7d 98             	mov    %edi,-0x68(%rbp)
    2837:	89 75 a0             	mov    %esi,-0x60(%rbp)
    283a:	89 55 a8             	mov    %edx,-0x58(%rbp)
    283d:	89 4d b0             	mov    %ecx,-0x50(%rbp)
    2840:	44 89 45 b8          	mov    %r8d,-0x48(%rbp)
    2844:	4c 89 4d c0          	mov    %r9,-0x40(%rbp)
    2848:	48 8b 45 08          	mov    0x8(%rbp),%rax
    284c:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
    2850:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    2854:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
    2858:	b8 00 00 00 00       	mov    $0x0,%eax
    285d:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    2861:	48 89 c7             	mov    %rax,%rdi
    2864:	48 89 d6             	mov    %rdx,%rsi
    2867:	e8 00 00 00 00       	callq  286c <MPI_Intercomm_create+0x44>
    286c:	8b 45 98             	mov    -0x68(%rbp),%eax
    286f:	8b 55 a0             	mov    -0x60(%rbp),%edx
    2872:	8b 4d a8             	mov    -0x58(%rbp),%ecx
    2875:	8b 5d b0             	mov    -0x50(%rbp),%ebx
    2878:	8b 75 b8             	mov    -0x48(%rbp),%esi
    287b:	48 8b 7d c0          	mov    -0x40(%rbp),%rdi
    287f:	48 89 7d e0          	mov    %rdi,-0x20(%rbp)
    2883:	89 c7                	mov    %eax,%edi
    2885:	89 75 e8             	mov    %esi,-0x18(%rbp)
    2888:	89 d6                	mov    %edx,%esi
    288a:	89 ca                	mov    %ecx,%edx
    288c:	89 d9                	mov    %ebx,%ecx
    288e:	8b 45 e8             	mov    -0x18(%rbp),%eax
    2891:	41 89 c0             	mov    %eax,%r8d
    2894:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    2898:	49 89 c1             	mov    %rax,%r9
    289b:	e8 00 00 00 00       	callq  28a0 <MPI_Intercomm_create+0x78>
    28a0:	89 45 90             	mov    %eax,-0x70(%rbp)
    28a3:	8b 45 90             	mov    -0x70(%rbp),%eax
    28a6:	89 45 94             	mov    %eax,-0x6c(%rbp)
    28a9:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    28ad:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
    28b1:	b8 00 00 00 00       	mov    $0x0,%eax
    28b6:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    28ba:	48 89 c7             	mov    %rax,%rdi
    28bd:	48 89 d6             	mov    %rdx,%rsi
    28c0:	e8 00 00 00 00       	callq  28c5 <MPI_Intercomm_create+0x9d>
    28c5:	8b 45 94             	mov    -0x6c(%rbp),%eax
    28c8:	48 8b 5d f0          	mov    -0x10(%rbp),%rbx
    28cc:	c9                   	leaveq 
    28cd:	c3                   	retq   

00000000000028ce <MPI_Intercomm_merge>:
    28ce:	55                   	push   %rbp
    28cf:	48 89 e5             	mov    %rsp,%rbp
    28d2:	48 83 ec 40          	sub    $0x40,%rsp
    28d6:	89 7d c8             	mov    %edi,-0x38(%rbp)
    28d9:	89 75 d0             	mov    %esi,-0x30(%rbp)
    28dc:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
    28e0:	48 8b 45 08          	mov    0x8(%rbp),%rax
    28e4:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    28e8:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    28ec:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    28f0:	b8 00 00 00 00       	mov    $0x0,%eax
    28f5:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    28f9:	48 89 c7             	mov    %rax,%rdi
    28fc:	48 89 d6             	mov    %rdx,%rsi
    28ff:	e8 00 00 00 00       	callq  2904 <MPI_Intercomm_merge+0x36>
    2904:	8b 45 c8             	mov    -0x38(%rbp),%eax
    2907:	8b 55 d0             	mov    -0x30(%rbp),%edx
    290a:	48 8b 4d d8          	mov    -0x28(%rbp),%rcx
    290e:	89 c7                	mov    %eax,%edi
    2910:	89 d6                	mov    %edx,%esi
    2912:	48 89 ca             	mov    %rcx,%rdx
    2915:	e8 00 00 00 00       	callq  291a <MPI_Intercomm_merge+0x4c>
    291a:	89 45 c0             	mov    %eax,-0x40(%rbp)
    291d:	8b 45 c0             	mov    -0x40(%rbp),%eax
    2920:	89 45 c4             	mov    %eax,-0x3c(%rbp)
    2923:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    2927:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    292b:	b8 00 00 00 00       	mov    $0x0,%eax
    2930:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    2934:	48 89 c7             	mov    %rax,%rdi
    2937:	48 89 d6             	mov    %rdx,%rsi
    293a:	e8 00 00 00 00       	callq  293f <MPI_Intercomm_merge+0x71>
    293f:	8b 45 c4             	mov    -0x3c(%rbp),%eax
    2942:	c9                   	leaveq 
    2943:	c3                   	retq   

0000000000002944 <MPI_Keyval_create>:
    2944:	55                   	push   %rbp
    2945:	48 89 e5             	mov    %rsp,%rbp
    2948:	48 83 ec 50          	sub    $0x50,%rsp
    294c:	48 89 5d f0          	mov    %rbx,-0x10(%rbp)
    2950:	48 89 7d b8          	mov    %rdi,-0x48(%rbp)
    2954:	48 89 75 c0          	mov    %rsi,-0x40(%rbp)
    2958:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
    295c:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
    2960:	48 8b 45 08          	mov    0x8(%rbp),%rax
    2964:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
    2968:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    296c:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    2970:	b8 00 00 00 00       	mov    $0x0,%eax
    2975:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    2979:	48 89 c7             	mov    %rax,%rdi
    297c:	48 89 d6             	mov    %rdx,%rsi
    297f:	e8 00 00 00 00       	callq  2984 <MPI_Keyval_create+0x40>
    2984:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    2988:	48 8b 55 c0          	mov    -0x40(%rbp),%rdx
    298c:	48 8b 4d c8          	mov    -0x38(%rbp),%rcx
    2990:	48 8b 5d d0          	mov    -0x30(%rbp),%rbx
    2994:	48 89 c7             	mov    %rax,%rdi
    2997:	48 89 d6             	mov    %rdx,%rsi
    299a:	48 89 ca             	mov    %rcx,%rdx
    299d:	48 89 d9             	mov    %rbx,%rcx
    29a0:	e8 00 00 00 00       	callq  29a5 <MPI_Keyval_create+0x61>
    29a5:	89 45 b0             	mov    %eax,-0x50(%rbp)
    29a8:	8b 45 b0             	mov    -0x50(%rbp),%eax
    29ab:	89 45 b4             	mov    %eax,-0x4c(%rbp)
    29ae:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    29b2:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    29b6:	b8 00 00 00 00       	mov    $0x0,%eax
    29bb:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    29bf:	48 89 c7             	mov    %rax,%rdi
    29c2:	48 89 d6             	mov    %rdx,%rsi
    29c5:	e8 00 00 00 00       	callq  29ca <MPI_Keyval_create+0x86>
    29ca:	8b 45 b4             	mov    -0x4c(%rbp),%eax
    29cd:	48 8b 5d f0          	mov    -0x10(%rbp),%rbx
    29d1:	c9                   	leaveq 
    29d2:	c3                   	retq   

00000000000029d3 <MPI_Keyval_free>:
    29d3:	55                   	push   %rbp
    29d4:	48 89 e5             	mov    %rsp,%rbp
    29d7:	48 83 ec 30          	sub    $0x30,%rsp
    29db:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    29df:	48 8b 45 08          	mov    0x8(%rbp),%rax
    29e3:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    29e7:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    29eb:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    29ef:	b8 00 00 00 00       	mov    $0x0,%eax
    29f4:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    29f8:	48 89 c7             	mov    %rax,%rdi
    29fb:	48 89 d6             	mov    %rdx,%rsi
    29fe:	e8 00 00 00 00       	callq  2a03 <MPI_Keyval_free+0x30>
    2a03:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    2a07:	48 89 c7             	mov    %rax,%rdi
    2a0a:	e8 00 00 00 00       	callq  2a0f <MPI_Keyval_free+0x3c>
    2a0f:	89 45 d0             	mov    %eax,-0x30(%rbp)
    2a12:	8b 45 d0             	mov    -0x30(%rbp),%eax
    2a15:	89 45 d4             	mov    %eax,-0x2c(%rbp)
    2a18:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    2a1c:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    2a20:	b8 00 00 00 00       	mov    $0x0,%eax
    2a25:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    2a29:	48 89 c7             	mov    %rax,%rdi
    2a2c:	48 89 d6             	mov    %rdx,%rsi
    2a2f:	e8 00 00 00 00       	callq  2a34 <MPI_Keyval_free+0x61>
    2a34:	8b 45 d4             	mov    -0x2c(%rbp),%eax
    2a37:	c9                   	leaveq 
    2a38:	c3                   	retq   

0000000000002a39 <MPI_Cart_coords>:
    2a39:	55                   	push   %rbp
    2a3a:	48 89 e5             	mov    %rsp,%rbp
    2a3d:	48 83 ec 50          	sub    $0x50,%rsp
    2a41:	48 89 5d f0          	mov    %rbx,-0x10(%rbp)
    2a45:	89 7d b8             	mov    %edi,-0x48(%rbp)
    2a48:	89 75 c0             	mov    %esi,-0x40(%rbp)
    2a4b:	89 55 c8             	mov    %edx,-0x38(%rbp)
    2a4e:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
    2a52:	48 8b 45 08          	mov    0x8(%rbp),%rax
    2a56:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
    2a5a:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    2a5e:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    2a62:	b8 00 00 00 00       	mov    $0x0,%eax
    2a67:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    2a6b:	48 89 c7             	mov    %rax,%rdi
    2a6e:	48 89 d6             	mov    %rdx,%rsi
    2a71:	e8 00 00 00 00       	callq  2a76 <MPI_Cart_coords+0x3d>
    2a76:	8b 45 b8             	mov    -0x48(%rbp),%eax
    2a79:	8b 55 c0             	mov    -0x40(%rbp),%edx
    2a7c:	8b 4d c8             	mov    -0x38(%rbp),%ecx
    2a7f:	48 8b 5d d0          	mov    -0x30(%rbp),%rbx
    2a83:	89 c7                	mov    %eax,%edi
    2a85:	89 d6                	mov    %edx,%esi
    2a87:	89 ca                	mov    %ecx,%edx
    2a89:	48 89 d9             	mov    %rbx,%rcx
    2a8c:	e8 00 00 00 00       	callq  2a91 <MPI_Cart_coords+0x58>
    2a91:	89 45 b0             	mov    %eax,-0x50(%rbp)
    2a94:	8b 45 b0             	mov    -0x50(%rbp),%eax
    2a97:	89 45 b4             	mov    %eax,-0x4c(%rbp)
    2a9a:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    2a9e:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    2aa2:	b8 00 00 00 00       	mov    $0x0,%eax
    2aa7:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    2aab:	48 89 c7             	mov    %rax,%rdi
    2aae:	48 89 d6             	mov    %rdx,%rsi
    2ab1:	e8 00 00 00 00       	callq  2ab6 <MPI_Cart_coords+0x7d>
    2ab6:	8b 45 b4             	mov    -0x4c(%rbp),%eax
    2ab9:	48 8b 5d f0          	mov    -0x10(%rbp),%rbx
    2abd:	c9                   	leaveq 
    2abe:	c3                   	retq   

0000000000002abf <MPI_Cart_create>:
    2abf:	55                   	push   %rbp
    2ac0:	48 89 e5             	mov    %rsp,%rbp
    2ac3:	48 83 ec 70          	sub    $0x70,%rsp
    2ac7:	48 89 5d f0          	mov    %rbx,-0x10(%rbp)
    2acb:	89 7d 98             	mov    %edi,-0x68(%rbp)
    2ace:	89 75 a0             	mov    %esi,-0x60(%rbp)
    2ad1:	48 89 55 a8          	mov    %rdx,-0x58(%rbp)
    2ad5:	48 89 4d b0          	mov    %rcx,-0x50(%rbp)
    2ad9:	44 89 45 b8          	mov    %r8d,-0x48(%rbp)
    2add:	4c 89 4d c0          	mov    %r9,-0x40(%rbp)
    2ae1:	48 8b 45 08          	mov    0x8(%rbp),%rax
    2ae5:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
    2ae9:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    2aed:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
    2af1:	b8 00 00 00 00       	mov    $0x0,%eax
    2af6:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    2afa:	48 89 c7             	mov    %rax,%rdi
    2afd:	48 89 d6             	mov    %rdx,%rsi
    2b00:	e8 00 00 00 00       	callq  2b05 <MPI_Cart_create+0x46>
    2b05:	8b 45 98             	mov    -0x68(%rbp),%eax
    2b08:	8b 55 a0             	mov    -0x60(%rbp),%edx
    2b0b:	48 8b 4d a8          	mov    -0x58(%rbp),%rcx
    2b0f:	48 8b 5d b0          	mov    -0x50(%rbp),%rbx
    2b13:	8b 75 b8             	mov    -0x48(%rbp),%esi
    2b16:	48 8b 7d c0          	mov    -0x40(%rbp),%rdi
    2b1a:	48 89 7d e0          	mov    %rdi,-0x20(%rbp)
    2b1e:	89 c7                	mov    %eax,%edi
    2b20:	89 75 e8             	mov    %esi,-0x18(%rbp)
    2b23:	89 d6                	mov    %edx,%esi
    2b25:	48 89 ca             	mov    %rcx,%rdx
    2b28:	48 89 d9             	mov    %rbx,%rcx
    2b2b:	8b 45 e8             	mov    -0x18(%rbp),%eax
    2b2e:	41 89 c0             	mov    %eax,%r8d
    2b31:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    2b35:	49 89 c1             	mov    %rax,%r9
    2b38:	e8 00 00 00 00       	callq  2b3d <MPI_Cart_create+0x7e>
    2b3d:	89 45 90             	mov    %eax,-0x70(%rbp)
    2b40:	8b 45 90             	mov    -0x70(%rbp),%eax
    2b43:	89 45 94             	mov    %eax,-0x6c(%rbp)
    2b46:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    2b4a:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
    2b4e:	b8 00 00 00 00       	mov    $0x0,%eax
    2b53:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    2b57:	48 89 c7             	mov    %rax,%rdi
    2b5a:	48 89 d6             	mov    %rdx,%rsi
    2b5d:	e8 00 00 00 00       	callq  2b62 <MPI_Cart_create+0xa3>
    2b62:	8b 45 94             	mov    -0x6c(%rbp),%eax
    2b65:	48 8b 5d f0          	mov    -0x10(%rbp),%rbx
    2b69:	c9                   	leaveq 
    2b6a:	c3                   	retq   

0000000000002b6b <MPI_Cart_get>:
    2b6b:	55                   	push   %rbp
    2b6c:	48 89 e5             	mov    %rsp,%rbp
    2b6f:	48 83 ec 60          	sub    $0x60,%rsp
    2b73:	48 89 5d f0          	mov    %rbx,-0x10(%rbp)
    2b77:	89 7d a8             	mov    %edi,-0x58(%rbp)
    2b7a:	89 75 b0             	mov    %esi,-0x50(%rbp)
    2b7d:	48 89 55 b8          	mov    %rdx,-0x48(%rbp)
    2b81:	48 89 4d c0          	mov    %rcx,-0x40(%rbp)
    2b85:	4c 89 45 c8          	mov    %r8,-0x38(%rbp)
    2b89:	48 8b 45 08          	mov    0x8(%rbp),%rax
    2b8d:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
    2b91:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    2b95:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
    2b99:	b8 00 00 00 00       	mov    $0x0,%eax
    2b9e:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    2ba2:	48 89 c7             	mov    %rax,%rdi
    2ba5:	48 89 d6             	mov    %rdx,%rsi
    2ba8:	e8 00 00 00 00       	callq  2bad <MPI_Cart_get+0x42>
    2bad:	8b 45 a8             	mov    -0x58(%rbp),%eax
    2bb0:	8b 55 b0             	mov    -0x50(%rbp),%edx
    2bb3:	48 8b 4d b8          	mov    -0x48(%rbp),%rcx
    2bb7:	48 8b 5d c0          	mov    -0x40(%rbp),%rbx
    2bbb:	48 8b 75 c8          	mov    -0x38(%rbp),%rsi
    2bbf:	89 c7                	mov    %eax,%edi
    2bc1:	48 89 75 e8          	mov    %rsi,-0x18(%rbp)
    2bc5:	89 d6                	mov    %edx,%esi
    2bc7:	48 89 ca             	mov    %rcx,%rdx
    2bca:	48 89 d9             	mov    %rbx,%rcx
    2bcd:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    2bd1:	49 89 c0             	mov    %rax,%r8
    2bd4:	e8 00 00 00 00       	callq  2bd9 <MPI_Cart_get+0x6e>
    2bd9:	89 45 a0             	mov    %eax,-0x60(%rbp)
    2bdc:	8b 45 a0             	mov    -0x60(%rbp),%eax
    2bdf:	89 45 a4             	mov    %eax,-0x5c(%rbp)
    2be2:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    2be6:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    2bea:	b8 00 00 00 00       	mov    $0x0,%eax
    2bef:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    2bf3:	48 89 c7             	mov    %rax,%rdi
    2bf6:	48 89 d6             	mov    %rdx,%rsi
    2bf9:	e8 00 00 00 00       	callq  2bfe <MPI_Cart_get+0x93>
    2bfe:	8b 45 a4             	mov    -0x5c(%rbp),%eax
    2c01:	48 8b 5d f0          	mov    -0x10(%rbp),%rbx
    2c05:	c9                   	leaveq 
    2c06:	c3                   	retq   

0000000000002c07 <MPI_Cart_map>:
    2c07:	55                   	push   %rbp
    2c08:	48 89 e5             	mov    %rsp,%rbp
    2c0b:	48 83 ec 60          	sub    $0x60,%rsp
    2c0f:	48 89 5d f0          	mov    %rbx,-0x10(%rbp)
    2c13:	89 7d a8             	mov    %edi,-0x58(%rbp)
    2c16:	89 75 b0             	mov    %esi,-0x50(%rbp)
    2c19:	48 89 55 b8          	mov    %rdx,-0x48(%rbp)
    2c1d:	48 89 4d c0          	mov    %rcx,-0x40(%rbp)
    2c21:	4c 89 45 c8          	mov    %r8,-0x38(%rbp)
    2c25:	48 8b 45 08          	mov    0x8(%rbp),%rax
    2c29:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
    2c2d:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    2c31:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
    2c35:	b8 00 00 00 00       	mov    $0x0,%eax
    2c3a:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    2c3e:	48 89 c7             	mov    %rax,%rdi
    2c41:	48 89 d6             	mov    %rdx,%rsi
    2c44:	e8 00 00 00 00       	callq  2c49 <MPI_Cart_map+0x42>
    2c49:	8b 45 a8             	mov    -0x58(%rbp),%eax
    2c4c:	8b 55 b0             	mov    -0x50(%rbp),%edx
    2c4f:	48 8b 4d b8          	mov    -0x48(%rbp),%rcx
    2c53:	48 8b 5d c0          	mov    -0x40(%rbp),%rbx
    2c57:	48 8b 75 c8          	mov    -0x38(%rbp),%rsi
    2c5b:	89 c7                	mov    %eax,%edi
    2c5d:	48 89 75 e8          	mov    %rsi,-0x18(%rbp)
    2c61:	89 d6                	mov    %edx,%esi
    2c63:	48 89 ca             	mov    %rcx,%rdx
    2c66:	48 89 d9             	mov    %rbx,%rcx
    2c69:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    2c6d:	49 89 c0             	mov    %rax,%r8
    2c70:	e8 00 00 00 00       	callq  2c75 <MPI_Cart_map+0x6e>
    2c75:	89 45 a0             	mov    %eax,-0x60(%rbp)
    2c78:	8b 45 a0             	mov    -0x60(%rbp),%eax
    2c7b:	89 45 a4             	mov    %eax,-0x5c(%rbp)
    2c7e:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    2c82:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    2c86:	b8 00 00 00 00       	mov    $0x0,%eax
    2c8b:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    2c8f:	48 89 c7             	mov    %rax,%rdi
    2c92:	48 89 d6             	mov    %rdx,%rsi
    2c95:	e8 00 00 00 00       	callq  2c9a <MPI_Cart_map+0x93>
    2c9a:	8b 45 a4             	mov    -0x5c(%rbp),%eax
    2c9d:	48 8b 5d f0          	mov    -0x10(%rbp),%rbx
    2ca1:	c9                   	leaveq 
    2ca2:	c3                   	retq   

0000000000002ca3 <MPI_Cart_rank>:
    2ca3:	55                   	push   %rbp
    2ca4:	48 89 e5             	mov    %rsp,%rbp
    2ca7:	48 83 ec 40          	sub    $0x40,%rsp
    2cab:	89 7d c8             	mov    %edi,-0x38(%rbp)
    2cae:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    2cb2:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
    2cb6:	48 8b 45 08          	mov    0x8(%rbp),%rax
    2cba:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    2cbe:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    2cc2:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    2cc6:	b8 00 00 00 00       	mov    $0x0,%eax
    2ccb:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    2ccf:	48 89 c7             	mov    %rax,%rdi
    2cd2:	48 89 d6             	mov    %rdx,%rsi
    2cd5:	e8 00 00 00 00       	callq  2cda <MPI_Cart_rank+0x37>
    2cda:	8b 45 c8             	mov    -0x38(%rbp),%eax
    2cdd:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    2ce1:	48 8b 4d d8          	mov    -0x28(%rbp),%rcx
    2ce5:	89 c7                	mov    %eax,%edi
    2ce7:	48 89 d6             	mov    %rdx,%rsi
    2cea:	48 89 ca             	mov    %rcx,%rdx
    2ced:	e8 00 00 00 00       	callq  2cf2 <MPI_Cart_rank+0x4f>
    2cf2:	89 45 c0             	mov    %eax,-0x40(%rbp)
    2cf5:	8b 45 c0             	mov    -0x40(%rbp),%eax
    2cf8:	89 45 c4             	mov    %eax,-0x3c(%rbp)
    2cfb:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    2cff:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    2d03:	b8 00 00 00 00       	mov    $0x0,%eax
    2d08:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    2d0c:	48 89 c7             	mov    %rax,%rdi
    2d0f:	48 89 d6             	mov    %rdx,%rsi
    2d12:	e8 00 00 00 00       	callq  2d17 <MPI_Cart_rank+0x74>
    2d17:	8b 45 c4             	mov    -0x3c(%rbp),%eax
    2d1a:	c9                   	leaveq 
    2d1b:	c3                   	retq   

0000000000002d1c <MPI_Cart_shift>:
    2d1c:	55                   	push   %rbp
    2d1d:	48 89 e5             	mov    %rsp,%rbp
    2d20:	48 83 ec 60          	sub    $0x60,%rsp
    2d24:	48 89 5d f0          	mov    %rbx,-0x10(%rbp)
    2d28:	89 7d a8             	mov    %edi,-0x58(%rbp)
    2d2b:	89 75 b0             	mov    %esi,-0x50(%rbp)
    2d2e:	89 55 b8             	mov    %edx,-0x48(%rbp)
    2d31:	48 89 4d c0          	mov    %rcx,-0x40(%rbp)
    2d35:	4c 89 45 c8          	mov    %r8,-0x38(%rbp)
    2d39:	48 8b 45 08          	mov    0x8(%rbp),%rax
    2d3d:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
    2d41:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    2d45:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
    2d49:	b8 00 00 00 00       	mov    $0x0,%eax
    2d4e:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    2d52:	48 89 c7             	mov    %rax,%rdi
    2d55:	48 89 d6             	mov    %rdx,%rsi
    2d58:	e8 00 00 00 00       	callq  2d5d <MPI_Cart_shift+0x41>
    2d5d:	8b 45 a8             	mov    -0x58(%rbp),%eax
    2d60:	8b 55 b0             	mov    -0x50(%rbp),%edx
    2d63:	8b 4d b8             	mov    -0x48(%rbp),%ecx
    2d66:	48 8b 5d c0          	mov    -0x40(%rbp),%rbx
    2d6a:	48 8b 75 c8          	mov    -0x38(%rbp),%rsi
    2d6e:	89 c7                	mov    %eax,%edi
    2d70:	48 89 75 e8          	mov    %rsi,-0x18(%rbp)
    2d74:	89 d6                	mov    %edx,%esi
    2d76:	89 ca                	mov    %ecx,%edx
    2d78:	48 89 d9             	mov    %rbx,%rcx
    2d7b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    2d7f:	49 89 c0             	mov    %rax,%r8
    2d82:	e8 00 00 00 00       	callq  2d87 <MPI_Cart_shift+0x6b>
    2d87:	89 45 a0             	mov    %eax,-0x60(%rbp)
    2d8a:	8b 45 a0             	mov    -0x60(%rbp),%eax
    2d8d:	89 45 a4             	mov    %eax,-0x5c(%rbp)
    2d90:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    2d94:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    2d98:	b8 00 00 00 00       	mov    $0x0,%eax
    2d9d:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    2da1:	48 89 c7             	mov    %rax,%rdi
    2da4:	48 89 d6             	mov    %rdx,%rsi
    2da7:	e8 00 00 00 00       	callq  2dac <MPI_Cart_shift+0x90>
    2dac:	8b 45 a4             	mov    -0x5c(%rbp),%eax
    2daf:	48 8b 5d f0          	mov    -0x10(%rbp),%rbx
    2db3:	c9                   	leaveq 
    2db4:	c3                   	retq   

0000000000002db5 <MPI_Cart_sub>:
    2db5:	55                   	push   %rbp
    2db6:	48 89 e5             	mov    %rsp,%rbp
    2db9:	48 83 ec 40          	sub    $0x40,%rsp
    2dbd:	89 7d c8             	mov    %edi,-0x38(%rbp)
    2dc0:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    2dc4:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
    2dc8:	48 8b 45 08          	mov    0x8(%rbp),%rax
    2dcc:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    2dd0:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    2dd4:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    2dd8:	b8 00 00 00 00       	mov    $0x0,%eax
    2ddd:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    2de1:	48 89 c7             	mov    %rax,%rdi
    2de4:	48 89 d6             	mov    %rdx,%rsi
    2de7:	e8 00 00 00 00       	callq  2dec <MPI_Cart_sub+0x37>
    2dec:	8b 45 c8             	mov    -0x38(%rbp),%eax
    2def:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    2df3:	48 8b 4d d8          	mov    -0x28(%rbp),%rcx
    2df7:	89 c7                	mov    %eax,%edi
    2df9:	48 89 d6             	mov    %rdx,%rsi
    2dfc:	48 89 ca             	mov    %rcx,%rdx
    2dff:	e8 00 00 00 00       	callq  2e04 <MPI_Cart_sub+0x4f>
    2e04:	89 45 c0             	mov    %eax,-0x40(%rbp)
    2e07:	8b 45 c0             	mov    -0x40(%rbp),%eax
    2e0a:	89 45 c4             	mov    %eax,-0x3c(%rbp)
    2e0d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    2e11:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    2e15:	b8 00 00 00 00       	mov    $0x0,%eax
    2e1a:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    2e1e:	48 89 c7             	mov    %rax,%rdi
    2e21:	48 89 d6             	mov    %rdx,%rsi
    2e24:	e8 00 00 00 00       	callq  2e29 <MPI_Cart_sub+0x74>
    2e29:	8b 45 c4             	mov    -0x3c(%rbp),%eax
    2e2c:	c9                   	leaveq 
    2e2d:	c3                   	retq   

0000000000002e2e <MPI_Cartdim_get>:
    2e2e:	55                   	push   %rbp
    2e2f:	48 89 e5             	mov    %rsp,%rbp
    2e32:	48 83 ec 30          	sub    $0x30,%rsp
    2e36:	89 7d d8             	mov    %edi,-0x28(%rbp)
    2e39:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    2e3d:	48 8b 45 08          	mov    0x8(%rbp),%rax
    2e41:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    2e45:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    2e49:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    2e4d:	b8 00 00 00 00       	mov    $0x0,%eax
    2e52:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    2e56:	48 89 c7             	mov    %rax,%rdi
    2e59:	48 89 d6             	mov    %rdx,%rsi
    2e5c:	e8 00 00 00 00       	callq  2e61 <MPI_Cartdim_get+0x33>
    2e61:	8b 45 d8             	mov    -0x28(%rbp),%eax
    2e64:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    2e68:	89 c7                	mov    %eax,%edi
    2e6a:	48 89 d6             	mov    %rdx,%rsi
    2e6d:	e8 00 00 00 00       	callq  2e72 <MPI_Cartdim_get+0x44>
    2e72:	89 45 d0             	mov    %eax,-0x30(%rbp)
    2e75:	8b 45 d0             	mov    -0x30(%rbp),%eax
    2e78:	89 45 d4             	mov    %eax,-0x2c(%rbp)
    2e7b:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    2e7f:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    2e83:	b8 00 00 00 00       	mov    $0x0,%eax
    2e88:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    2e8c:	48 89 c7             	mov    %rax,%rdi
    2e8f:	48 89 d6             	mov    %rdx,%rsi
    2e92:	e8 00 00 00 00       	callq  2e97 <MPI_Cartdim_get+0x69>
    2e97:	8b 45 d4             	mov    -0x2c(%rbp),%eax
    2e9a:	c9                   	leaveq 
    2e9b:	c3                   	retq   

0000000000002e9c <MPI_Dims_create>:
    2e9c:	55                   	push   %rbp
    2e9d:	48 89 e5             	mov    %rsp,%rbp
    2ea0:	48 83 ec 40          	sub    $0x40,%rsp
    2ea4:	89 7d c8             	mov    %edi,-0x38(%rbp)
    2ea7:	89 75 d0             	mov    %esi,-0x30(%rbp)
    2eaa:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
    2eae:	48 8b 45 08          	mov    0x8(%rbp),%rax
    2eb2:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    2eb6:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    2eba:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    2ebe:	b8 00 00 00 00       	mov    $0x0,%eax
    2ec3:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    2ec7:	48 89 c7             	mov    %rax,%rdi
    2eca:	48 89 d6             	mov    %rdx,%rsi
    2ecd:	e8 00 00 00 00       	callq  2ed2 <MPI_Dims_create+0x36>
    2ed2:	8b 45 c8             	mov    -0x38(%rbp),%eax
    2ed5:	8b 55 d0             	mov    -0x30(%rbp),%edx
    2ed8:	48 8b 4d d8          	mov    -0x28(%rbp),%rcx
    2edc:	89 c7                	mov    %eax,%edi
    2ede:	89 d6                	mov    %edx,%esi
    2ee0:	48 89 ca             	mov    %rcx,%rdx
    2ee3:	e8 00 00 00 00       	callq  2ee8 <MPI_Dims_create+0x4c>
    2ee8:	89 45 c0             	mov    %eax,-0x40(%rbp)
    2eeb:	8b 45 c0             	mov    -0x40(%rbp),%eax
    2eee:	89 45 c4             	mov    %eax,-0x3c(%rbp)
    2ef1:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    2ef5:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    2ef9:	b8 00 00 00 00       	mov    $0x0,%eax
    2efe:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    2f02:	48 89 c7             	mov    %rax,%rdi
    2f05:	48 89 d6             	mov    %rdx,%rsi
    2f08:	e8 00 00 00 00       	callq  2f0d <MPI_Dims_create+0x71>
    2f0d:	8b 45 c4             	mov    -0x3c(%rbp),%eax
    2f10:	c9                   	leaveq 
    2f11:	c3                   	retq   

0000000000002f12 <MPI_Graph_create>:
    2f12:	55                   	push   %rbp
    2f13:	48 89 e5             	mov    %rsp,%rbp
    2f16:	48 83 ec 70          	sub    $0x70,%rsp
    2f1a:	48 89 5d f0          	mov    %rbx,-0x10(%rbp)
    2f1e:	89 7d 98             	mov    %edi,-0x68(%rbp)
    2f21:	89 75 a0             	mov    %esi,-0x60(%rbp)
    2f24:	48 89 55 a8          	mov    %rdx,-0x58(%rbp)
    2f28:	48 89 4d b0          	mov    %rcx,-0x50(%rbp)
    2f2c:	44 89 45 b8          	mov    %r8d,-0x48(%rbp)
    2f30:	4c 89 4d c0          	mov    %r9,-0x40(%rbp)
    2f34:	48 8b 45 08          	mov    0x8(%rbp),%rax
    2f38:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
    2f3c:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    2f40:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
    2f44:	b8 00 00 00 00       	mov    $0x0,%eax
    2f49:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    2f4d:	48 89 c7             	mov    %rax,%rdi
    2f50:	48 89 d6             	mov    %rdx,%rsi
    2f53:	e8 00 00 00 00       	callq  2f58 <MPI_Graph_create+0x46>
    2f58:	8b 45 98             	mov    -0x68(%rbp),%eax
    2f5b:	8b 55 a0             	mov    -0x60(%rbp),%edx
    2f5e:	48 8b 4d a8          	mov    -0x58(%rbp),%rcx
    2f62:	48 8b 5d b0          	mov    -0x50(%rbp),%rbx
    2f66:	8b 75 b8             	mov    -0x48(%rbp),%esi
    2f69:	48 8b 7d c0          	mov    -0x40(%rbp),%rdi
    2f6d:	48 89 7d e0          	mov    %rdi,-0x20(%rbp)
    2f71:	89 c7                	mov    %eax,%edi
    2f73:	89 75 e8             	mov    %esi,-0x18(%rbp)
    2f76:	89 d6                	mov    %edx,%esi
    2f78:	48 89 ca             	mov    %rcx,%rdx
    2f7b:	48 89 d9             	mov    %rbx,%rcx
    2f7e:	8b 45 e8             	mov    -0x18(%rbp),%eax
    2f81:	41 89 c0             	mov    %eax,%r8d
    2f84:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    2f88:	49 89 c1             	mov    %rax,%r9
    2f8b:	e8 00 00 00 00       	callq  2f90 <MPI_Graph_create+0x7e>
    2f90:	89 45 90             	mov    %eax,-0x70(%rbp)
    2f93:	8b 45 90             	mov    -0x70(%rbp),%eax
    2f96:	89 45 94             	mov    %eax,-0x6c(%rbp)
    2f99:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    2f9d:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
    2fa1:	b8 00 00 00 00       	mov    $0x0,%eax
    2fa6:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    2faa:	48 89 c7             	mov    %rax,%rdi
    2fad:	48 89 d6             	mov    %rdx,%rsi
    2fb0:	e8 00 00 00 00       	callq  2fb5 <MPI_Graph_create+0xa3>
    2fb5:	8b 45 94             	mov    -0x6c(%rbp),%eax
    2fb8:	48 8b 5d f0          	mov    -0x10(%rbp),%rbx
    2fbc:	c9                   	leaveq 
    2fbd:	c3                   	retq   

0000000000002fbe <MPI_Graph_get>:
    2fbe:	55                   	push   %rbp
    2fbf:	48 89 e5             	mov    %rsp,%rbp
    2fc2:	48 83 ec 60          	sub    $0x60,%rsp
    2fc6:	48 89 5d f0          	mov    %rbx,-0x10(%rbp)
    2fca:	89 7d a8             	mov    %edi,-0x58(%rbp)
    2fcd:	89 75 b0             	mov    %esi,-0x50(%rbp)
    2fd0:	89 55 b8             	mov    %edx,-0x48(%rbp)
    2fd3:	48 89 4d c0          	mov    %rcx,-0x40(%rbp)
    2fd7:	4c 89 45 c8          	mov    %r8,-0x38(%rbp)
    2fdb:	48 8b 45 08          	mov    0x8(%rbp),%rax
    2fdf:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
    2fe3:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    2fe7:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
    2feb:	b8 00 00 00 00       	mov    $0x0,%eax
    2ff0:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    2ff4:	48 89 c7             	mov    %rax,%rdi
    2ff7:	48 89 d6             	mov    %rdx,%rsi
    2ffa:	e8 00 00 00 00       	callq  2fff <MPI_Graph_get+0x41>
    2fff:	8b 45 a8             	mov    -0x58(%rbp),%eax
    3002:	8b 55 b0             	mov    -0x50(%rbp),%edx
    3005:	8b 4d b8             	mov    -0x48(%rbp),%ecx
    3008:	48 8b 5d c0          	mov    -0x40(%rbp),%rbx
    300c:	48 8b 75 c8          	mov    -0x38(%rbp),%rsi
    3010:	89 c7                	mov    %eax,%edi
    3012:	48 89 75 e8          	mov    %rsi,-0x18(%rbp)
    3016:	89 d6                	mov    %edx,%esi
    3018:	89 ca                	mov    %ecx,%edx
    301a:	48 89 d9             	mov    %rbx,%rcx
    301d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    3021:	49 89 c0             	mov    %rax,%r8
    3024:	e8 00 00 00 00       	callq  3029 <MPI_Graph_get+0x6b>
    3029:	89 45 a0             	mov    %eax,-0x60(%rbp)
    302c:	8b 45 a0             	mov    -0x60(%rbp),%eax
    302f:	89 45 a4             	mov    %eax,-0x5c(%rbp)
    3032:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    3036:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    303a:	b8 00 00 00 00       	mov    $0x0,%eax
    303f:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    3043:	48 89 c7             	mov    %rax,%rdi
    3046:	48 89 d6             	mov    %rdx,%rsi
    3049:	e8 00 00 00 00       	callq  304e <MPI_Graph_get+0x90>
    304e:	8b 45 a4             	mov    -0x5c(%rbp),%eax
    3051:	48 8b 5d f0          	mov    -0x10(%rbp),%rbx
    3055:	c9                   	leaveq 
    3056:	c3                   	retq   

0000000000003057 <MPI_Graph_map>:
    3057:	55                   	push   %rbp
    3058:	48 89 e5             	mov    %rsp,%rbp
    305b:	48 83 ec 60          	sub    $0x60,%rsp
    305f:	48 89 5d f0          	mov    %rbx,-0x10(%rbp)
    3063:	89 7d a8             	mov    %edi,-0x58(%rbp)
    3066:	89 75 b0             	mov    %esi,-0x50(%rbp)
    3069:	48 89 55 b8          	mov    %rdx,-0x48(%rbp)
    306d:	48 89 4d c0          	mov    %rcx,-0x40(%rbp)
    3071:	4c 89 45 c8          	mov    %r8,-0x38(%rbp)
    3075:	48 8b 45 08          	mov    0x8(%rbp),%rax
    3079:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
    307d:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    3081:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
    3085:	b8 00 00 00 00       	mov    $0x0,%eax
    308a:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    308e:	48 89 c7             	mov    %rax,%rdi
    3091:	48 89 d6             	mov    %rdx,%rsi
    3094:	e8 00 00 00 00       	callq  3099 <MPI_Graph_map+0x42>
    3099:	8b 45 a8             	mov    -0x58(%rbp),%eax
    309c:	8b 55 b0             	mov    -0x50(%rbp),%edx
    309f:	48 8b 4d b8          	mov    -0x48(%rbp),%rcx
    30a3:	48 8b 5d c0          	mov    -0x40(%rbp),%rbx
    30a7:	48 8b 75 c8          	mov    -0x38(%rbp),%rsi
    30ab:	89 c7                	mov    %eax,%edi
    30ad:	48 89 75 e8          	mov    %rsi,-0x18(%rbp)
    30b1:	89 d6                	mov    %edx,%esi
    30b3:	48 89 ca             	mov    %rcx,%rdx
    30b6:	48 89 d9             	mov    %rbx,%rcx
    30b9:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    30bd:	49 89 c0             	mov    %rax,%r8
    30c0:	e8 00 00 00 00       	callq  30c5 <MPI_Graph_map+0x6e>
    30c5:	89 45 a0             	mov    %eax,-0x60(%rbp)
    30c8:	8b 45 a0             	mov    -0x60(%rbp),%eax
    30cb:	89 45 a4             	mov    %eax,-0x5c(%rbp)
    30ce:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    30d2:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    30d6:	b8 00 00 00 00       	mov    $0x0,%eax
    30db:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    30df:	48 89 c7             	mov    %rax,%rdi
    30e2:	48 89 d6             	mov    %rdx,%rsi
    30e5:	e8 00 00 00 00       	callq  30ea <MPI_Graph_map+0x93>
    30ea:	8b 45 a4             	mov    -0x5c(%rbp),%eax
    30ed:	48 8b 5d f0          	mov    -0x10(%rbp),%rbx
    30f1:	c9                   	leaveq 
    30f2:	c3                   	retq   

00000000000030f3 <MPI_Graph_neighbors>:
    30f3:	55                   	push   %rbp
    30f4:	48 89 e5             	mov    %rsp,%rbp
    30f7:	48 83 ec 50          	sub    $0x50,%rsp
    30fb:	48 89 5d f0          	mov    %rbx,-0x10(%rbp)
    30ff:	89 7d b8             	mov    %edi,-0x48(%rbp)
    3102:	89 75 c0             	mov    %esi,-0x40(%rbp)
    3105:	89 55 c8             	mov    %edx,-0x38(%rbp)
    3108:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
    310c:	48 8b 45 08          	mov    0x8(%rbp),%rax
    3110:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
    3114:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    3118:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    311c:	b8 00 00 00 00       	mov    $0x0,%eax
    3121:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    3125:	48 89 c7             	mov    %rax,%rdi
    3128:	48 89 d6             	mov    %rdx,%rsi
    312b:	e8 00 00 00 00       	callq  3130 <MPI_Graph_neighbors+0x3d>
    3130:	8b 45 b8             	mov    -0x48(%rbp),%eax
    3133:	8b 55 c0             	mov    -0x40(%rbp),%edx
    3136:	8b 4d c8             	mov    -0x38(%rbp),%ecx
    3139:	48 8b 5d d0          	mov    -0x30(%rbp),%rbx
    313d:	89 c7                	mov    %eax,%edi
    313f:	89 d6                	mov    %edx,%esi
    3141:	89 ca                	mov    %ecx,%edx
    3143:	48 89 d9             	mov    %rbx,%rcx
    3146:	e8 00 00 00 00       	callq  314b <MPI_Graph_neighbors+0x58>
    314b:	89 45 b0             	mov    %eax,-0x50(%rbp)
    314e:	8b 45 b0             	mov    -0x50(%rbp),%eax
    3151:	89 45 b4             	mov    %eax,-0x4c(%rbp)
    3154:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    3158:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    315c:	b8 00 00 00 00       	mov    $0x0,%eax
    3161:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    3165:	48 89 c7             	mov    %rax,%rdi
    3168:	48 89 d6             	mov    %rdx,%rsi
    316b:	e8 00 00 00 00       	callq  3170 <MPI_Graph_neighbors+0x7d>
    3170:	8b 45 b4             	mov    -0x4c(%rbp),%eax
    3173:	48 8b 5d f0          	mov    -0x10(%rbp),%rbx
    3177:	c9                   	leaveq 
    3178:	c3                   	retq   

0000000000003179 <MPI_Graph_neighbors_count>:
    3179:	55                   	push   %rbp
    317a:	48 89 e5             	mov    %rsp,%rbp
    317d:	48 83 ec 40          	sub    $0x40,%rsp
    3181:	89 7d c8             	mov    %edi,-0x38(%rbp)
    3184:	89 75 d0             	mov    %esi,-0x30(%rbp)
    3187:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
    318b:	48 8b 45 08          	mov    0x8(%rbp),%rax
    318f:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    3193:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    3197:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    319b:	b8 00 00 00 00       	mov    $0x0,%eax
    31a0:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    31a4:	48 89 c7             	mov    %rax,%rdi
    31a7:	48 89 d6             	mov    %rdx,%rsi
    31aa:	e8 00 00 00 00       	callq  31af <MPI_Graph_neighbors_count+0x36>
    31af:	8b 45 c8             	mov    -0x38(%rbp),%eax
    31b2:	8b 55 d0             	mov    -0x30(%rbp),%edx
    31b5:	48 8b 4d d8          	mov    -0x28(%rbp),%rcx
    31b9:	89 c7                	mov    %eax,%edi
    31bb:	89 d6                	mov    %edx,%esi
    31bd:	48 89 ca             	mov    %rcx,%rdx
    31c0:	e8 00 00 00 00       	callq  31c5 <MPI_Graph_neighbors_count+0x4c>
    31c5:	89 45 c0             	mov    %eax,-0x40(%rbp)
    31c8:	8b 45 c0             	mov    -0x40(%rbp),%eax
    31cb:	89 45 c4             	mov    %eax,-0x3c(%rbp)
    31ce:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    31d2:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    31d6:	b8 00 00 00 00       	mov    $0x0,%eax
    31db:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    31df:	48 89 c7             	mov    %rax,%rdi
    31e2:	48 89 d6             	mov    %rdx,%rsi
    31e5:	e8 00 00 00 00       	callq  31ea <MPI_Graph_neighbors_count+0x71>
    31ea:	8b 45 c4             	mov    -0x3c(%rbp),%eax
    31ed:	c9                   	leaveq 
    31ee:	c3                   	retq   

00000000000031ef <MPI_Graphdims_get>:
    31ef:	55                   	push   %rbp
    31f0:	48 89 e5             	mov    %rsp,%rbp
    31f3:	48 83 ec 40          	sub    $0x40,%rsp
    31f7:	89 7d c8             	mov    %edi,-0x38(%rbp)
    31fa:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    31fe:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
    3202:	48 8b 45 08          	mov    0x8(%rbp),%rax
    3206:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    320a:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    320e:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    3212:	b8 00 00 00 00       	mov    $0x0,%eax
    3217:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    321b:	48 89 c7             	mov    %rax,%rdi
    321e:	48 89 d6             	mov    %rdx,%rsi
    3221:	e8 00 00 00 00       	callq  3226 <MPI_Graphdims_get+0x37>
    3226:	8b 45 c8             	mov    -0x38(%rbp),%eax
    3229:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    322d:	48 8b 4d d8          	mov    -0x28(%rbp),%rcx
    3231:	89 c7                	mov    %eax,%edi
    3233:	48 89 d6             	mov    %rdx,%rsi
    3236:	48 89 ca             	mov    %rcx,%rdx
    3239:	e8 00 00 00 00       	callq  323e <MPI_Graphdims_get+0x4f>
    323e:	89 45 c0             	mov    %eax,-0x40(%rbp)
    3241:	8b 45 c0             	mov    -0x40(%rbp),%eax
    3244:	89 45 c4             	mov    %eax,-0x3c(%rbp)
    3247:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    324b:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    324f:	b8 00 00 00 00       	mov    $0x0,%eax
    3254:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    3258:	48 89 c7             	mov    %rax,%rdi
    325b:	48 89 d6             	mov    %rdx,%rsi
    325e:	e8 00 00 00 00       	callq  3263 <MPI_Graphdims_get+0x74>
    3263:	8b 45 c4             	mov    -0x3c(%rbp),%eax
    3266:	c9                   	leaveq 
    3267:	c3                   	retq   

0000000000003268 <MPI_Topo_test>:
    3268:	55                   	push   %rbp
    3269:	48 89 e5             	mov    %rsp,%rbp
    326c:	48 83 ec 30          	sub    $0x30,%rsp
    3270:	89 7d d8             	mov    %edi,-0x28(%rbp)
    3273:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    3277:	48 8b 45 08          	mov    0x8(%rbp),%rax
    327b:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    327f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    3283:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    3287:	b8 00 00 00 00       	mov    $0x0,%eax
    328c:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    3290:	48 89 c7             	mov    %rax,%rdi
    3293:	48 89 d6             	mov    %rdx,%rsi
    3296:	e8 00 00 00 00       	callq  329b <MPI_Topo_test+0x33>
    329b:	8b 45 d8             	mov    -0x28(%rbp),%eax
    329e:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    32a2:	89 c7                	mov    %eax,%edi
    32a4:	48 89 d6             	mov    %rdx,%rsi
    32a7:	e8 00 00 00 00       	callq  32ac <MPI_Topo_test+0x44>
    32ac:	89 45 d0             	mov    %eax,-0x30(%rbp)
    32af:	8b 45 d0             	mov    -0x30(%rbp),%eax
    32b2:	89 45 d4             	mov    %eax,-0x2c(%rbp)
    32b5:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    32b9:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    32bd:	b8 00 00 00 00       	mov    $0x0,%eax
    32c2:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    32c6:	48 89 c7             	mov    %rax,%rdi
    32c9:	48 89 d6             	mov    %rdx,%rsi
    32cc:	e8 00 00 00 00       	callq  32d1 <MPI_Topo_test+0x69>
    32d1:	8b 45 d4             	mov    -0x2c(%rbp),%eax
    32d4:	c9                   	leaveq 
    32d5:	c3                   	retq   

00000000000032d6 <MPI_Abort>:
    32d6:	55                   	push   %rbp
    32d7:	48 89 e5             	mov    %rsp,%rbp
    32da:	48 83 ec 30          	sub    $0x30,%rsp
    32de:	89 7d d8             	mov    %edi,-0x28(%rbp)
    32e1:	89 75 e0             	mov    %esi,-0x20(%rbp)
    32e4:	48 8b 45 08          	mov    0x8(%rbp),%rax
    32e8:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    32ec:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    32f0:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    32f4:	b8 00 00 00 00       	mov    $0x0,%eax
    32f9:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    32fd:	48 89 c7             	mov    %rax,%rdi
    3300:	48 89 d6             	mov    %rdx,%rsi
    3303:	e8 00 00 00 00       	callq  3308 <MPI_Abort+0x32>
    3308:	8b 45 d8             	mov    -0x28(%rbp),%eax
    330b:	8b 55 e0             	mov    -0x20(%rbp),%edx
    330e:	89 c7                	mov    %eax,%edi
    3310:	89 d6                	mov    %edx,%esi
    3312:	e8 00 00 00 00       	callq  3317 <MPI_Abort+0x41>
    3317:	89 45 d0             	mov    %eax,-0x30(%rbp)
    331a:	8b 45 d0             	mov    -0x30(%rbp),%eax
    331d:	89 45 d4             	mov    %eax,-0x2c(%rbp)
    3320:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    3324:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    3328:	b8 00 00 00 00       	mov    $0x0,%eax
    332d:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    3331:	48 89 c7             	mov    %rax,%rdi
    3334:	48 89 d6             	mov    %rdx,%rsi
    3337:	e8 00 00 00 00       	callq  333c <MPI_Abort+0x66>
    333c:	8b 45 d4             	mov    -0x2c(%rbp),%eax
    333f:	c9                   	leaveq 
    3340:	c3                   	retq   

0000000000003341 <MPI_Error_class>:
    3341:	55                   	push   %rbp
    3342:	48 89 e5             	mov    %rsp,%rbp
    3345:	48 83 ec 30          	sub    $0x30,%rsp
    3349:	89 7d d8             	mov    %edi,-0x28(%rbp)
    334c:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    3350:	48 8b 45 08          	mov    0x8(%rbp),%rax
    3354:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    3358:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    335c:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    3360:	b8 00 00 00 00       	mov    $0x0,%eax
    3365:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    3369:	48 89 c7             	mov    %rax,%rdi
    336c:	48 89 d6             	mov    %rdx,%rsi
    336f:	e8 00 00 00 00       	callq  3374 <MPI_Error_class+0x33>
    3374:	8b 45 d8             	mov    -0x28(%rbp),%eax
    3377:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    337b:	89 c7                	mov    %eax,%edi
    337d:	48 89 d6             	mov    %rdx,%rsi
    3380:	e8 00 00 00 00       	callq  3385 <MPI_Error_class+0x44>
    3385:	89 45 d0             	mov    %eax,-0x30(%rbp)
    3388:	8b 45 d0             	mov    -0x30(%rbp),%eax
    338b:	89 45 d4             	mov    %eax,-0x2c(%rbp)
    338e:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    3392:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    3396:	b8 00 00 00 00       	mov    $0x0,%eax
    339b:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    339f:	48 89 c7             	mov    %rax,%rdi
    33a2:	48 89 d6             	mov    %rdx,%rsi
    33a5:	e8 00 00 00 00       	callq  33aa <MPI_Error_class+0x69>
    33aa:	8b 45 d4             	mov    -0x2c(%rbp),%eax
    33ad:	c9                   	leaveq 
    33ae:	c3                   	retq   

00000000000033af <MPI_Errhandler_free>:
    33af:	55                   	push   %rbp
    33b0:	48 89 e5             	mov    %rsp,%rbp
    33b3:	48 83 ec 30          	sub    $0x30,%rsp
    33b7:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    33bb:	48 8b 45 08          	mov    0x8(%rbp),%rax
    33bf:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    33c3:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    33c7:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    33cb:	b8 00 00 00 00       	mov    $0x0,%eax
    33d0:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    33d4:	48 89 c7             	mov    %rax,%rdi
    33d7:	48 89 d6             	mov    %rdx,%rsi
    33da:	e8 00 00 00 00       	callq  33df <MPI_Errhandler_free+0x30>
    33df:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    33e3:	48 89 c7             	mov    %rax,%rdi
    33e6:	e8 00 00 00 00       	callq  33eb <MPI_Errhandler_free+0x3c>
    33eb:	89 45 d0             	mov    %eax,-0x30(%rbp)
    33ee:	8b 45 d0             	mov    -0x30(%rbp),%eax
    33f1:	89 45 d4             	mov    %eax,-0x2c(%rbp)
    33f4:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    33f8:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    33fc:	b8 00 00 00 00       	mov    $0x0,%eax
    3401:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    3405:	48 89 c7             	mov    %rax,%rdi
    3408:	48 89 d6             	mov    %rdx,%rsi
    340b:	e8 00 00 00 00       	callq  3410 <MPI_Errhandler_free+0x61>
    3410:	8b 45 d4             	mov    -0x2c(%rbp),%eax
    3413:	c9                   	leaveq 
    3414:	c3                   	retq   

0000000000003415 <MPI_Errhandler_get>:
    3415:	55                   	push   %rbp
    3416:	48 89 e5             	mov    %rsp,%rbp
    3419:	48 83 ec 30          	sub    $0x30,%rsp
    341d:	89 7d d8             	mov    %edi,-0x28(%rbp)
    3420:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    3424:	48 8b 45 08          	mov    0x8(%rbp),%rax
    3428:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    342c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    3430:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    3434:	b8 00 00 00 00       	mov    $0x0,%eax
    3439:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    343d:	48 89 c7             	mov    %rax,%rdi
    3440:	48 89 d6             	mov    %rdx,%rsi
    3443:	e8 00 00 00 00       	callq  3448 <MPI_Errhandler_get+0x33>
    3448:	8b 45 d8             	mov    -0x28(%rbp),%eax
    344b:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    344f:	89 c7                	mov    %eax,%edi
    3451:	48 89 d6             	mov    %rdx,%rsi
    3454:	e8 00 00 00 00       	callq  3459 <MPI_Errhandler_get+0x44>
    3459:	89 45 d0             	mov    %eax,-0x30(%rbp)
    345c:	8b 45 d0             	mov    -0x30(%rbp),%eax
    345f:	89 45 d4             	mov    %eax,-0x2c(%rbp)
    3462:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    3466:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    346a:	b8 00 00 00 00       	mov    $0x0,%eax
    346f:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    3473:	48 89 c7             	mov    %rax,%rdi
    3476:	48 89 d6             	mov    %rdx,%rsi
    3479:	e8 00 00 00 00       	callq  347e <MPI_Errhandler_get+0x69>
    347e:	8b 45 d4             	mov    -0x2c(%rbp),%eax
    3481:	c9                   	leaveq 
    3482:	c3                   	retq   

0000000000003483 <MPI_Error_string>:
    3483:	55                   	push   %rbp
    3484:	48 89 e5             	mov    %rsp,%rbp
    3487:	48 83 ec 40          	sub    $0x40,%rsp
    348b:	89 7d c8             	mov    %edi,-0x38(%rbp)
    348e:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    3492:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
    3496:	48 8b 45 08          	mov    0x8(%rbp),%rax
    349a:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    349e:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    34a2:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    34a6:	b8 00 00 00 00       	mov    $0x0,%eax
    34ab:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    34af:	48 89 c7             	mov    %rax,%rdi
    34b2:	48 89 d6             	mov    %rdx,%rsi
    34b5:	e8 00 00 00 00       	callq  34ba <MPI_Error_string+0x37>
    34ba:	8b 45 c8             	mov    -0x38(%rbp),%eax
    34bd:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    34c1:	48 8b 4d d8          	mov    -0x28(%rbp),%rcx
    34c5:	89 c7                	mov    %eax,%edi
    34c7:	48 89 d6             	mov    %rdx,%rsi
    34ca:	48 89 ca             	mov    %rcx,%rdx
    34cd:	e8 00 00 00 00       	callq  34d2 <MPI_Error_string+0x4f>
    34d2:	89 45 c0             	mov    %eax,-0x40(%rbp)
    34d5:	8b 45 c0             	mov    -0x40(%rbp),%eax
    34d8:	89 45 c4             	mov    %eax,-0x3c(%rbp)
    34db:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    34df:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    34e3:	b8 00 00 00 00       	mov    $0x0,%eax
    34e8:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    34ec:	48 89 c7             	mov    %rax,%rdi
    34ef:	48 89 d6             	mov    %rdx,%rsi
    34f2:	e8 00 00 00 00       	callq  34f7 <MPI_Error_string+0x74>
    34f7:	8b 45 c4             	mov    -0x3c(%rbp),%eax
    34fa:	c9                   	leaveq 
    34fb:	c3                   	retq   

00000000000034fc <MPI_Errhandler_set>:
    34fc:	55                   	push   %rbp
    34fd:	48 89 e5             	mov    %rsp,%rbp
    3500:	48 83 ec 30          	sub    $0x30,%rsp
    3504:	89 7d d8             	mov    %edi,-0x28(%rbp)
    3507:	89 75 e0             	mov    %esi,-0x20(%rbp)
    350a:	48 8b 45 08          	mov    0x8(%rbp),%rax
    350e:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    3512:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    3516:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    351a:	b8 00 00 00 00       	mov    $0x0,%eax
    351f:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    3523:	48 89 c7             	mov    %rax,%rdi
    3526:	48 89 d6             	mov    %rdx,%rsi
    3529:	e8 00 00 00 00       	callq  352e <MPI_Errhandler_set+0x32>
    352e:	8b 45 d8             	mov    -0x28(%rbp),%eax
    3531:	8b 55 e0             	mov    -0x20(%rbp),%edx
    3534:	89 c7                	mov    %eax,%edi
    3536:	89 d6                	mov    %edx,%esi
    3538:	e8 00 00 00 00       	callq  353d <MPI_Errhandler_set+0x41>
    353d:	89 45 d0             	mov    %eax,-0x30(%rbp)
    3540:	8b 45 d0             	mov    -0x30(%rbp),%eax
    3543:	89 45 d4             	mov    %eax,-0x2c(%rbp)
    3546:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    354a:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    354e:	b8 00 00 00 00       	mov    $0x0,%eax
    3553:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    3557:	48 89 c7             	mov    %rax,%rdi
    355a:	48 89 d6             	mov    %rdx,%rsi
    355d:	e8 00 00 00 00       	callq  3562 <MPI_Errhandler_set+0x66>
    3562:	8b 45 d4             	mov    -0x2c(%rbp),%eax
    3565:	c9                   	leaveq 
    3566:	c3                   	retq   

0000000000003567 <MPI_Get_processor_name>:
    3567:	55                   	push   %rbp
    3568:	48 89 e5             	mov    %rsp,%rbp
    356b:	48 83 ec 30          	sub    $0x30,%rsp
    356f:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    3573:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    3577:	48 8b 45 08          	mov    0x8(%rbp),%rax
    357b:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    357f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    3583:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    3587:	b8 00 00 00 00       	mov    $0x0,%eax
    358c:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    3590:	48 89 c7             	mov    %rax,%rdi
    3593:	48 89 d6             	mov    %rdx,%rsi
    3596:	e8 00 00 00 00       	callq  359b <MPI_Get_processor_name+0x34>
    359b:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    359f:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    35a3:	48 89 c7             	mov    %rax,%rdi
    35a6:	48 89 d6             	mov    %rdx,%rsi
    35a9:	e8 00 00 00 00       	callq  35ae <MPI_Get_processor_name+0x47>
    35ae:	89 45 d0             	mov    %eax,-0x30(%rbp)
    35b1:	8b 45 d0             	mov    -0x30(%rbp),%eax
    35b4:	89 45 d4             	mov    %eax,-0x2c(%rbp)
    35b7:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    35bb:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    35bf:	b8 00 00 00 00       	mov    $0x0,%eax
    35c4:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    35c8:	48 89 c7             	mov    %rax,%rdi
    35cb:	48 89 d6             	mov    %rdx,%rsi
    35ce:	e8 00 00 00 00       	callq  35d3 <MPI_Get_processor_name+0x6c>
    35d3:	8b 45 d4             	mov    -0x2c(%rbp),%eax
    35d6:	c9                   	leaveq 
    35d7:	c3                   	retq   

00000000000035d8 <MPI_Wtick>:
    35d8:	55                   	push   %rbp
    35d9:	48 89 e5             	mov    %rsp,%rbp
    35dc:	48 83 ec 30          	sub    $0x30,%rsp
    35e0:	48 8b 45 08          	mov    0x8(%rbp),%rax
    35e4:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
    35e8:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    35ec:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
    35f0:	b8 00 00 00 00       	mov    $0x0,%eax
    35f5:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    35f9:	48 89 c7             	mov    %rax,%rdi
    35fc:	48 89 d6             	mov    %rdx,%rsi
    35ff:	e8 00 00 00 00       	callq  3604 <MPI_Wtick+0x2c>
    3604:	e8 00 00 00 00       	callq  3609 <MPI_Wtick+0x31>
    3609:	f2 0f 11 45 e0       	movsd  %xmm0,-0x20(%rbp)
    360e:	f2 0f 10 45 e0       	movsd  -0x20(%rbp),%xmm0
    3613:	f2 0f 11 45 e8       	movsd  %xmm0,-0x18(%rbp)
    3618:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    361c:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    3620:	b8 00 00 00 00       	mov    $0x0,%eax
    3625:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    3629:	48 89 c7             	mov    %rax,%rdi
    362c:	48 89 d6             	mov    %rdx,%rsi
    362f:	e8 00 00 00 00       	callq  3634 <MPI_Wtick+0x5c>
    3634:	f2 0f 10 45 e8       	movsd  -0x18(%rbp),%xmm0
    3639:	c9                   	leaveq 
    363a:	c3                   	retq   

000000000000363b <MPI_Wtime>:
    363b:	55                   	push   %rbp
    363c:	48 89 e5             	mov    %rsp,%rbp
    363f:	48 83 ec 30          	sub    $0x30,%rsp
    3643:	48 8b 45 08          	mov    0x8(%rbp),%rax
    3647:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
    364b:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    364f:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
    3653:	b8 00 00 00 00       	mov    $0x0,%eax
    3658:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    365c:	48 89 c7             	mov    %rax,%rdi
    365f:	48 89 d6             	mov    %rdx,%rsi
    3662:	e8 00 00 00 00       	callq  3667 <MPI_Wtime+0x2c>
    3667:	e8 00 00 00 00       	callq  366c <MPI_Wtime+0x31>
    366c:	f2 0f 11 45 e0       	movsd  %xmm0,-0x20(%rbp)
    3671:	f2 0f 10 45 e0       	movsd  -0x20(%rbp),%xmm0
    3676:	f2 0f 11 45 e8       	movsd  %xmm0,-0x18(%rbp)
    367b:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    367f:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    3683:	b8 00 00 00 00       	mov    $0x0,%eax
    3688:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    368c:	48 89 c7             	mov    %rax,%rdi
    368f:	48 89 d6             	mov    %rdx,%rsi
    3692:	e8 00 00 00 00       	callq  3697 <MPI_Wtime+0x5c>
    3697:	f2 0f 10 45 e8       	movsd  -0x18(%rbp),%xmm0
    369c:	c9                   	leaveq 
    369d:	c3                   	retq   

000000000000369e <MPI_Address>:
    369e:	55                   	push   %rbp
    369f:	48 89 e5             	mov    %rsp,%rbp
    36a2:	48 83 ec 30          	sub    $0x30,%rsp
    36a6:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    36aa:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    36ae:	48 8b 45 08          	mov    0x8(%rbp),%rax
    36b2:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    36b6:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    36ba:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    36be:	b8 00 00 00 00       	mov    $0x0,%eax
    36c3:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    36c7:	48 89 c7             	mov    %rax,%rdi
    36ca:	48 89 d6             	mov    %rdx,%rsi
    36cd:	e8 00 00 00 00       	callq  36d2 <MPI_Address+0x34>
    36d2:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    36d6:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    36da:	48 89 c7             	mov    %rax,%rdi
    36dd:	48 89 d6             	mov    %rdx,%rsi
    36e0:	e8 00 00 00 00       	callq  36e5 <MPI_Address+0x47>
    36e5:	89 45 d0             	mov    %eax,-0x30(%rbp)
    36e8:	8b 45 d0             	mov    -0x30(%rbp),%eax
    36eb:	89 45 d4             	mov    %eax,-0x2c(%rbp)
    36ee:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    36f2:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    36f6:	b8 00 00 00 00       	mov    $0x0,%eax
    36fb:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    36ff:	48 89 c7             	mov    %rax,%rdi
    3702:	48 89 d6             	mov    %rdx,%rsi
    3705:	e8 00 00 00 00       	callq  370a <MPI_Address+0x6c>
    370a:	8b 45 d4             	mov    -0x2c(%rbp),%eax
    370d:	c9                   	leaveq 
    370e:	c3                   	retq   

000000000000370f <MPI_Op_create>:
    370f:	55                   	push   %rbp
    3710:	48 89 e5             	mov    %rsp,%rbp
    3713:	48 83 ec 40          	sub    $0x40,%rsp
    3717:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
    371b:	89 75 d0             	mov    %esi,-0x30(%rbp)
    371e:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
    3722:	48 8b 45 08          	mov    0x8(%rbp),%rax
    3726:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    372a:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    372e:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    3732:	b8 00 00 00 00       	mov    $0x0,%eax
    3737:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    373b:	48 89 c7             	mov    %rax,%rdi
    373e:	48 89 d6             	mov    %rdx,%rsi
    3741:	e8 00 00 00 00       	callq  3746 <MPI_Op_create+0x37>
    3746:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    374a:	8b 55 d0             	mov    -0x30(%rbp),%edx
    374d:	48 8b 4d d8          	mov    -0x28(%rbp),%rcx
    3751:	48 89 c7             	mov    %rax,%rdi
    3754:	89 d6                	mov    %edx,%esi
    3756:	48 89 ca             	mov    %rcx,%rdx
    3759:	e8 00 00 00 00       	callq  375e <MPI_Op_create+0x4f>
    375e:	89 45 c0             	mov    %eax,-0x40(%rbp)
    3761:	8b 45 c0             	mov    -0x40(%rbp),%eax
    3764:	89 45 c4             	mov    %eax,-0x3c(%rbp)
    3767:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    376b:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    376f:	b8 00 00 00 00       	mov    $0x0,%eax
    3774:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    3778:	48 89 c7             	mov    %rax,%rdi
    377b:	48 89 d6             	mov    %rdx,%rsi
    377e:	e8 00 00 00 00       	callq  3783 <MPI_Op_create+0x74>
    3783:	8b 45 c4             	mov    -0x3c(%rbp),%eax
    3786:	c9                   	leaveq 
    3787:	c3                   	retq   

0000000000003788 <MPI_Op_free>:
    3788:	55                   	push   %rbp
    3789:	48 89 e5             	mov    %rsp,%rbp
    378c:	48 83 ec 30          	sub    $0x30,%rsp
    3790:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    3794:	48 8b 45 08          	mov    0x8(%rbp),%rax
    3798:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    379c:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    37a0:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    37a4:	b8 00 00 00 00       	mov    $0x0,%eax
    37a9:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    37ad:	48 89 c7             	mov    %rax,%rdi
    37b0:	48 89 d6             	mov    %rdx,%rsi
    37b3:	e8 00 00 00 00       	callq  37b8 <MPI_Op_free+0x30>
    37b8:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    37bc:	48 89 c7             	mov    %rax,%rdi
    37bf:	e8 00 00 00 00       	callq  37c4 <MPI_Op_free+0x3c>
    37c4:	89 45 d0             	mov    %eax,-0x30(%rbp)
    37c7:	8b 45 d0             	mov    -0x30(%rbp),%eax
    37ca:	89 45 d4             	mov    %eax,-0x2c(%rbp)
    37cd:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    37d1:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    37d5:	b8 00 00 00 00       	mov    $0x0,%eax
    37da:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    37de:	48 89 c7             	mov    %rax,%rdi
    37e1:	48 89 d6             	mov    %rdx,%rsi
    37e4:	e8 00 00 00 00       	callq  37e9 <MPI_Op_free+0x61>
    37e9:	8b 45 d4             	mov    -0x2c(%rbp),%eax
    37ec:	c9                   	leaveq 
    37ed:	c3                   	retq   

00000000000037ee <MPI_Attr_delete>:
    37ee:	55                   	push   %rbp
    37ef:	48 89 e5             	mov    %rsp,%rbp
    37f2:	48 83 ec 30          	sub    $0x30,%rsp
    37f6:	89 7d d8             	mov    %edi,-0x28(%rbp)
    37f9:	89 75 e0             	mov    %esi,-0x20(%rbp)
    37fc:	48 8b 45 08          	mov    0x8(%rbp),%rax
    3800:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    3804:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    3808:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    380c:	b8 00 00 00 00       	mov    $0x0,%eax
    3811:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    3815:	48 89 c7             	mov    %rax,%rdi
    3818:	48 89 d6             	mov    %rdx,%rsi
    381b:	e8 00 00 00 00       	callq  3820 <MPI_Attr_delete+0x32>
    3820:	8b 45 d8             	mov    -0x28(%rbp),%eax
    3823:	8b 55 e0             	mov    -0x20(%rbp),%edx
    3826:	89 c7                	mov    %eax,%edi
    3828:	89 d6                	mov    %edx,%esi
    382a:	e8 00 00 00 00       	callq  382f <MPI_Attr_delete+0x41>
    382f:	89 45 d0             	mov    %eax,-0x30(%rbp)
    3832:	8b 45 d0             	mov    -0x30(%rbp),%eax
    3835:	89 45 d4             	mov    %eax,-0x2c(%rbp)
    3838:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    383c:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    3840:	b8 00 00 00 00       	mov    $0x0,%eax
    3845:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    3849:	48 89 c7             	mov    %rax,%rdi
    384c:	48 89 d6             	mov    %rdx,%rsi
    384f:	e8 00 00 00 00       	callq  3854 <MPI_Attr_delete+0x66>
    3854:	8b 45 d4             	mov    -0x2c(%rbp),%eax
    3857:	c9                   	leaveq 
    3858:	c3                   	retq   

0000000000003859 <MPI_Attr_get>:
    3859:	55                   	push   %rbp
    385a:	48 89 e5             	mov    %rsp,%rbp
    385d:	48 83 ec 50          	sub    $0x50,%rsp
    3861:	48 89 5d f0          	mov    %rbx,-0x10(%rbp)
    3865:	89 7d b8             	mov    %edi,-0x48(%rbp)
    3868:	89 75 c0             	mov    %esi,-0x40(%rbp)
    386b:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
    386f:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
    3873:	48 8b 45 08          	mov    0x8(%rbp),%rax
    3877:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
    387b:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    387f:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    3883:	b8 00 00 00 00       	mov    $0x0,%eax
    3888:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    388c:	48 89 c7             	mov    %rax,%rdi
    388f:	48 89 d6             	mov    %rdx,%rsi
    3892:	e8 00 00 00 00       	callq  3897 <MPI_Attr_get+0x3e>
    3897:	8b 45 b8             	mov    -0x48(%rbp),%eax
    389a:	8b 55 c0             	mov    -0x40(%rbp),%edx
    389d:	48 8b 4d c8          	mov    -0x38(%rbp),%rcx
    38a1:	48 8b 5d d0          	mov    -0x30(%rbp),%rbx
    38a5:	89 c7                	mov    %eax,%edi
    38a7:	89 d6                	mov    %edx,%esi
    38a9:	48 89 ca             	mov    %rcx,%rdx
    38ac:	48 89 d9             	mov    %rbx,%rcx
    38af:	e8 00 00 00 00       	callq  38b4 <MPI_Attr_get+0x5b>
    38b4:	89 45 b0             	mov    %eax,-0x50(%rbp)
    38b7:	8b 45 b0             	mov    -0x50(%rbp),%eax
    38ba:	89 45 b4             	mov    %eax,-0x4c(%rbp)
    38bd:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    38c1:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    38c5:	b8 00 00 00 00       	mov    $0x0,%eax
    38ca:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    38ce:	48 89 c7             	mov    %rax,%rdi
    38d1:	48 89 d6             	mov    %rdx,%rsi
    38d4:	e8 00 00 00 00       	callq  38d9 <MPI_Attr_get+0x80>
    38d9:	8b 45 b4             	mov    -0x4c(%rbp),%eax
    38dc:	48 8b 5d f0          	mov    -0x10(%rbp),%rbx
    38e0:	c9                   	leaveq 
    38e1:	c3                   	retq   

00000000000038e2 <MPI_Attr_put>:
    38e2:	55                   	push   %rbp
    38e3:	48 89 e5             	mov    %rsp,%rbp
    38e6:	48 83 ec 40          	sub    $0x40,%rsp
    38ea:	89 7d c8             	mov    %edi,-0x38(%rbp)
    38ed:	89 75 d0             	mov    %esi,-0x30(%rbp)
    38f0:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
    38f4:	48 8b 45 08          	mov    0x8(%rbp),%rax
    38f8:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    38fc:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    3900:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    3904:	b8 00 00 00 00       	mov    $0x0,%eax
    3909:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    390d:	48 89 c7             	mov    %rax,%rdi
    3910:	48 89 d6             	mov    %rdx,%rsi
    3913:	e8 00 00 00 00       	callq  3918 <MPI_Attr_put+0x36>
    3918:	8b 45 c8             	mov    -0x38(%rbp),%eax
    391b:	8b 55 d0             	mov    -0x30(%rbp),%edx
    391e:	48 8b 4d d8          	mov    -0x28(%rbp),%rcx
    3922:	89 c7                	mov    %eax,%edi
    3924:	89 d6                	mov    %edx,%esi
    3926:	48 89 ca             	mov    %rcx,%rdx
    3929:	e8 00 00 00 00       	callq  392e <MPI_Attr_put+0x4c>
    392e:	89 45 c0             	mov    %eax,-0x40(%rbp)
    3931:	8b 45 c0             	mov    -0x40(%rbp),%eax
    3934:	89 45 c4             	mov    %eax,-0x3c(%rbp)
    3937:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    393b:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    393f:	b8 00 00 00 00       	mov    $0x0,%eax
    3944:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    3948:	48 89 c7             	mov    %rax,%rdi
    394b:	48 89 d6             	mov    %rdx,%rsi
    394e:	e8 00 00 00 00       	callq  3953 <MPI_Attr_put+0x71>
    3953:	8b 45 c4             	mov    -0x3c(%rbp),%eax
    3956:	c9                   	leaveq 
    3957:	c3                   	retq   

0000000000003958 <MPI_Buffer_attach>:
    3958:	55                   	push   %rbp
    3959:	48 89 e5             	mov    %rsp,%rbp
    395c:	48 83 ec 30          	sub    $0x30,%rsp
    3960:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    3964:	89 75 e0             	mov    %esi,-0x20(%rbp)
    3967:	48 8b 45 08          	mov    0x8(%rbp),%rax
    396b:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    396f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    3973:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    3977:	b8 00 00 00 00       	mov    $0x0,%eax
    397c:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    3980:	48 89 c7             	mov    %rax,%rdi
    3983:	48 89 d6             	mov    %rdx,%rsi
    3986:	e8 00 00 00 00       	callq  398b <MPI_Buffer_attach+0x33>
    398b:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    398f:	8b 55 e0             	mov    -0x20(%rbp),%edx
    3992:	48 89 c7             	mov    %rax,%rdi
    3995:	89 d6                	mov    %edx,%esi
    3997:	e8 00 00 00 00       	callq  399c <MPI_Buffer_attach+0x44>
    399c:	89 45 d0             	mov    %eax,-0x30(%rbp)
    399f:	8b 45 d0             	mov    -0x30(%rbp),%eax
    39a2:	89 45 d4             	mov    %eax,-0x2c(%rbp)
    39a5:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    39a9:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    39ad:	b8 00 00 00 00       	mov    $0x0,%eax
    39b2:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    39b6:	48 89 c7             	mov    %rax,%rdi
    39b9:	48 89 d6             	mov    %rdx,%rsi
    39bc:	e8 00 00 00 00       	callq  39c1 <MPI_Buffer_attach+0x69>
    39c1:	8b 45 d4             	mov    -0x2c(%rbp),%eax
    39c4:	c9                   	leaveq 
    39c5:	c3                   	retq   

00000000000039c6 <MPI_Buffer_detach>:
    39c6:	55                   	push   %rbp
    39c7:	48 89 e5             	mov    %rsp,%rbp
    39ca:	48 83 ec 30          	sub    $0x30,%rsp
    39ce:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    39d2:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    39d6:	48 8b 45 08          	mov    0x8(%rbp),%rax
    39da:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    39de:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    39e2:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    39e6:	b8 00 00 00 00       	mov    $0x0,%eax
    39eb:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    39ef:	48 89 c7             	mov    %rax,%rdi
    39f2:	48 89 d6             	mov    %rdx,%rsi
    39f5:	e8 00 00 00 00       	callq  39fa <MPI_Buffer_detach+0x34>
    39fa:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    39fe:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    3a02:	48 89 c7             	mov    %rax,%rdi
    3a05:	48 89 d6             	mov    %rdx,%rsi
    3a08:	e8 00 00 00 00       	callq  3a0d <MPI_Buffer_detach+0x47>
    3a0d:	89 45 d0             	mov    %eax,-0x30(%rbp)
    3a10:	8b 45 d0             	mov    -0x30(%rbp),%eax
    3a13:	89 45 d4             	mov    %eax,-0x2c(%rbp)
    3a16:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    3a1a:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    3a1e:	b8 00 00 00 00       	mov    $0x0,%eax
    3a23:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    3a27:	48 89 c7             	mov    %rax,%rdi
    3a2a:	48 89 d6             	mov    %rdx,%rsi
    3a2d:	e8 00 00 00 00       	callq  3a32 <MPI_Buffer_detach+0x6c>
    3a32:	8b 45 d4             	mov    -0x2c(%rbp),%eax
    3a35:	c9                   	leaveq 
    3a36:	c3                   	retq   

0000000000003a37 <MPI_Get_elements>:
    3a37:	55                   	push   %rbp
    3a38:	48 89 e5             	mov    %rsp,%rbp
    3a3b:	48 83 ec 40          	sub    $0x40,%rsp
    3a3f:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
    3a43:	89 75 d0             	mov    %esi,-0x30(%rbp)
    3a46:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
    3a4a:	48 8b 45 08          	mov    0x8(%rbp),%rax
    3a4e:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    3a52:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    3a56:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    3a5a:	b8 00 00 00 00       	mov    $0x0,%eax
    3a5f:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    3a63:	48 89 c7             	mov    %rax,%rdi
    3a66:	48 89 d6             	mov    %rdx,%rsi
    3a69:	e8 00 00 00 00       	callq  3a6e <MPI_Get_elements+0x37>
    3a6e:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    3a72:	8b 55 d0             	mov    -0x30(%rbp),%edx
    3a75:	48 8b 4d d8          	mov    -0x28(%rbp),%rcx
    3a79:	48 89 c7             	mov    %rax,%rdi
    3a7c:	89 d6                	mov    %edx,%esi
    3a7e:	48 89 ca             	mov    %rcx,%rdx
    3a81:	e8 00 00 00 00       	callq  3a86 <MPI_Get_elements+0x4f>
    3a86:	89 45 c0             	mov    %eax,-0x40(%rbp)
    3a89:	8b 45 c0             	mov    -0x40(%rbp),%eax
    3a8c:	89 45 c4             	mov    %eax,-0x3c(%rbp)
    3a8f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    3a93:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    3a97:	b8 00 00 00 00       	mov    $0x0,%eax
    3a9c:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    3aa0:	48 89 c7             	mov    %rax,%rdi
    3aa3:	48 89 d6             	mov    %rdx,%rsi
    3aa6:	e8 00 00 00 00       	callq  3aab <MPI_Get_elements+0x74>
    3aab:	8b 45 c4             	mov    -0x3c(%rbp),%eax
    3aae:	c9                   	leaveq 
    3aaf:	c3                   	retq   

0000000000003ab0 <MPI_Get_count>:
    3ab0:	55                   	push   %rbp
    3ab1:	48 89 e5             	mov    %rsp,%rbp
    3ab4:	48 83 ec 40          	sub    $0x40,%rsp
    3ab8:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
    3abc:	89 75 d0             	mov    %esi,-0x30(%rbp)
    3abf:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
    3ac3:	48 8b 45 08          	mov    0x8(%rbp),%rax
    3ac7:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    3acb:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    3acf:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    3ad3:	b8 00 00 00 00       	mov    $0x0,%eax
    3ad8:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    3adc:	48 89 c7             	mov    %rax,%rdi
    3adf:	48 89 d6             	mov    %rdx,%rsi
    3ae2:	e8 00 00 00 00       	callq  3ae7 <MPI_Get_count+0x37>
    3ae7:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    3aeb:	8b 55 d0             	mov    -0x30(%rbp),%edx
    3aee:	48 8b 4d d8          	mov    -0x28(%rbp),%rcx
    3af2:	48 89 c7             	mov    %rax,%rdi
    3af5:	89 d6                	mov    %edx,%esi
    3af7:	48 89 ca             	mov    %rcx,%rdx
    3afa:	e8 00 00 00 00       	callq  3aff <MPI_Get_count+0x4f>
    3aff:	89 45 c0             	mov    %eax,-0x40(%rbp)
    3b02:	8b 45 c0             	mov    -0x40(%rbp),%eax
    3b05:	89 45 c4             	mov    %eax,-0x3c(%rbp)
    3b08:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    3b0c:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    3b10:	b8 00 00 00 00       	mov    $0x0,%eax
    3b15:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    3b19:	48 89 c7             	mov    %rax,%rdi
    3b1c:	48 89 d6             	mov    %rdx,%rsi
    3b1f:	e8 00 00 00 00       	callq  3b24 <MPI_Get_count+0x74>
    3b24:	8b 45 c4             	mov    -0x3c(%rbp),%eax
    3b27:	c9                   	leaveq 
    3b28:	c3                   	retq   

0000000000003b29 <MPI_Type_commit>:
    3b29:	55                   	push   %rbp
    3b2a:	48 89 e5             	mov    %rsp,%rbp
    3b2d:	48 83 ec 30          	sub    $0x30,%rsp
    3b31:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    3b35:	48 8b 45 08          	mov    0x8(%rbp),%rax
    3b39:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    3b3d:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    3b41:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    3b45:	b8 00 00 00 00       	mov    $0x0,%eax
    3b4a:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    3b4e:	48 89 c7             	mov    %rax,%rdi
    3b51:	48 89 d6             	mov    %rdx,%rsi
    3b54:	e8 00 00 00 00       	callq  3b59 <MPI_Type_commit+0x30>
    3b59:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    3b5d:	48 89 c7             	mov    %rax,%rdi
    3b60:	e8 00 00 00 00       	callq  3b65 <MPI_Type_commit+0x3c>
    3b65:	89 45 d0             	mov    %eax,-0x30(%rbp)
    3b68:	8b 45 d0             	mov    -0x30(%rbp),%eax
    3b6b:	89 45 d4             	mov    %eax,-0x2c(%rbp)
    3b6e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    3b72:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    3b76:	b8 00 00 00 00       	mov    $0x0,%eax
    3b7b:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    3b7f:	48 89 c7             	mov    %rax,%rdi
    3b82:	48 89 d6             	mov    %rdx,%rsi
    3b85:	e8 00 00 00 00       	callq  3b8a <MPI_Type_commit+0x61>
    3b8a:	8b 45 d4             	mov    -0x2c(%rbp),%eax
    3b8d:	c9                   	leaveq 
    3b8e:	c3                   	retq   

0000000000003b8f <MPI_Type_contiguous>:
    3b8f:	55                   	push   %rbp
    3b90:	48 89 e5             	mov    %rsp,%rbp
    3b93:	48 83 ec 40          	sub    $0x40,%rsp
    3b97:	89 7d c8             	mov    %edi,-0x38(%rbp)
    3b9a:	89 75 d0             	mov    %esi,-0x30(%rbp)
    3b9d:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
    3ba1:	48 8b 45 08          	mov    0x8(%rbp),%rax
    3ba5:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    3ba9:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    3bad:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    3bb1:	b8 00 00 00 00       	mov    $0x0,%eax
    3bb6:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    3bba:	48 89 c7             	mov    %rax,%rdi
    3bbd:	48 89 d6             	mov    %rdx,%rsi
    3bc0:	e8 00 00 00 00       	callq  3bc5 <MPI_Type_contiguous+0x36>
    3bc5:	8b 45 c8             	mov    -0x38(%rbp),%eax
    3bc8:	8b 55 d0             	mov    -0x30(%rbp),%edx
    3bcb:	48 8b 4d d8          	mov    -0x28(%rbp),%rcx
    3bcf:	89 c7                	mov    %eax,%edi
    3bd1:	89 d6                	mov    %edx,%esi
    3bd3:	48 89 ca             	mov    %rcx,%rdx
    3bd6:	e8 00 00 00 00       	callq  3bdb <MPI_Type_contiguous+0x4c>
    3bdb:	89 45 c0             	mov    %eax,-0x40(%rbp)
    3bde:	8b 45 c0             	mov    -0x40(%rbp),%eax
    3be1:	89 45 c4             	mov    %eax,-0x3c(%rbp)
    3be4:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    3be8:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    3bec:	b8 00 00 00 00       	mov    $0x0,%eax
    3bf1:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    3bf5:	48 89 c7             	mov    %rax,%rdi
    3bf8:	48 89 d6             	mov    %rdx,%rsi
    3bfb:	e8 00 00 00 00       	callq  3c00 <MPI_Type_contiguous+0x71>
    3c00:	8b 45 c4             	mov    -0x3c(%rbp),%eax
    3c03:	c9                   	leaveq 
    3c04:	c3                   	retq   

0000000000003c05 <MPI_Type_extent>:
    3c05:	55                   	push   %rbp
    3c06:	48 89 e5             	mov    %rsp,%rbp
    3c09:	48 83 ec 30          	sub    $0x30,%rsp
    3c0d:	89 7d d8             	mov    %edi,-0x28(%rbp)
    3c10:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    3c14:	48 8b 45 08          	mov    0x8(%rbp),%rax
    3c18:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    3c1c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    3c20:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    3c24:	b8 00 00 00 00       	mov    $0x0,%eax
    3c29:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    3c2d:	48 89 c7             	mov    %rax,%rdi
    3c30:	48 89 d6             	mov    %rdx,%rsi
    3c33:	e8 00 00 00 00       	callq  3c38 <MPI_Type_extent+0x33>
    3c38:	8b 45 d8             	mov    -0x28(%rbp),%eax
    3c3b:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    3c3f:	89 c7                	mov    %eax,%edi
    3c41:	48 89 d6             	mov    %rdx,%rsi
    3c44:	e8 00 00 00 00       	callq  3c49 <MPI_Type_extent+0x44>
    3c49:	89 45 d0             	mov    %eax,-0x30(%rbp)
    3c4c:	8b 45 d0             	mov    -0x30(%rbp),%eax
    3c4f:	89 45 d4             	mov    %eax,-0x2c(%rbp)
    3c52:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    3c56:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    3c5a:	b8 00 00 00 00       	mov    $0x0,%eax
    3c5f:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    3c63:	48 89 c7             	mov    %rax,%rdi
    3c66:	48 89 d6             	mov    %rdx,%rsi
    3c69:	e8 00 00 00 00       	callq  3c6e <MPI_Type_extent+0x69>
    3c6e:	8b 45 d4             	mov    -0x2c(%rbp),%eax
    3c71:	c9                   	leaveq 
    3c72:	c3                   	retq   

0000000000003c73 <MPI_Type_free>:
    3c73:	55                   	push   %rbp
    3c74:	48 89 e5             	mov    %rsp,%rbp
    3c77:	48 83 ec 30          	sub    $0x30,%rsp
    3c7b:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    3c7f:	48 8b 45 08          	mov    0x8(%rbp),%rax
    3c83:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    3c87:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    3c8b:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    3c8f:	b8 00 00 00 00       	mov    $0x0,%eax
    3c94:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    3c98:	48 89 c7             	mov    %rax,%rdi
    3c9b:	48 89 d6             	mov    %rdx,%rsi
    3c9e:	e8 00 00 00 00       	callq  3ca3 <MPI_Type_free+0x30>
    3ca3:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    3ca7:	48 89 c7             	mov    %rax,%rdi
    3caa:	e8 00 00 00 00       	callq  3caf <MPI_Type_free+0x3c>
    3caf:	89 45 d0             	mov    %eax,-0x30(%rbp)
    3cb2:	8b 45 d0             	mov    -0x30(%rbp),%eax
    3cb5:	89 45 d4             	mov    %eax,-0x2c(%rbp)
    3cb8:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    3cbc:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    3cc0:	b8 00 00 00 00       	mov    $0x0,%eax
    3cc5:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    3cc9:	48 89 c7             	mov    %rax,%rdi
    3ccc:	48 89 d6             	mov    %rdx,%rsi
    3ccf:	e8 00 00 00 00       	callq  3cd4 <MPI_Type_free+0x61>
    3cd4:	8b 45 d4             	mov    -0x2c(%rbp),%eax
    3cd7:	c9                   	leaveq 
    3cd8:	c3                   	retq   

0000000000003cd9 <MPI_Type_hindexed>:
    3cd9:	55                   	push   %rbp
    3cda:	48 89 e5             	mov    %rsp,%rbp
    3cdd:	48 83 ec 60          	sub    $0x60,%rsp
    3ce1:	48 89 5d f0          	mov    %rbx,-0x10(%rbp)
    3ce5:	89 7d a8             	mov    %edi,-0x58(%rbp)
    3ce8:	48 89 75 b0          	mov    %rsi,-0x50(%rbp)
    3cec:	48 89 55 b8          	mov    %rdx,-0x48(%rbp)
    3cf0:	89 4d c0             	mov    %ecx,-0x40(%rbp)
    3cf3:	4c 89 45 c8          	mov    %r8,-0x38(%rbp)
    3cf7:	48 8b 45 08          	mov    0x8(%rbp),%rax
    3cfb:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
    3cff:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    3d03:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
    3d07:	b8 00 00 00 00       	mov    $0x0,%eax
    3d0c:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    3d10:	48 89 c7             	mov    %rax,%rdi
    3d13:	48 89 d6             	mov    %rdx,%rsi
    3d16:	e8 00 00 00 00       	callq  3d1b <MPI_Type_hindexed+0x42>
    3d1b:	8b 45 a8             	mov    -0x58(%rbp),%eax
    3d1e:	48 8b 55 b0          	mov    -0x50(%rbp),%rdx
    3d22:	48 8b 4d b8          	mov    -0x48(%rbp),%rcx
    3d26:	8b 5d c0             	mov    -0x40(%rbp),%ebx
    3d29:	48 8b 75 c8          	mov    -0x38(%rbp),%rsi
    3d2d:	89 c7                	mov    %eax,%edi
    3d2f:	48 89 75 e8          	mov    %rsi,-0x18(%rbp)
    3d33:	48 89 d6             	mov    %rdx,%rsi
    3d36:	48 89 ca             	mov    %rcx,%rdx
    3d39:	89 d9                	mov    %ebx,%ecx
    3d3b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    3d3f:	49 89 c0             	mov    %rax,%r8
    3d42:	e8 00 00 00 00       	callq  3d47 <MPI_Type_hindexed+0x6e>
    3d47:	89 45 a0             	mov    %eax,-0x60(%rbp)
    3d4a:	8b 45 a0             	mov    -0x60(%rbp),%eax
    3d4d:	89 45 a4             	mov    %eax,-0x5c(%rbp)
    3d50:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    3d54:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    3d58:	b8 00 00 00 00       	mov    $0x0,%eax
    3d5d:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    3d61:	48 89 c7             	mov    %rax,%rdi
    3d64:	48 89 d6             	mov    %rdx,%rsi
    3d67:	e8 00 00 00 00       	callq  3d6c <MPI_Type_hindexed+0x93>
    3d6c:	8b 45 a4             	mov    -0x5c(%rbp),%eax
    3d6f:	48 8b 5d f0          	mov    -0x10(%rbp),%rbx
    3d73:	c9                   	leaveq 
    3d74:	c3                   	retq   

0000000000003d75 <MPI_Type_hvector>:
    3d75:	55                   	push   %rbp
    3d76:	48 89 e5             	mov    %rsp,%rbp
    3d79:	48 83 ec 60          	sub    $0x60,%rsp
    3d7d:	48 89 5d f0          	mov    %rbx,-0x10(%rbp)
    3d81:	89 7d a8             	mov    %edi,-0x58(%rbp)
    3d84:	89 75 b0             	mov    %esi,-0x50(%rbp)
    3d87:	48 89 55 b8          	mov    %rdx,-0x48(%rbp)
    3d8b:	89 4d c0             	mov    %ecx,-0x40(%rbp)
    3d8e:	4c 89 45 c8          	mov    %r8,-0x38(%rbp)
    3d92:	48 8b 45 08          	mov    0x8(%rbp),%rax
    3d96:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
    3d9a:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    3d9e:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
    3da2:	b8 00 00 00 00       	mov    $0x0,%eax
    3da7:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    3dab:	48 89 c7             	mov    %rax,%rdi
    3dae:	48 89 d6             	mov    %rdx,%rsi
    3db1:	e8 00 00 00 00       	callq  3db6 <MPI_Type_hvector+0x41>
    3db6:	8b 45 a8             	mov    -0x58(%rbp),%eax
    3db9:	8b 55 b0             	mov    -0x50(%rbp),%edx
    3dbc:	48 8b 4d b8          	mov    -0x48(%rbp),%rcx
    3dc0:	8b 5d c0             	mov    -0x40(%rbp),%ebx
    3dc3:	48 8b 75 c8          	mov    -0x38(%rbp),%rsi
    3dc7:	89 c7                	mov    %eax,%edi
    3dc9:	48 89 75 e8          	mov    %rsi,-0x18(%rbp)
    3dcd:	89 d6                	mov    %edx,%esi
    3dcf:	48 89 ca             	mov    %rcx,%rdx
    3dd2:	89 d9                	mov    %ebx,%ecx
    3dd4:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    3dd8:	49 89 c0             	mov    %rax,%r8
    3ddb:	e8 00 00 00 00       	callq  3de0 <MPI_Type_hvector+0x6b>
    3de0:	89 45 a0             	mov    %eax,-0x60(%rbp)
    3de3:	8b 45 a0             	mov    -0x60(%rbp),%eax
    3de6:	89 45 a4             	mov    %eax,-0x5c(%rbp)
    3de9:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    3ded:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    3df1:	b8 00 00 00 00       	mov    $0x0,%eax
    3df6:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    3dfa:	48 89 c7             	mov    %rax,%rdi
    3dfd:	48 89 d6             	mov    %rdx,%rsi
    3e00:	e8 00 00 00 00       	callq  3e05 <MPI_Type_hvector+0x90>
    3e05:	8b 45 a4             	mov    -0x5c(%rbp),%eax
    3e08:	48 8b 5d f0          	mov    -0x10(%rbp),%rbx
    3e0c:	c9                   	leaveq 
    3e0d:	c3                   	retq   

0000000000003e0e <MPI_Type_indexed>:
    3e0e:	55                   	push   %rbp
    3e0f:	48 89 e5             	mov    %rsp,%rbp
    3e12:	48 83 ec 60          	sub    $0x60,%rsp
    3e16:	48 89 5d f0          	mov    %rbx,-0x10(%rbp)
    3e1a:	89 7d a8             	mov    %edi,-0x58(%rbp)
    3e1d:	48 89 75 b0          	mov    %rsi,-0x50(%rbp)
    3e21:	48 89 55 b8          	mov    %rdx,-0x48(%rbp)
    3e25:	89 4d c0             	mov    %ecx,-0x40(%rbp)
    3e28:	4c 89 45 c8          	mov    %r8,-0x38(%rbp)
    3e2c:	48 8b 45 08          	mov    0x8(%rbp),%rax
    3e30:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
    3e34:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    3e38:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
    3e3c:	b8 00 00 00 00       	mov    $0x0,%eax
    3e41:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    3e45:	48 89 c7             	mov    %rax,%rdi
    3e48:	48 89 d6             	mov    %rdx,%rsi
    3e4b:	e8 00 00 00 00       	callq  3e50 <MPI_Type_indexed+0x42>
    3e50:	8b 45 a8             	mov    -0x58(%rbp),%eax
    3e53:	48 8b 55 b0          	mov    -0x50(%rbp),%rdx
    3e57:	48 8b 4d b8          	mov    -0x48(%rbp),%rcx
    3e5b:	8b 5d c0             	mov    -0x40(%rbp),%ebx
    3e5e:	48 8b 75 c8          	mov    -0x38(%rbp),%rsi
    3e62:	89 c7                	mov    %eax,%edi
    3e64:	48 89 75 e8          	mov    %rsi,-0x18(%rbp)
    3e68:	48 89 d6             	mov    %rdx,%rsi
    3e6b:	48 89 ca             	mov    %rcx,%rdx
    3e6e:	89 d9                	mov    %ebx,%ecx
    3e70:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    3e74:	49 89 c0             	mov    %rax,%r8
    3e77:	e8 00 00 00 00       	callq  3e7c <MPI_Type_indexed+0x6e>
    3e7c:	89 45 a0             	mov    %eax,-0x60(%rbp)
    3e7f:	8b 45 a0             	mov    -0x60(%rbp),%eax
    3e82:	89 45 a4             	mov    %eax,-0x5c(%rbp)
    3e85:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    3e89:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    3e8d:	b8 00 00 00 00       	mov    $0x0,%eax
    3e92:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    3e96:	48 89 c7             	mov    %rax,%rdi
    3e99:	48 89 d6             	mov    %rdx,%rsi
    3e9c:	e8 00 00 00 00       	callq  3ea1 <MPI_Type_indexed+0x93>
    3ea1:	8b 45 a4             	mov    -0x5c(%rbp),%eax
    3ea4:	48 8b 5d f0          	mov    -0x10(%rbp),%rbx
    3ea8:	c9                   	leaveq 
    3ea9:	c3                   	retq   

0000000000003eaa <MPI_Type_lb>:
    3eaa:	55                   	push   %rbp
    3eab:	48 89 e5             	mov    %rsp,%rbp
    3eae:	48 83 ec 30          	sub    $0x30,%rsp
    3eb2:	89 7d d8             	mov    %edi,-0x28(%rbp)
    3eb5:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    3eb9:	48 8b 45 08          	mov    0x8(%rbp),%rax
    3ebd:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    3ec1:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    3ec5:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    3ec9:	b8 00 00 00 00       	mov    $0x0,%eax
    3ece:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    3ed2:	48 89 c7             	mov    %rax,%rdi
    3ed5:	48 89 d6             	mov    %rdx,%rsi
    3ed8:	e8 00 00 00 00       	callq  3edd <MPI_Type_lb+0x33>
    3edd:	8b 45 d8             	mov    -0x28(%rbp),%eax
    3ee0:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    3ee4:	89 c7                	mov    %eax,%edi
    3ee6:	48 89 d6             	mov    %rdx,%rsi
    3ee9:	e8 00 00 00 00       	callq  3eee <MPI_Type_lb+0x44>
    3eee:	89 45 d0             	mov    %eax,-0x30(%rbp)
    3ef1:	8b 45 d0             	mov    -0x30(%rbp),%eax
    3ef4:	89 45 d4             	mov    %eax,-0x2c(%rbp)
    3ef7:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    3efb:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    3eff:	b8 00 00 00 00       	mov    $0x0,%eax
    3f04:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    3f08:	48 89 c7             	mov    %rax,%rdi
    3f0b:	48 89 d6             	mov    %rdx,%rsi
    3f0e:	e8 00 00 00 00       	callq  3f13 <MPI_Type_lb+0x69>
    3f13:	8b 45 d4             	mov    -0x2c(%rbp),%eax
    3f16:	c9                   	leaveq 
    3f17:	c3                   	retq   

0000000000003f18 <MPI_Type_size>:
    3f18:	55                   	push   %rbp
    3f19:	48 89 e5             	mov    %rsp,%rbp
    3f1c:	48 83 ec 30          	sub    $0x30,%rsp
    3f20:	89 7d d8             	mov    %edi,-0x28(%rbp)
    3f23:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    3f27:	48 8b 45 08          	mov    0x8(%rbp),%rax
    3f2b:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    3f2f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    3f33:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    3f37:	b8 00 00 00 00       	mov    $0x0,%eax
    3f3c:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    3f40:	48 89 c7             	mov    %rax,%rdi
    3f43:	48 89 d6             	mov    %rdx,%rsi
    3f46:	e8 00 00 00 00       	callq  3f4b <MPI_Type_size+0x33>
    3f4b:	8b 45 d8             	mov    -0x28(%rbp),%eax
    3f4e:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    3f52:	89 c7                	mov    %eax,%edi
    3f54:	48 89 d6             	mov    %rdx,%rsi
    3f57:	e8 00 00 00 00       	callq  3f5c <MPI_Type_size+0x44>
    3f5c:	89 45 d0             	mov    %eax,-0x30(%rbp)
    3f5f:	8b 45 d0             	mov    -0x30(%rbp),%eax
    3f62:	89 45 d4             	mov    %eax,-0x2c(%rbp)
    3f65:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    3f69:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    3f6d:	b8 00 00 00 00       	mov    $0x0,%eax
    3f72:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    3f76:	48 89 c7             	mov    %rax,%rdi
    3f79:	48 89 d6             	mov    %rdx,%rsi
    3f7c:	e8 00 00 00 00       	callq  3f81 <MPI_Type_size+0x69>
    3f81:	8b 45 d4             	mov    -0x2c(%rbp),%eax
    3f84:	c9                   	leaveq 
    3f85:	c3                   	retq   

0000000000003f86 <MPI_Type_struct>:
    3f86:	55                   	push   %rbp
    3f87:	48 89 e5             	mov    %rsp,%rbp
    3f8a:	48 83 ec 60          	sub    $0x60,%rsp
    3f8e:	48 89 5d f0          	mov    %rbx,-0x10(%rbp)
    3f92:	89 7d a8             	mov    %edi,-0x58(%rbp)
    3f95:	48 89 75 b0          	mov    %rsi,-0x50(%rbp)
    3f99:	48 89 55 b8          	mov    %rdx,-0x48(%rbp)
    3f9d:	48 89 4d c0          	mov    %rcx,-0x40(%rbp)
    3fa1:	4c 89 45 c8          	mov    %r8,-0x38(%rbp)
    3fa5:	48 8b 45 08          	mov    0x8(%rbp),%rax
    3fa9:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
    3fad:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    3fb1:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
    3fb5:	b8 00 00 00 00       	mov    $0x0,%eax
    3fba:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    3fbe:	48 89 c7             	mov    %rax,%rdi
    3fc1:	48 89 d6             	mov    %rdx,%rsi
    3fc4:	e8 00 00 00 00       	callq  3fc9 <MPI_Type_struct+0x43>
    3fc9:	8b 45 a8             	mov    -0x58(%rbp),%eax
    3fcc:	48 8b 55 b0          	mov    -0x50(%rbp),%rdx
    3fd0:	48 8b 4d b8          	mov    -0x48(%rbp),%rcx
    3fd4:	48 8b 5d c0          	mov    -0x40(%rbp),%rbx
    3fd8:	48 8b 75 c8          	mov    -0x38(%rbp),%rsi
    3fdc:	89 c7                	mov    %eax,%edi
    3fde:	48 89 75 e8          	mov    %rsi,-0x18(%rbp)
    3fe2:	48 89 d6             	mov    %rdx,%rsi
    3fe5:	48 89 ca             	mov    %rcx,%rdx
    3fe8:	48 89 d9             	mov    %rbx,%rcx
    3feb:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    3fef:	49 89 c0             	mov    %rax,%r8
    3ff2:	e8 00 00 00 00       	callq  3ff7 <MPI_Type_struct+0x71>
    3ff7:	89 45 a0             	mov    %eax,-0x60(%rbp)
    3ffa:	8b 45 a0             	mov    -0x60(%rbp),%eax
    3ffd:	89 45 a4             	mov    %eax,-0x5c(%rbp)
    4000:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    4004:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    4008:	b8 00 00 00 00       	mov    $0x0,%eax
    400d:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    4011:	48 89 c7             	mov    %rax,%rdi
    4014:	48 89 d6             	mov    %rdx,%rsi
    4017:	e8 00 00 00 00       	callq  401c <MPI_Type_struct+0x96>
    401c:	8b 45 a4             	mov    -0x5c(%rbp),%eax
    401f:	48 8b 5d f0          	mov    -0x10(%rbp),%rbx
    4023:	c9                   	leaveq 
    4024:	c3                   	retq   

0000000000004025 <MPI_Type_ub>:
    4025:	55                   	push   %rbp
    4026:	48 89 e5             	mov    %rsp,%rbp
    4029:	48 83 ec 30          	sub    $0x30,%rsp
    402d:	89 7d d8             	mov    %edi,-0x28(%rbp)
    4030:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    4034:	48 8b 45 08          	mov    0x8(%rbp),%rax
    4038:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    403c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    4040:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    4044:	b8 00 00 00 00       	mov    $0x0,%eax
    4049:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    404d:	48 89 c7             	mov    %rax,%rdi
    4050:	48 89 d6             	mov    %rdx,%rsi
    4053:	e8 00 00 00 00       	callq  4058 <MPI_Type_ub+0x33>
    4058:	8b 45 d8             	mov    -0x28(%rbp),%eax
    405b:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    405f:	89 c7                	mov    %eax,%edi
    4061:	48 89 d6             	mov    %rdx,%rsi
    4064:	e8 00 00 00 00       	callq  4069 <MPI_Type_ub+0x44>
    4069:	89 45 d0             	mov    %eax,-0x30(%rbp)
    406c:	8b 45 d0             	mov    -0x30(%rbp),%eax
    406f:	89 45 d4             	mov    %eax,-0x2c(%rbp)
    4072:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    4076:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    407a:	b8 00 00 00 00       	mov    $0x0,%eax
    407f:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    4083:	48 89 c7             	mov    %rax,%rdi
    4086:	48 89 d6             	mov    %rdx,%rsi
    4089:	e8 00 00 00 00       	callq  408e <MPI_Type_ub+0x69>
    408e:	8b 45 d4             	mov    -0x2c(%rbp),%eax
    4091:	c9                   	leaveq 
    4092:	c3                   	retq   

0000000000004093 <MPI_Type_vector>:
    4093:	55                   	push   %rbp
    4094:	48 89 e5             	mov    %rsp,%rbp
    4097:	48 83 ec 60          	sub    $0x60,%rsp
    409b:	48 89 5d f0          	mov    %rbx,-0x10(%rbp)
    409f:	89 7d a8             	mov    %edi,-0x58(%rbp)
    40a2:	89 75 b0             	mov    %esi,-0x50(%rbp)
    40a5:	89 55 b8             	mov    %edx,-0x48(%rbp)
    40a8:	89 4d c0             	mov    %ecx,-0x40(%rbp)
    40ab:	4c 89 45 c8          	mov    %r8,-0x38(%rbp)
    40af:	48 8b 45 08          	mov    0x8(%rbp),%rax
    40b3:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
    40b7:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    40bb:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
    40bf:	b8 00 00 00 00       	mov    $0x0,%eax
    40c4:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    40c8:	48 89 c7             	mov    %rax,%rdi
    40cb:	48 89 d6             	mov    %rdx,%rsi
    40ce:	e8 00 00 00 00       	callq  40d3 <MPI_Type_vector+0x40>
    40d3:	8b 45 a8             	mov    -0x58(%rbp),%eax
    40d6:	8b 55 b0             	mov    -0x50(%rbp),%edx
    40d9:	8b 4d b8             	mov    -0x48(%rbp),%ecx
    40dc:	8b 5d c0             	mov    -0x40(%rbp),%ebx
    40df:	48 8b 75 c8          	mov    -0x38(%rbp),%rsi
    40e3:	89 c7                	mov    %eax,%edi
    40e5:	48 89 75 e8          	mov    %rsi,-0x18(%rbp)
    40e9:	89 d6                	mov    %edx,%esi
    40eb:	89 ca                	mov    %ecx,%edx
    40ed:	89 d9                	mov    %ebx,%ecx
    40ef:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    40f3:	49 89 c0             	mov    %rax,%r8
    40f6:	e8 00 00 00 00       	callq  40fb <MPI_Type_vector+0x68>
    40fb:	89 45 a0             	mov    %eax,-0x60(%rbp)
    40fe:	8b 45 a0             	mov    -0x60(%rbp),%eax
    4101:	89 45 a4             	mov    %eax,-0x5c(%rbp)
    4104:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    4108:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    410c:	b8 00 00 00 00       	mov    $0x0,%eax
    4111:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    4115:	48 89 c7             	mov    %rax,%rdi
    4118:	48 89 d6             	mov    %rdx,%rsi
    411b:	e8 00 00 00 00       	callq  4120 <MPI_Type_vector+0x8d>
    4120:	8b 45 a4             	mov    -0x5c(%rbp),%eax
    4123:	48 8b 5d f0          	mov    -0x10(%rbp),%rbx
    4127:	c9                   	leaveq 
    4128:	c3                   	retq   

0000000000004129 <MPI_Unpack>:
    4129:	55                   	push   %rbp
    412a:	48 89 e5             	mov    %rsp,%rbp
    412d:	48 83 ec 70          	sub    $0x70,%rsp
    4131:	48 89 5d f0          	mov    %rbx,-0x10(%rbp)
    4135:	48 89 7d 98          	mov    %rdi,-0x68(%rbp)
    4139:	89 75 a0             	mov    %esi,-0x60(%rbp)
    413c:	48 89 55 a8          	mov    %rdx,-0x58(%rbp)
    4140:	48 89 4d b0          	mov    %rcx,-0x50(%rbp)
    4144:	44 89 45 b8          	mov    %r8d,-0x48(%rbp)
    4148:	44 89 4d c0          	mov    %r9d,-0x40(%rbp)
    414c:	48 8b 45 08          	mov    0x8(%rbp),%rax
    4150:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
    4154:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    4158:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
    415c:	b8 00 00 00 00       	mov    $0x0,%eax
    4161:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    4165:	48 89 c7             	mov    %rax,%rdi
    4168:	48 89 d6             	mov    %rdx,%rsi
    416b:	e8 00 00 00 00       	callq  4170 <MPI_Unpack+0x47>
    4170:	48 83 c4 f0          	add    $0xfffffffffffffff0,%rsp
    4174:	48 8b 45 98          	mov    -0x68(%rbp),%rax
    4178:	8b 55 a0             	mov    -0x60(%rbp),%edx
    417b:	48 8b 4d a8          	mov    -0x58(%rbp),%rcx
    417f:	48 8b 5d b0          	mov    -0x50(%rbp),%rbx
    4183:	8b 75 b8             	mov    -0x48(%rbp),%esi
    4186:	8b 7d c0             	mov    -0x40(%rbp),%edi
    4189:	44 8b 45 10          	mov    0x10(%rbp),%r8d
    418d:	44 89 04 24          	mov    %r8d,(%rsp)
    4191:	89 7d e0             	mov    %edi,-0x20(%rbp)
    4194:	48 89 c7             	mov    %rax,%rdi
    4197:	89 75 e8             	mov    %esi,-0x18(%rbp)
    419a:	89 d6                	mov    %edx,%esi
    419c:	48 89 ca             	mov    %rcx,%rdx
    419f:	48 89 d9             	mov    %rbx,%rcx
    41a2:	8b 45 e8             	mov    -0x18(%rbp),%eax
    41a5:	41 89 c0             	mov    %eax,%r8d
    41a8:	8b 45 e0             	mov    -0x20(%rbp),%eax
    41ab:	41 89 c1             	mov    %eax,%r9d
    41ae:	e8 00 00 00 00       	callq  41b3 <MPI_Unpack+0x8a>
    41b3:	89 45 90             	mov    %eax,-0x70(%rbp)
    41b6:	48 83 c4 10          	add    $0x10,%rsp
    41ba:	8b 45 90             	mov    -0x70(%rbp),%eax
    41bd:	89 45 94             	mov    %eax,-0x6c(%rbp)
    41c0:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    41c4:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
    41c8:	b8 00 00 00 00       	mov    $0x0,%eax
    41cd:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    41d1:	48 89 c7             	mov    %rax,%rdi
    41d4:	48 89 d6             	mov    %rdx,%rsi
    41d7:	e8 00 00 00 00       	callq  41dc <MPI_Unpack+0xb3>
    41dc:	8b 45 94             	mov    -0x6c(%rbp),%eax
    41df:	48 8b 5d f0          	mov    -0x10(%rbp),%rbx
    41e3:	c9                   	leaveq 
    41e4:	c3                   	retq   

00000000000041e5 <MPI_Pack>:
    41e5:	55                   	push   %rbp
    41e6:	48 89 e5             	mov    %rsp,%rbp
    41e9:	48 83 ec 70          	sub    $0x70,%rsp
    41ed:	48 89 5d f0          	mov    %rbx,-0x10(%rbp)
    41f1:	48 89 7d 98          	mov    %rdi,-0x68(%rbp)
    41f5:	89 75 a0             	mov    %esi,-0x60(%rbp)
    41f8:	89 55 a8             	mov    %edx,-0x58(%rbp)
    41fb:	48 89 4d b0          	mov    %rcx,-0x50(%rbp)
    41ff:	44 89 45 b8          	mov    %r8d,-0x48(%rbp)
    4203:	4c 89 4d c0          	mov    %r9,-0x40(%rbp)
    4207:	48 8b 45 08          	mov    0x8(%rbp),%rax
    420b:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
    420f:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    4213:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
    4217:	b8 00 00 00 00       	mov    $0x0,%eax
    421c:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    4220:	48 89 c7             	mov    %rax,%rdi
    4223:	48 89 d6             	mov    %rdx,%rsi
    4226:	e8 00 00 00 00       	callq  422b <MPI_Pack+0x46>
    422b:	48 83 c4 f0          	add    $0xfffffffffffffff0,%rsp
    422f:	48 8b 45 98          	mov    -0x68(%rbp),%rax
    4233:	8b 55 a0             	mov    -0x60(%rbp),%edx
    4236:	8b 4d a8             	mov    -0x58(%rbp),%ecx
    4239:	48 8b 5d b0          	mov    -0x50(%rbp),%rbx
    423d:	8b 75 b8             	mov    -0x48(%rbp),%esi
    4240:	48 8b 7d c0          	mov    -0x40(%rbp),%rdi
    4244:	44 8b 45 10          	mov    0x10(%rbp),%r8d
    4248:	44 89 04 24          	mov    %r8d,(%rsp)
    424c:	48 89 7d e0          	mov    %rdi,-0x20(%rbp)
    4250:	48 89 c7             	mov    %rax,%rdi
    4253:	89 75 e8             	mov    %esi,-0x18(%rbp)
    4256:	89 d6                	mov    %edx,%esi
    4258:	89 ca                	mov    %ecx,%edx
    425a:	48 89 d9             	mov    %rbx,%rcx
    425d:	8b 45 e8             	mov    -0x18(%rbp),%eax
    4260:	41 89 c0             	mov    %eax,%r8d
    4263:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    4267:	49 89 c1             	mov    %rax,%r9
    426a:	e8 00 00 00 00       	callq  426f <MPI_Pack+0x8a>
    426f:	89 45 90             	mov    %eax,-0x70(%rbp)
    4272:	48 83 c4 10          	add    $0x10,%rsp
    4276:	8b 45 90             	mov    -0x70(%rbp),%eax
    4279:	89 45 94             	mov    %eax,-0x6c(%rbp)
    427c:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    4280:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
    4284:	b8 00 00 00 00       	mov    $0x0,%eax
    4289:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    428d:	48 89 c7             	mov    %rax,%rdi
    4290:	48 89 d6             	mov    %rdx,%rsi
    4293:	e8 00 00 00 00       	callq  4298 <MPI_Pack+0xb3>
    4298:	8b 45 94             	mov    -0x6c(%rbp),%eax
    429b:	48 8b 5d f0          	mov    -0x10(%rbp),%rbx
    429f:	c9                   	leaveq 
    42a0:	c3                   	retq   

00000000000042a1 <MPI_Pack_size>:
    42a1:	55                   	push   %rbp
    42a2:	48 89 e5             	mov    %rsp,%rbp
    42a5:	48 83 ec 50          	sub    $0x50,%rsp
    42a9:	48 89 5d f0          	mov    %rbx,-0x10(%rbp)
    42ad:	89 7d b8             	mov    %edi,-0x48(%rbp)
    42b0:	89 75 c0             	mov    %esi,-0x40(%rbp)
    42b3:	89 55 c8             	mov    %edx,-0x38(%rbp)
    42b6:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
    42ba:	48 8b 45 08          	mov    0x8(%rbp),%rax
    42be:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
    42c2:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    42c6:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    42ca:	b8 00 00 00 00       	mov    $0x0,%eax
    42cf:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    42d3:	48 89 c7             	mov    %rax,%rdi
    42d6:	48 89 d6             	mov    %rdx,%rsi
    42d9:	e8 00 00 00 00       	callq  42de <MPI_Pack_size+0x3d>
    42de:	8b 45 b8             	mov    -0x48(%rbp),%eax
    42e1:	8b 55 c0             	mov    -0x40(%rbp),%edx
    42e4:	8b 4d c8             	mov    -0x38(%rbp),%ecx
    42e7:	48 8b 5d d0          	mov    -0x30(%rbp),%rbx
    42eb:	89 c7                	mov    %eax,%edi
    42ed:	89 d6                	mov    %edx,%esi
    42ef:	89 ca                	mov    %ecx,%edx
    42f1:	48 89 d9             	mov    %rbx,%rcx
    42f4:	e8 00 00 00 00       	callq  42f9 <MPI_Pack_size+0x58>
    42f9:	89 45 b0             	mov    %eax,-0x50(%rbp)
    42fc:	8b 45 b0             	mov    -0x50(%rbp),%eax
    42ff:	89 45 b4             	mov    %eax,-0x4c(%rbp)
    4302:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    4306:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    430a:	b8 00 00 00 00       	mov    $0x0,%eax
    430f:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    4313:	48 89 c7             	mov    %rax,%rdi
    4316:	48 89 d6             	mov    %rdx,%rsi
    4319:	e8 00 00 00 00       	callq  431e <MPI_Pack_size+0x7d>
    431e:	8b 45 b4             	mov    -0x4c(%rbp),%eax
    4321:	48 8b 5d f0          	mov    -0x10(%rbp),%rbx
    4325:	c9                   	leaveq 
    4326:	c3                   	retq   
    4327:	90                   	nop
